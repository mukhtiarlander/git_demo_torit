using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace RDN.Library.Classes.Payment.Paypal
{
    public class PayPalMessage
    {
        public PayPalMessage()
        {
            Transactions = new List<PayPalTransaction>();
        }

        private string _postUrl = "";
        private string _strRequest = "";
        private string _smtpHost, _fromEmail, _toEmail, _fromEmailPassword, _businessWebsite, _fromEmailUserName;
        private int _smtpPort;
        string _txnID, _txnType, _paymentStatus, _receiverEmail, _itemName, _itemNumber, _quantity, _invoice, _connectionName, _custom,
 _paymentGross, _payerEmail, _pendingReason, _paymentDate, _paymentFee, _firstName, _lastName, _address,
 _city, _state, _zip, _country, _countryCode, _addressStatus, _payerStatus, _payerID, _paymentType, _notifyVersion,
 _verifySign, _response, _payerPhone, _payerBusinessName, _business, _receiverID, _memo, _tax, _qtyCartItems,
 _shippingMethod, _shipping;

        public List<PayPalTransaction> Transactions { get; set; }

        /// <summary>
        /// This is the website address of the business.  Mainly used to stuff into email.
        /// </summary>
        public string BusinessWebsite
        {
            get { return _businessWebsite; }
            set { _businessWebsite = value; }
        }

        public string RequestLength
        {
            get { return _strRequest; }
            set { _strRequest = value; }
        }

        /// <summary>
        /// Provide your outgoing email server to use are your SMTP host
        /// </summary>
        public string SmtpHost
        {
            get { return _smtpHost; }
            set { _smtpHost = value; }
        }

        /// <summary>
        /// Provide the port your outgoing SMTP host uses
        /// </summary>
        public int SmtpPort
        {
            get { return _smtpPort; }
            set { _smtpPort = value; }
        }

        /// <summary>
        /// this is the email specifically for the username for the smtp server.
        /// static could be "email"
        /// </summary>
        public string FromEmailUserName
        {
            get { return _fromEmailUserName; }
            set { _fromEmailUserName = value; }
        }

        /// <summary>
        /// This is the email address that will show to the customer and you. This most likely
        /// needs to be a valid email address that your SMTP server will accept
        /// Examples would be something like no-reply@yourdomain.com
        /// </summary>
        public string FromEmail
        {
            get { return _fromEmail; }
            set { _fromEmail = value; }
        }

        /// <summary>
        /// This is the password that the FromEmail property will use. This needs to be the password
        /// for the email account itself
        /// </summary>
        public string FromEmailPassword
        {
            get { return _fromEmailPassword; }
            set { _fromEmailPassword = value; }
        }

        /// <summary>
        /// This is the email address that you use for yourself. This should be set to
        /// the email that is registered for your PayPal account.
        /// </summary>
        public string ToEmail
        {
            get { return _toEmail; }
            set { _toEmail = value; }
        }

        /// <summary>
        /// Email address or Account ID of the payment recipient.  This is equivalent
        ///  to the value of receiver_email if the payment is sent to the primary account
        /// , which is most cases it is.  This value is that value of what is set in the button html
        /// markup.  This value also get normalized to lowercase when coming back from PayPal
        /// </summary>
        public string Business
        {
            get { return _business; }
            set { _business = value; }
        }


        /// <summary>
        /// Unique transaction ID generated by PayPal. Helpful to use for checking
        ///  against fraud to make sure the transaction hasn't already occured.
        /// </summary>
        public string TXN_ID
        {
            get { return _txnID; }
            set { _txnID = value; }
        }

        /// <summary>
        /// Type of transaction from the customer. Possible values are
        /// "cart", "express_checkout", "send_money", "virtual_terminal", "web-accept"
        /// </summary>
        public string TXN_Type
        {
            get { return _txnType; }
            set { _txnType = value; }
        }

        /// <summary>
        /// This is the status of the payment from the Customer.Possible values are: 
        /// "Canceled_Reversal", "Completed", "Denied", "Expired", "Failed", "Pending",
        ///  "Processed", "Refunded", "Reversed", "Voided"
        /// </summary>
        public string PaymentStatus
        {
            get { return _paymentStatus; }
            set { _paymentStatus = value; }
        }

        /// <summary>
        /// Primary email address of you, the recipient, of the payment.
        /// </summary>
        public string ReceiverEmail
        {
            get { return _receiverEmail; }
            set { _receiverEmail = value; }
        }

        /// <summary>
        /// unique account ID of the payment recipient, which is most likely yourself.
        /// </summary>
        public string ReceiverID
        {
            get { return _receiverID; }
            set { _receiverID = value; }
        }

        /// <summary>
        /// This is the item name passed by yourself or if the customer if you let them enter in an item name
        /// </summary>
        public string ItemName
        {
            get { return _itemName; }
            set { _itemName = value; }
        }

        /// <summary>
        /// This is the item number you set for your own tracking purposes. It is not required by PayPal
        /// so if you didn't set it most likely will come back blank.
        /// </summary>
        public string ItemNumber
        {
            get { return _itemNumber; }
            set { _itemNumber = value; }
        }



        /// <summary>
        /// Quantity of the item ordered by the customer
        /// </summary>
        public string Quantity
        {
            get { return _quantity; }
            set { _quantity = value; }
        }

        /// <summary>
        /// Quantity of the items in the shopping cart from the Customer
        /// </summary>
        public string QuantityCartItems
        {
            get { return _qtyCartItems; }
            set { _qtyCartItems = value; }
        }

        /// <summary>
        /// Invoice number passed by yourself, if you didn't pass it to PayPal then this is omitted.
        /// </summary>
        public string Invoice
        {
            get { return _invoice; }
            set { _invoice = value; }
        }
        public string ConfigurationName
        {
            get { return _connectionName; }
            set { _connectionName = value; }
        }

        /// <summary>
        /// Custom value passed by yourself with the item.
        /// </summary>
        public string Custom
        {
            get { return _custom; }
            set { _custom = value; }
        }

        /// <summary>
        /// Memo entered in by the customer on PayPal website note field
        /// </summary>
        public string Memo
        {
            get { return _memo; }
            set { _memo = value; }
        }

        /// <summary>
        /// Amount of tax charged on the payment
        /// </summary>
        public string Tax
        {
            get { return _tax; }
            set { _tax = value; }
        }

        /// <summary>
        /// Full USD amount of customer's payment before the PayPal fee is subtracted
        /// </summary>
        public string PaymentGross
        {
            get { return _paymentGross; }
            set { _paymentGross = value; }
        }

        /// <summary>
        /// Date Time stamp created by PayPal in the following format: 
        /// HH:MM:SS DD Mmm YY, YYYY PST
        /// </summary>
        public string PaymentDate
        {
            get { return _paymentDate; }
            set { _paymentDate = value; }
        }

        /// <summary>
        /// PayPal's transaction fees associated with purchase.
        /// </summary>
        public string PaymentFee
        {
            get { return _paymentFee; }
            set { _paymentFee = value; }
        }


        /// <summary>
        /// This is the email that the customer used on PayPal or that
        /// is registered with PayPal
        /// </summary>
        public string PayerEmail
        {
            get { return _payerEmail; }
            set { _payerEmail = value; }
        }

        /// <summary>
        /// Customer's phone number
        /// </summary>
        public string PayerPhone
        {
            get { return _payerPhone; }
            set { _payerPhone = value; }
        }

        /// <summary>
        /// Customer's company name if they represent a business
        /// </summary>
        public string PayerBusinessName
        {
            get { return _payerBusinessName; }
            set { _payerBusinessName = value; }
        }

        /// <summary>
        /// This variable is only set if the payment_status=Pending. Possible values are the following:
        /// "address", "authorization", "echeck", "intl", "multi-currency", "unilateral", "upgrade",
        ///  "verify", other"
        /// </summary>
        public string PendingReason
        {
            get { return _pendingReason; }
            set { _pendingReason = value; }
        }

        /// <summary>
        /// This is indicated from what is set in your PayPal profile settings
        /// </summary>
        public string ShippingMethod
        {
            get { return _shippingMethod; }
            set { _shippingMethod = value; }
        }

        /// <summary>
        /// Shipping charges associated with the order.
        /// </summary>
        public string Shipping
        {
            get { return _shipping; }
            set { _shipping = value; }
        }

        /// <summary>
        /// Customer's First Name
        /// </summary>
        public string PayerFirstName
        {
            get { return _firstName; }
            set { _firstName = value; }
        }

        /// <summary>
        /// Customer's Last Name
        /// </summary>
        public string PayerLastName
        {
            get { return _lastName; }
            set { _lastName = value; }
        }

        /// <summary>
        /// Customer's street address
        /// </summary>
        public string PayerAddress
        {
            get { return _address; }
            set { _address = value; }
        }

        /// <summary>
        /// Customer's city
        /// </summary>
        public string PayerCity
        {
            get { return _city; }
            set { _city = value; }
        }

        /// <summary>
        /// Customer state of address
        /// </summary>
        public string PayerState
        {
            get { return _state; }
            set { _state = value; }
        }

        /// <summary>
        /// Zip code of customer's address
        /// </summary>
        public string PayerZipCode
        {
            get { return _zip; }
            set { _zip = value; }
        }

        /// <summary>
        /// Customer's country
        /// </summary>
        public string PayerCountry
        {
            get { return _country; }
            set { _country = value; }
        }

        private string _payKey;
        public string PayKey
        {
            get { return _payKey; }
            set { _payKey = value; }
        }

        /// <summary>
        /// Customer's 2 character country code
        /// </summary>
        public string PayerCountryCode
        {
            get { return _countryCode; }
            set { _countryCode = value; }
        }

        /// <summary>
        /// The the address provided is either confirmed or uncomfirmed from PayaPal. Possible values  from PayPal
        /// are going to be "confirmed" or "unconfirmed"
        /// </summary>
        public string PayerAddressStatus
        {
            get { return _addressStatus; }
            set { _addressStatus = value; }
        }

        /// <summary>
        /// Customer either had a verified or unverified account with PayPal. 
        /// Possible return values from PayPal are "verified" or "unverified"
        /// </summary>
        public string PayerStatus
        {
            get { return _payerStatus; }
            set { _payerStatus = value; }
        }

        /// <summary>
        /// Customer's unique ID
        /// </summary>
        public string PayerID
        {
            get { return _payerID; }
            set { _payerID = value; }
        }

        /// <summary>
        /// Type of payment from Customer. Possible values from PayPal are "echeck" and "instant"
        /// </summary>
        public string PaymentType
        {
            get { return _paymentType; }
            set { _paymentType = value; }
        }

        /// <summary>
        /// This is the version number of the IPN that makes the post.
        /// </summary>
        public string NotifyVersion
        {
            get { return _notifyVersion; }
            set { _notifyVersion = value; }
        }

        /// <summary>
        /// An encrypted string that is used to validate the transaction. You don't have to use this for anything
        ///  unless you want to keep it and store it for your records.
        /// </summary>
        public string VerifySign
        {
            get { return _verifySign; }
            set { _verifySign = value; }
        }

        public string log_default_shipping_address_in_transaction { get; set; }

        public string action_type { get; set; }
        public string ipn_notification_url { get; set; }
        public string charset { get; set; }
        public string transaction_type { get; set; }
        public string notify_version { get; set; }
        public string cancel_url { get; set; }
        public string sender_email { get; set; }
        public string fees_payer { get; set; }
        public string return_url { get; set; }
        public string reverse_all_parallel_payments_on_error { get; set; }
        public string payment_request_date { get; set; }
        public string Status { get; set; }

    }
}
