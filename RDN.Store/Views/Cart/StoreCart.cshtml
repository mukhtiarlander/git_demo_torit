@using RDN.Library.Classes.Store.Classes;
@model StoreShoppingCart
@{
    ViewBag.Title = "Shopping Cart For " + @RDN.Library.Classes.Config.LibraryConfig.SportName + " Items";
    Layout = "~/Views/Shared/_LayoutAbout.cshtml";
}

<ol class="breadcrumb">
    <li><a href="@Url.Content("~/")">Home</a></li>
    <li class="active">Your Cart</li>
</ol>
@foreach (var merchant in Model.Stores)
{
    <div class="panel panel-default">
        <div class="panel-heading font16">
            Order For <a href="@Url.Content("~/" + RDN.Library.Classes.Config.LibraryConfig.SportNameForUrl + "-shop/" + @merchant.MerchantId.ToString().Replace("-", "") + "/" + RDN.Utilities.Strings.StringExt.ToSearchEngineFriendly(merchant.Name))">@merchant.Name</a>
        </div>
        <div class="panel-body cart-item-list">
            <div class="col-sm-12 col-md-9">
                @foreach (var item in merchant.StoreItems)
                {
                    <div id="@item.ShoppingCartItemId-row" class="cart-item cart-item-warning">
                        <div class="row">
                            <div class="col-xs-12 col-sm-4 col-md-3 col-lg-2 text-center">
                                @if (item.Photos.FirstOrDefault(x => x.IsPrimaryPhoto) != null)
                                {
                                    <img src="@item.Photos.FirstOrDefault(x=>x.IsPrimaryPhoto).ImageUrl" style="width:120px; max-width:120px; " alt="@item.Photos.FirstOrDefault(x=>x.IsPrimaryPhoto).Alt" />
                                }
                                else
                                {
                                    <div class="no-image"><div>No Image</div></div>
                                }
                            </div>
                            <div class="col-xs-12 col-sm-8 col-md-9 col-lg-10">
                                <div class="cart-item-details">
                                    <div class="col-xs-12 col-sm-8 col-md-5 col-lg-5">
                                        <a target="_blank" class="b" href="@Url.Content("~/" + RDN.Library.Classes.Config.LibraryConfig.SportNameForUrl + "-item/" + RDN.Utilities.Strings.StringExt.ToSearchEngineFriendly(item.Name) + "/" + item.StoreItemId)">@item.Name</a>
                                        @if (item.QuantityInStock > 0)
                                        {
                                            <div class="display-flex">
                                                @item.QuantityInStock items left in stock
                                            </div>
                                        }
                                        @if (item.ItemType == RDN.Portable.Classes.Store.Enums.StoreItemTypeEnum.Shirt)
                                        {
                                            <div class="display-flex">
                                                <b>Size:</b> @RDN.Utilities.Enums.EnumExt.ToFreindlyName(item.ItemSize)
                                            </div>
                                        }
                                        @if (item.ItemType == RDN.Portable.Classes.Store.Enums.StoreItemTypeEnum.Decal)
                                        {
                                            <div class="display-flex">
                                                @foreach (var color in item.Colors)
                                                { 
                                                    <span class='selectedColor' style='background-color:@color.HexColor;' title="@color.NameOfColor"></span>
                                                }
                                            </div>
                                        }

                                       

                                    </div>
                                    <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4 display-inline-flex">
                                        @Html.TextBox(item.ShoppingCartItemId.ToString() + "-item", item.QuantityOrdered, new { @class = "form-control input-sm w65 margin-right-10", @id = item.ShoppingCartItemId.ToString() + "-item", @maxlength = "3", @onkeyup = "javascript:showCartQuantityUpdate('" + item.ShoppingCartItemId + "', '" + item.ItemSizeEnum + "')" })
                                        <span class="displayNone tc" id="@item.ShoppingCartItemId-update">
                                            <button class="btn btn-sm btn-success" onclick="UpdateCartItemQuantity('@item.ShoppingCartItemId','@merchant.MerchantId', '@Model.ShoppingCartId')"><i class="fa fa-save"></i></button>
                                        </span>
                                        <span class="displayNone tc padding-top-5 font14 text-muted" id="@item.ShoppingCartItemId-saved">
                                            <i class="fa fa-check-circle"></i> Saved!
                                        </span>
                                        <input type="hidden" id="@item.ShoppingCartItemId.ToString()-oldVal" value="@item.QuantityOrdered" />
                                        <script type="text/javascript">
                                            $("#@item.ShoppingCartItemId-item").numeric({ negative: false });
                                        </script>
                                    </div>
                                    <div class="col-xs-12 col-sm-12 col-md-3 col-lg-3 text-right">
                                        <div class="b font16">
                                            <span id="@item.ShoppingCartItemId-price">
                                                @if (item.Currency == "USD")
                                                { <span>$</span> }@item.Price.ToString("N2")
                                            </span>
                                            @item.Currency
                                        </div>
                                        @if (!item.WillPickUpLocally)
                                        {
                                            if (item.Shipping > 0)
                                            {
                                                <span>
                                                    + @if (item.Currency == "USD")
                                                    {  <span>$</span>}@item.Shipping.ToString("N2") shipping
                                                </span>
                                            }
                                        }
                                    </div>
                                </div>
                                <div>
                                    @if (!item.WillPickUpLocally)
                                    {
                                        <button class="btn btn-xs btn-info margin-right-5" onclick="ToggleShipment(this, '@item.ShoppingCartItemId', '@merchant.MerchantId', '@Model.ShoppingCartId')"><i class="fa fa-map-marker"></i> Pick up locally</button>
                                    }
                                    else
                                    {
                                        <button class="btn btn-xs btn-info margin-right-5" onclick="ToggleShipment(this, '@item.ShoppingCartItemId', '@merchant.MerchantId', '@Model.ShoppingCartId')"><i class="fa fa-truck"></i> Ship item</button>
                                    }
                                    <span id="@item.ShoppingCartItemId-delete">
                                        <button class="btn btn-default btn-xs" onclick="DeleteItemFromCart('@item.ShoppingCartItemId', '@merchant.MerchantId', '@Model.ShoppingCartId')"><i class="fa fa-remove"></i> Remove</button>
                                    </span>
                                </div>

                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="col-sm-12 col-md-3 padding-top-10">
                <div class="well well-light text-right margin-bottom-10">
                    @using (Html.BeginForm("StoreCheckOut", "Cart", FormMethod.Post))
                    {
                        <div class="margin-bottom-10 font16">
                            Items Total:
                            <span id="@merchant.MerchantId-subTotal">
                                @if (merchant.Currency == "USD")
                                {  <span>$</span>}@merchant.TotalPrice.ToString("N2")  @merchant.Currency
                            </span>
                        </div>
                        <div class="margin-bottom-10">
                            Shipping:
                            <span id="@merchant.MerchantId-shippingTotal">
                                @if (merchant.Currency == "USD")
                                {  <span>$</span>}@merchant.TotalShipping.ToString("N2")  @merchant.Currency
                            </span>
                        </div>
                        <div class="margin-bottom-15 font18">
                            Grand Total:
                            <span id="@merchant.MerchantId-shippingTotal" class="b">
                                @if (merchant.Currency == "USD")
                                {  <span>$</span>}@((merchant.TotalPrice + merchant.TotalShipping).ToString("N2"))  @merchant.Currency
                            </span>
                        </div>
                        <div>
                            @Html.HiddenFor(x => x.ShoppingCartId)
                            @Html.Hidden("merchantId", merchant.MerchantId)
                            <a class="btn btn-success btn-block" href="@Url.Content("~/checkout/" + merchant.MerchantId.ToString().Replace("-", ""))"><i class="fa fa-mail-forward"></i> Proceed to Checkout</a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}
