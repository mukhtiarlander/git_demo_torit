@using RDN.Library.Classes.Payment.Enums;
@model RDN.Store.Models.CheckOut
@{
    ViewBag.Title = "Check Out";
    Layout = "~/Views/Shared/_LayoutAbout.cshtml";
}
<div class="backLinks">
    <a href="@Url.Content("~/")">Store Home</a> > <a href="@Url.Content("~/cart")">Cart</a>
</div>

<div class="checkOut">
    <span class="storeItemName">Review Your Order</span>
    <span class="floatRight">
        @if (!HttpContext.Current.User.Identity.IsAuthenticated)
        {
            <span>Optional: </span>
            <span><a href="@RDN.Library.Classes.Config.LibraryConfig.PublicSite/SignUp?u=@RDN.Library.Util.Enum.SiteMessagesEnum.f&returnSite=store&ReturnUrl=@Server.UrlEncode(Request.RawUrl)">Sign Up</a></span> 
            <span>/

            </span>
            <span><a href="@RDN.Library.Classes.Config.LibraryConfig.PublicSite/login?returnSite=store&ReturnUrl=@Server.UrlEncode(Request.RawUrl)">Login</a></span>
        }
    </span>
    <br />
    <br />
    <fieldset>
        <div class="coOrder">
            <div class="cartShopName">Order For <a href="@Url.Content("~/" + RDN.Library.Classes.Config.LibraryConfig.SportNameForUrl + "-shop/" + Model.MerchantId.ToString().Replace("-", "") + "/" + RDN.Utilities.Strings.StringExt.ToSearchEngineFriendly(Model.MerchantName))">@Model.MerchantName</a></div>
            <table class="coShoppingCartTable">
                <thead>
                    <tr>
                        <th colspan="2"></th>
                        <th>Price
                        </th>
                        <th class="center">Quantity
                        </th>
                    </tr>
                </thead>
                @foreach (var item in Model.ShoppingCart.Stores.FirstOrDefault().StoreItems)
                {
                    <tr class="coItemRow">
                        <td>
                            <div class="cartItemPhoto center">
                                @if (item.Photos.FirstOrDefault() != null)
                                { 
                                    <img src="@item.Photos.FirstOrDefault().ImageUrl" alt="@item.Photos.FirstOrDefault().Alt" style="width:120px; max-width:120px; "/>
                                }
                            </div>
                        </td>
                        <td style="vertical-align: top;">
                            <div class="storeItemInfo">
                                <div class="storeItemTitle">
                                    <a target="_blank" href="@RDN.Library.Classes.Config.LibraryConfig.PublicSite/@RDN.Library.Classes.Config.LibraryConfig.SportNameForUrl-store/item/@RDN.Utilities.Strings.StringExt.ToSearchEngineFriendly(item.Name)/@item.StoreItemId">@item.Name</a>
                                </div>

                                @if (item.ItemType == RDN.Portable.Classes.Store.Enums.StoreItemTypeEnum.Shirt)
                                { 
                                    <div class="storeLeftInStock">
                                        <b>Size:</b> @RDN.Utilities.Enums.EnumExt.ToFreindlyName(item.ItemSize)
                                    </div>
                                }
                            </div>
                        </td>
                        <td style="vertical-align: top;">
                            <div class="coItemPrice" id="@item.StoreItemId-price">
                                @if (item.Currency == "USD")
                                {  <span>$</span>}@item.Price.ToString("N2") @if (item.Shipping > 0)
                                                                                                         { <span>+ @if (item.Currency == "USD")
                                                                      {  <span>$</span>}@item.Shipping.ToString("N2") shipping</span> }
                            </div>
                        </td>
                        <td style="vertical-align: top;">
                            <div class="smallInput tc">
                                @item.QuantityOrdered
                            </div>
                        </td>
                    </tr>  
                }
            </table>
        </div>
    </fieldset>

    <br />
    @using (Html.BeginForm("CheckOut", "Cart", FormMethod.Post, new { @id = "PaymentForm" }))
    {
        <fieldset>
            <div class="coOrder">
                <div class="cartShopName">Order Summary</div>
                <table class="coSummaryTable">
                    <tr>
                        <td class="b">Items (@Model.TotalItemsCount):
                        </td>
                        <td>@if (Model.Currency == "USD")
                            {  <span>$</span>}@Model.TotalExclVat.ToString() @Model.Currency.ToString()
                        </td>
                    </tr>
                    <tr>
                        <td class="b">Shipping and Handling:
                        </td>
                        <td>@if (Model.Currency == "USD")
                            {  <span>$</span>}@Model.TotalShipping.ToString() @Model.Currency.ToString()
                        </td>
                    </tr>



                    <tr>
                        <td colspan="2">
                            <hr />
                        </td>
                    </tr>
                    <tr>
                        <td class="b">Order Total:
                        </td>
                        <td class="priceColor b">@if (Model.Currency == "USD")
                                                 {  <span>$</span>}@Model.TotalInclVat.ToString() @Model.Currency.ToString()
                        </td>
                    </tr>
                   
                        <tr>
                            <td class="smallPrint">
                            USD Conversion as of @DateTime.Now.ToShortDateString():
                        <td class="smallPrint">
                            @foreach (var currency in Model.CurrenciesConverted)
                            { 
                                <div>@currency.Value.ToString("N2") @currency.Key</div>
                            }
                                                 </td>
                        </tr>
                    
                </table>
                <table class="coNotes">
                    <tr>
                        <td>Notes to @Model.MerchantName</td>
                    </tr>
                    <tr>
                        <td>

                            @Html.TextAreaFor(x => x.Notes, new { @class = "coNote", @placeholder = "Optional Notes to " + Model.MerchantName })


                        </td>
                    </tr>
                </table>
                <div class="clear"></div>
            </div>
        </fieldset>
   
        <br />
        <div class="coOrder">
            <div class="cartShopName">Payment and Addresses </div>
            <div>
                <ul class="subOptionList center">
                    @if (Model.AcceptStripe)
                    { 
                        <li>
                            <label class="subOptionPaymentProv">
                                <input type="radio" name="PaymentProviderId" id="@PaymentProvider.Stripe" value="@PaymentProvider.Stripe" checked="checked" onclick="javascript: HideShowCCInfo('show')" />
                                <span>Pay with Credit/Debit Card</span>
                            </label>
                        </li>
                    }
                    @if (Model.AcceptPayPal)
                    { 
                        <li>
                            <label class="subOptionPaymentProv">
                                <input type="radio" name="PaymentProviderId" id="@PaymentProvider.Paypal" value="@PaymentProvider.Paypal" @(Model.AcceptStripe ? "" : "checked='checked'") onclick="javascript: HideShowCCInfo('hide')" />
                                <span>Pay with <span class="paypalText">Paypal</span></span>
                            </label>
                        </li>
                    }
                </ul>
            </div>
            <div>

                <table class="subTable center" id="CCTable">
                    <tr id="cardNumberTR">
                        <td class="subTableLD">Credit Card Number:</td>
                        <td class="subTableRD largeInput">@Html.TextBoxFor(x => x.CCNumber, new { @class = "card-number" })</td>
                    </tr>
                    <tr id="securityCodeTR">
                        <td class="subTableLD">Security Code:</td>
                        <td class="subTableRD smallInput">@Html.TextBoxFor(x => x.SecurityCode, new { @class = "card-cvc" })</td>
                    </tr>
                    <tr id="expirationDateTR">
                        <td class="subTableLD">Expiration Date:</td>
                        <td class="subTableRD smallDropDown">@Html.DropDownList("MonthOfExpiration", Model.Months, new { @class = "card-expiry-month" }) @Html.DropDownList("YearOfExpiration", Model.Years, new { @class = "card-expiry-year" })</td>
                    </tr>

                </table>
                <div class="paymentErrors center red"></div>

            </div>
            <hr id="ccSplitter" />
            <div class="addressContainer">
                <fieldset>
                    <legend><span class="addressTitles">Billing Address</span></legend>
                    <hr />
                    <table class="addressTbl">
                        <tr>
                            <td class="b">First Name:
                            </td>
                            <td>
                                @Html.TextBoxFor(x => x.BillingAddress_FirstName)
                            </td>
                        </tr>
                        <tr>
                            <td class="b">Last Name:
                            </td>
                            <td>
                                @Html.TextBoxFor(x => x.BillingAddress_LastName)
                            </td>
                        </tr>
                        <tr>
                            <td class="b">Address:
                            </td>
                            <td>
                                @Html.TextBoxFor(x => x.BillingAddress_Street)
                            </td>
                        </tr>
                        <tr>
                            <td class="b">Address 1:
                            </td>
                            <td>
                                @Html.TextBoxFor(x => x.BillingAddress_Street2)
                            </td>
                        </tr>
                        <tr>
                            <td class="b">City:
                            </td>
                            <td>
                                @Html.TextBoxFor(x => x.BillingAddress_City)
                            </td>
                        </tr>
                        <tr>
                            <td class="b">State:
                            </td>
                            <td>
                                @Html.TextBoxFor(x => x.BillingAddress_State)
                            </td>
                        </tr>
                        <tr>
                            <td class="b">Zip Code:
                            </td>
                            <td>
                                @Html.TextBoxFor(x => x.BillingAddress_Zip)
                            </td>
                        </tr>
                        <tr>
                            <td class="b">Country:
                            </td>
                            <td>
                                @Html.DropDownList("BillingAddress_Country", Model.Countries)
                            </td>
                        </tr>
                        <tr>
                            <td class="b">Email for Receipt:
                            </td>
                            <td>
                                @Html.TextBoxFor(x => x.BillingAddress_Email)
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
            <div class="addressContainer">

                <fieldset>
                    <legend><span class="addressTitles">Shipping Address</span> - <span class="coSameBilling">Different than billing? 
                    @Html.CheckBoxFor(x => x.IsBillingDifferentFromShipping, new { @onclick = "javascript: BillingAddressSameAsShipping(this)" })
                    </span></legend>
                    <hr />
                    <table class="addressTbl displayNone" id="shippingAddress">
                        <tr>
                            <td class="b">First Name:
                            </td>
                            <td>
                                @Html.TextBoxFor(x => x.ShippingAddress_FirstName)
                            </td>
                        </tr>
                        <tr>
                            <td class="b">Last Name:
                            </td>
                            <td>
                                @Html.TextBoxFor(x => x.ShippingAddress_LastName)
                            </td>
                        </tr>
                        <tr>
                            <td class="b">Address:
                            </td>
                            <td>
                                @Html.TextBoxFor(x => x.ShippingAddress_Street)
                            </td>
                        </tr>
                        <tr>
                            <td class="b">Address 1:
                            </td>
                            <td>
                                @Html.TextBoxFor(x => x.ShippingAddress_Street2)
                            </td>
                        </tr>
                        <tr>
                            <td class="b">City:
                            </td>
                            <td>
                                @Html.TextBoxFor(x => x.ShippingAddress_City)
                            </td>
                        </tr>
                        <tr>
                            <td class="b">State:
                            </td>
                            <td>
                                @Html.TextBoxFor(x => x.ShippingAddress_State)
                            </td>
                        </tr>
                        <tr>
                            <td class="b">Zip Code:
                            </td>
                            <td>
                                @Html.TextBoxFor(x => x.ShippingAddress_Zip)
                            </td>
                        </tr>
                        <tr>
                            <td class="b">Country:
                            </td>
                            <td>
                                @Html.DropDownList("ShippingAddress_Country", Model.Countries)
                            </td>
                        </tr>

                    </table>
                </fieldset>
            </div>
            <div class="clear"></div>
        </div>@Html.HiddenFor(x => x.MerchantId)
        <div class="center">
            <div class="paymentErrors center red"></div>
            <input type="submit" value="Place Your Order" class="primary" id="submitButton" /><img src="@Url.Content("~/Content/indicator.gif")" id="working" class="displayNone" />
        </div>
    }
    <br />
    <br />
</div>


<script type="text/javascript">
            @Html.Raw(Model.StripeKey)
    $("#PaymentForm").validate({
        rules: {
            BillingAddress_FirstName: "required",
            BillingAddress_LastName: "required",
            BillingAddress_Street: "required",
            BillingAddress_City: "required",
            BillingAddress_State: "required",
            BillingAddress_Zip: "required",
            BillingAddress_Country: "required",
            BillingAddress_Email: "required",
            CCNumber: "required",
            SecurityCode: "required",
            MonthOfExpiration: "required",
            YearOfExpiration: "required"
        },
        submitHandler: function (form) {
            // disable the submit button to prevent repeated clicks
            $('#submitButton').toggleClass("displayNone", true);
            $('#working').toggleClass("displayNone", false);
            Stripe.createToken({
                number: $('.card-number').val(),
                cvc: $('.card-cvc').val(),
                exp_month: $('.card-expiry-month').val(),
                exp_year: $('.card-expiry-year').val(),
                name: $('#BillingAddress_FirstName').val() + " " + $('#BillingAddress_LastName').val(),
                address_line1: $('#BillingAddress_Street').val(),
                address_city: $('#BillingAddress_City').val(),
                address_state: $('#BillingAddress_State').val(),
                address_zip: $('#BillingAddress_Zip').val(),
                address_country: $("#BillingAddress_Country option:selected").text()
            }, stripeResponseHandler);
        }
    });
</script>


@if (Model.AcceptPayPal && !Model.AcceptStripe)
{
    <script type="text/javascript">
        $(document).ready(function () {
            HideShowCCInfo('hide');
        });
    </script>
}