@using RDN.Library.Classes.Payment.Enums;
@model RDN.Store.Models.CheckOut
@{
    ViewBag.Title = "Check Out For " + @RDN.Library.Classes.Config.LibraryConfig.SportName;
    Layout = "~/Views/Shared/_LayoutAbout.cshtml";
}

<ol class="breadcrumb">
    <li><a href="@Url.Content("~/")">Home</a></li>
    <li><a href="@Url.Content("~/cart")">Cart</a></li>
</ol>

@using (Html.BeginForm("CheckOut", "Cart", FormMethod.Post, new { @id = "PaymentForm" }))
{
    <div class="row">
        <div class="col-md-8 col-xs-12">
            <div class="panel panel-default no-border-radious">
                <div class="panel-heading">Addresses</div>
                <div class="panel-body">
                    <div class="col-xs-12 col-md-6">
                        <div class="page-header margin-top-10">
                            <h4 class="no-margin">Billing Address</h4>
                        </div>
                        <div class="form-group">
                            <label>First Name:</label>
                            @Html.TextBoxFor(x => x.BillingAddress_FirstName, new { @class = "form-control", @placeholder = "First Name" })
                        </div>
                        <div class="form-group">
                            <label>Last Name:</label>
                            @Html.TextBoxFor(x => x.BillingAddress_LastName, new { @class = "form-control", @placeholder = "Last Name" })
                        </div>
                        <div class="form-group">
                            <label>Address:</label>
                            @Html.TextBoxFor(x => x.BillingAddress_Street, new { @class = "form-control", @placeholder = "Address" })
                        </div>
                        <div class="form-group">
                            <label>Address 1:</label>
                            @Html.TextBoxFor(x => x.BillingAddress_Street2, new { @class = "form-control", @placeholder = "Address 1" })
                        </div>
                        <div class="form-group">
                            <label>City:</label>
                            @Html.TextBoxFor(x => x.BillingAddress_City, new { @class = "form-control", @placeholder = "City" })
                        </div>
                        <div class="form-group">
                            <label>State:</label>
                            @Html.TextBoxFor(x => x.BillingAddress_State, new { @class = "form-control", @placeholder = "State" })
                        </div>
                        <div class="form-group">
                            <label>Zip Code:</label>
                            @Html.TextBoxFor(x => x.BillingAddress_Zip, new { @class = "form-control", @placeholder = "Zip Code" })
                        </div>
                        <div class="form-group">
                            <label>Country:</label>
                            @Html.DropDownList("BillingAddress_Country", Model.Countries, new { @class = "form-control", @placeholder = "Country" })
                        </div>
                        <div class="form-group">
                            <label>Email for Receipt:</label>
                            @Html.TextBoxFor(x => x.BillingAddress_Email, new { @class = "form-control", @type = "email", @placeholder = "Email for Receipt" })
                        </div>
                    </div>
                    <div class="col-xs-12 col-md-6">
                        <div class="page-header margin-top-10">
                            <h4 class="no-margin pull-left">Shipping Address</h4>
                            <label class="checkbox-inline pull-right">
                                @Html.CheckBoxFor(x => x.IsBillingDifferentFromShipping, new { @onclick = "javascript: BillingAddressSameAsShipping(this)" })Different than billing?
                            </label>
                            <span class="clearfix"></span>
                        </div>
                        <div id="shippingAddress" class="displayNone">
                            <div class="form-group">
                                <label>First Name:</label>
                                @Html.TextBoxFor(x => x.ShippingAddress_FirstName, new { @class = "form-control", @placeholder = "First Name" })
                            </div>
                            <div class="form-group">
                                <label>Last Name:</label>
                                @Html.TextBoxFor(x => x.ShippingAddress_LastName, new { @class = "form-control", @placeholder = "Last Name" })
                            </div>
                            <div class="form-group">
                                <label>Address:</label>
                                @Html.TextBoxFor(x => x.ShippingAddress_Street, new { @class = "form-control", @placeholder = "Address" })
                            </div>
                            <div class="form-group">
                                <label>Address 1:</label>
                                @Html.TextBoxFor(x => x.ShippingAddress_Street2, new { @class = "form-control", @placeholder = "Address 1" })
                            </div>
                            <div class="form-group">
                                <label>City:</label>
                                @Html.TextBoxFor(x => x.ShippingAddress_City, new { @class = "form-control", @placeholder = "City" })
                            </div>
                            <div class="form-group">
                                <label>State:</label>
                                @Html.TextBoxFor(x => x.ShippingAddress_State, new { @class = "form-control", @placeholder = "State" })
                            </div>
                            <div class="form-group">
                                <label>Zip Code:</label>
                                @Html.TextBoxFor(x => x.ShippingAddress_Zip, new { @class = "form-control", @placeholder = "Zip Code" })
                            </div>
                            <div class="form-group">
                                <label>Country:</label>
                                @Html.DropDownList("ShippingAddress_Country", Model.Countries, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <div class="col-xs-12 col-md-6">
                        <table>Notes to @Model.MerchantName</table>
                        @Html.TextAreaFor(x => x.Notes, new { @class = "coNote form-control", @placeholder = "Optional Notes to " + Model.MerchantName })
                    </div>
                </div>
            </div>
            <div class="panel panel-default no-border-radious">
                <div class="panel-heading">Payments</div>
                <div class="panel-body">
                    <div class="page-header no-margin-top no-margin-bottom">
                        <h3 class="no-margin">Pay with Credit/Debit Card</h3>
                    </div>
                    <div class="margin-bottom-5 margin-top-5">
                        @if (Model.AcceptStripe)
                        {
                            <div class="radio-inline">
                                <label>
                                    <input type="radio" name="PaymentProviderId" id="@PaymentProvider.Stripe" value="@PaymentProvider.Stripe" checked="checked" onclick="javascript: HideShowCCInfo('show')" />
                                    Pay with Credit/Debit Card
                                </label>
                            </div>
                        }
                        @if (Model.AcceptPayPal)
                        {
                            <div class="radio-inline no-margin-left">
                                <label>
                                    <input type="radio" name="PaymentProviderId" id="@PaymentProvider.Paypal" value="@PaymentProvider.Paypal" @(Model.AcceptStripe ? "" : "checked='checked'") onclick="javascript: HideShowCCInfo('hide')" />
                                    Pay with Paypal
                                </label>
                            </div>
                        }
                    </div>
                    <div class="clearfix"></div>
                    <div id="CCTable">
                        <div class="form-group">
                            <label>Credit Card Number:</label>
                            @Html.TextBoxFor(x => x.CCNumber, new { @class = "form-control card-number", @placeholder = "Credit Card Number" })
                        </div>
                        <div class="form-group">
                            <label>Security Code:</label>
                            @Html.TextBoxFor(x => x.SecurityCode, new { @class = "form-control card-cvc", @placeholder = "Security Code" })
                        </div>
                        <div class="form-group form-inline no-margin-bottom">
                            <label>Expiration Date:</label>
                        </div>
                        <div class="form-group form-inline">
                            @Html.DropDownList("MonthOfExpiration", Model.Months, new { @class = "card-expiry-month form-control pull-left margin-right-5 margin-bottom-5" })@Html.DropDownList("YearOfExpiration", Model.Years, new { @class = "card-expiry-year form-control pull-left" })
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4 col-xs-12">
            <div class="panel panel-default no-border-radious">
                <div class="panel-heading">Review Your Order</div>
                <div class="panel-body">
                    @if (!HttpContext.Current.User.Identity.IsAuthenticated)
                    {
                        <div class="page-header margin-bottom-10 no-margin-top">
                            <h5 class="text-left b pull-left">Optional: </h5>
                            <a class="btn btn-primary pull-left margin-left-5" href="@RDN.Library.Classes.Config.LibraryConfig.PublicSite/SignUp?u=@RDN.Library.Util.Enum.SiteMessagesEnum.f&returnSite=store&ReturnUrl=@Server.UrlEncode(Request.RawUrl)">Sign Up</a>
                            <a class="btn btn-primary pull-left margin-left-5" href="@RDN.Library.Classes.Config.LibraryConfig.PublicSite/login?returnSite=store&ReturnUrl=@Server.UrlEncode(Request.RawUrl)">Login</a>
                            <span class="clearfix"></span>
                        </div>
                    }
                    <div>Order For <a href="@Url.Content("~/" + RDN.Library.Classes.Config.LibraryConfig.SportNameForUrl + "-shop/" + Model.MerchantId.ToString().Replace("-", "") + "/" + RDN.Utilities.Strings.StringExt.ToSearchEngineFriendly(Model.MerchantName))">@Model.MerchantName</a></div>
                    <table class="table">
                        <thead>
                            <tr>
                                <th class="no-border">Product Name</th>
                                <th class="no-border text-center">Quantity</th>
                                <th class="no-border text-center">Price</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.ShoppingCart.Stores.FirstOrDefault().StoreItems)
                            {
                                <tr>
                                    <td>
                                        <div>
                                            @if (item.Photos.FirstOrDefault(x => x.IsPrimaryPhoto) != null)
                                            {
                                                <img src="@item.Photos.FirstOrDefault(x=>x.IsPrimaryPhoto).ImageUrl" alt="@item.Photos.FirstOrDefault(x=>x.IsPrimaryPhoto).Alt" style="width:120px; max-width:120px;" />
                                            }
                                            else
                                            {
                                                <div class="no-image"><div>No Image</div></div>
                                            }
                                        </div>
                                        <a target="_blank" href="@RDN.Library.Classes.Config.LibraryConfig.PublicSite/@RDN.Library.Classes.Config.LibraryConfig.SportNameForUrl-store/item/@RDN.Utilities.Strings.StringExt.ToSearchEngineFriendly(item.Name)/@item.StoreItemId">@item.Name</a>
                                        @if (item.ItemType == RDN.Portable.Classes.Store.Enums.StoreItemTypeEnum.Shirt)
                                        {
                                            <div class="text-light"><b>Size : </b>@RDN.Utilities.Enums.EnumExt.ToFreindlyName(item.ItemSize)</div>
                                        }
                                        @if (item.ItemType == RDN.Portable.Classes.Store.Enums.StoreItemTypeEnum.Decal)
                                        {
                                            <div class="text-light margin-bottom-5">
                                                <span class="pull-left margin-right-5"><b>Color :</b></span>
                                                @foreach (var color in item.Colors)
                                                {
                                                    <span class="selectedColor-small" style='background-color:@color.HexColor;' title="@color.NameOfColor"></span>
                                                }
                                                <span class="clearfix"></span>
                                            </div>
                                        }
                                        <div class="text-light">
                                            <b>Price : </b>@if (item.Currency == "USD")
                                            { <span>$</span> }@item.Price.ToString("N2")
                                        </div>
                                    </td>
                                    <td>
                                        <div class="text-center">X @item.QuantityOrdered</div>
                                    </td>
                                    <td>
                                        <div class="text-center" id="@item.StoreItemId-price">
                                            @if (item.Currency == "USD")
                                            {  <span>$</span> }
                                            @((item.Price * @item.QuantityOrdered).ToString("N2"))
                                            @if (item.Shipping > 0)
                                            {
                                                <span>
                                                    +@if (item.Currency == "USD")
                                                    {  <span>$</span>}@item.Shipping.ToString("N2") shipping
                                                </span>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="panel panel-default no-border-radious">
                <div class="panel-heading">Order Summary</div>
                <div class="panel-body">
                    <table class="table">
                        <tbody>
                            <tr>
                                <td class="no-border text-left"><b>Items (@Model.TotalItemsCount):</b></td>
                                <td class="no-border text-right">
                                    @if (Model.Currency == "USD")
                                    {  <span>$</span>}@Model.TotalExclVat.ToString() @Model.Currency.ToString()
                                </td>
                            </tr>
                            <tr>
                                <td class="no-border b text-left">Shipping and Handling:</td>
                                <td class="no-border b text-right">
                                    +@if (Model.Currency == "USD")
                                    {  <span>$</span>}@Model.TotalShipping.ToString() @Model.Currency.ToString()
                                </td>
                            </tr>
                            <tr>
                                <td class="b text-left"> Order Total: </td>
                                <td class="b text-right">
                                    @if (Model.Currency == "USD")
                                    {  <span>$</span>}@Model.TotalInclVat.ToString() @Model.Currency.ToString()
                                </td>
                            </tr>
                            <tr>
                                <td class="text-left text-light">USD Conversion as of @DateTime.Now.ToShortDateString():</td>
                                <td class="text-right">
                                    @foreach (var currency in Model.CurrenciesConverted)
                                    {
                                        <div>@currency.Value.ToString("N2") @currency.Key</div>
                                    }
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <button type="submit" value="Place Your Order" class="btn btn-success pull-right" id="submitButton"><span class="fa fa-mail-forward"></span> Place Your Order</button> <img src="@Url.Content("~/Content/indicator.gif")" id="working" class="displayNone" />
                </div>
            </div>
        </div>
        <div class="clearfix"></div>
    </div>
    @Html.HiddenFor(x => x.MerchantId)
}
<script type="text/javascript">
@Html.Raw(Model.StripeKey)
    $("#PaymentForm").validate({
        rules: {
            BillingAddress_FirstName: "required",
            BillingAddress_LastName: "required",
            BillingAddress_Street: "required",
            BillingAddress_City: "required",
            BillingAddress_State: "required",
            BillingAddress_Zip: "required",
            BillingAddress_Country: "required",
            BillingAddress_Email: "required",
            CCNumber: "required",
            SecurityCode: "required",
            MonthOfExpiration: "required",
            YearOfExpiration: "required"
        },
        submitHandler: function (form) {
            // disable the submit button to prevent repeated clicks
            $('#submitButton').toggleClass("displayNone", true);
            $('#working').toggleClass("displayNone", false);
            Stripe.createToken({
                number: $('.card-number').val(),
                cvc: $('.card-cvc').val(),
                exp_month: $('.card-expiry-month').val(),
                exp_year: $('.card-expiry-year').val(),
                name: $('#BillingAddress_FirstName').val() + " " + $('#BillingAddress_LastName').val(),
                address_line1: $('#BillingAddress_Street').val(),
                address_city: $('#BillingAddress_City').val(),
                address_state: $('#BillingAddress_State').val(),
                address_zip: $('#BillingAddress_Zip').val(),
                address_country: $("#BillingAddress_Country option:selected").text()
            }, stripeResponseHandler);
        }
    });
</script>
@if (Model.AcceptPayPal && !Model.AcceptStripe)
{
    <script type="text/javascript">
        $(document).ready(function () {
            HideShowCCInfo('hide');
        });
    </script>
}