@using RDN.Library.Classes.Calendar.Enums
@using RDN.Library.Cache
@model RDN.Library.Classes.Controls.Calendar.CalendarEvent
@{
    ViewBag.Title = Model.Name;
    Layout = "~/Views/Shared/_LayoutAbout.cshtml";
}

<div class="expandableContainer">
    <div class="fixedCenterContainter">
        <div class="evTitle">
            @Model.Name
        </div>
        @if (Model.Location != null)
        { 
            <div class="evLocation">
                @Model.Location.LocationName
            </div>
        }
        @if (!string.IsNullOrEmpty(Model.Link))
        {
            <div class="evWebSite">
                <a href="@Model.Link" target="_blank">@Model.Link</a>
            </div>
        }
        @if (!String.IsNullOrEmpty(Model.OrganizersName))
        { 
            <div class="evWebSite"><span class="i">By: </span><a href="@Url.Content("~/roller-derby-league/" + RDN.Utilities.Strings.StringExt.ToSearchEngineFriendly(Model.OrganizersName) + "/" + Model.OrganizersId.ToString().Replace("-", ""))">@Model.OrganizersName</a></div>
        }
        <div>
        </div>
        <div class="clear">
        </div>
        <div class="evContainer">
            <div class="evLeftCol">
                <div class="evNotes">
                    @Html.Raw(Model.NotesHtml)
                </div>

            </div>


        </div>
        <div class="evRightCol">
            @if (Model.Location != null)
            { 
                <div class="evlocTit">
                    <span class="evTitle ">Location</span>
                    @if (Model.Location.Contact.Addresses.FirstOrDefault() != null)
                    { 
                        <span class="evMap">- <a href="http://www.bing.com/maps/default.aspx?q=@Model.Location.Contact.Addresses.FirstOrDefault().Address1+@Model.Location.Contact.Addresses.FirstOrDefault().Address2,+@Model.Location.Contact.Addresses.FirstOrDefault().CityRaw,+@Model.Location.Contact.Addresses.FirstOrDefault().StateRaw+@Model.Location.Contact.Addresses.FirstOrDefault().Zip+@Model.Location.Contact.Addresses.FirstOrDefault().Country" target="_blank">View Map</a></span>
                    }

                </div> 

                <table class="evTable">

                    <tr>
                        <td>
                            @Model.Location.LocationName

                        </td>
                    </tr>
                    @if (Model.Location.Contact.Addresses.FirstOrDefault() != null)
                    { 
                        <tr class="trBorderB">
                            <td>
                                @if (!String.IsNullOrEmpty(Model.Location.Contact.Addresses.FirstOrDefault().Address1))
                                {
                                    <div>
                                        @Model.Location.Contact.Addresses.FirstOrDefault().Address1
                                    </div>
                                }
                                @if (!String.IsNullOrEmpty(Model.Location.Contact.Addresses.FirstOrDefault().Address2))
                                { <div>
                                    @Model.Location.Contact.Addresses.FirstOrDefault().Address2
                                </div>
                                }
                                <div>
                                    @if (!String.IsNullOrEmpty(Model.Location.Contact.Addresses.FirstOrDefault().CityRaw))
                                    { 
                                        @Model.Location.Contact.Addresses.FirstOrDefault().CityRaw<span>,</span>
                                    }
                                    @if (!String.IsNullOrEmpty(Model.Location.Contact.Addresses.FirstOrDefault().StateRaw))
                                    { 
                                        @Model.Location.Contact.Addresses.FirstOrDefault().StateRaw
                                    }
                                    @if (!String.IsNullOrEmpty(Model.Location.Contact.Addresses.FirstOrDefault().Zip))
                                    { 
                                        @Model.Location.Contact.Addresses.FirstOrDefault().Zip
                                    }
                                </div>

                                @if (!String.IsNullOrEmpty(Model.Location.Contact.Addresses.FirstOrDefault().Country))
                                {<div>
                                    @Model.Location.Contact.Addresses.FirstOrDefault().Country
                                </div> 
                                }

                            </td>
                        </tr>

                    }

                </table>
            }

            <div class="evTitle evlocTit">Date & Time</div>
            <table class="evTable">
                <tr>

                    <td>
                        @Model.StartDate.ToLongDateString()
                        <div>@Model.StartDate.ToShortTimeString() - @Model.EndDate.ToShortTimeString()</div>
                    </td>
                </tr>
            </table>
            <div class="evTitle evlocTit">Contact</div>
            <div class="evTable">
                <a target="_blank" href="@RDN.Portable.Config.ServerConfig.WEBSITE_INTERNAL_DEFAULT_LOCATION/messages/new/calevent/@Model.OrganizersId.ToString().Replace("-", "")">Event Coordinator</a>
            </div>
            <div class="evTitle evlocTit">Save To Calendar</div>
            <div class="evTable">
                <div class="navIcons">
                    <a title="Google Event" href="@Model.GoogleCalendarUrl" target="_blank">
                        <img src="@Url.Content("~/Content/images/icons/google.png")"  />Calendar
                    </a>
                </div>
                @if (!Model.IsReoccurring)
                {  
                    <div class="inputIcons">
                        @using (Html.BeginForm("EventCalendarExport", "Calendar", FormMethod.Post, new { @id = "createNewEventForm" }))
                        {
                            <input title="Save Event" type="image" src="@Url.Content("~/Content/images/icons/save.png")" />
                            <span>Save
                @Html.HiddenFor(x => x.CalendarItemId)
                                @Html.HiddenFor(x => x.Name)
                            </span>
                        }
                    </div>
                }
            </div>
        </div>
        <div class="clear"></div>
        <div id="chatTab">
            <div class="gameJamsCon">
                <div class="gameTabH">
                    Comments
                </div>
                <div>
                    <div class="gameChatControl">
                        @if (HttpContext.Current.User.Identity.IsAuthenticated)
                        { 
                            <textarea id="chat" name="chat" rows="2" class="gameInputChat"></textarea>
                            <input name="submit" id="submit" type="submit" value="Comment" class="primary"
                                onclick="javascript: eventViewModel.postConversation()" />
                        }
                        else
                        { <span class="i evComment">Must Be Logged in to leave a comment.</span>
                        }

                    </div>
                    <div class="clear messageSeperator">
                    </div>
                    <div id="chatMessages" data-bind="foreach: chats">
                        <div class="chatMessage">
                            <div class="chatMessageProfile">
                                <b><span data-bind="text: name"></span></b>
                                <br />
                                <span data-bind="text: Created"></span>
                            </div>
                            <div class="chatMessageContent">
                                <span data-bind="text: chat"></span>
                            </div>
                            <div class="clear">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="clear">
                </div>
            </div>
        </div>

    </div>

</div>

<script type="text/javascript">
    ko.applyBindings(eventViewModel, document.getElementById("chatTab"));

    eventViewModel.initialize("@Model.CalendarItemId.ToString().Replace("-", "")");
</script>
