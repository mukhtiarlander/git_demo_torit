@using RDN.Library.Classes.Calendar.Enums;
@model RDN.Portable.Classes.League.Classes.League
@{
    ViewBag.Title = Model.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-header">
    @if (Model.Logo != null)
    {
        @*<img src="http://media-cache-ec0.pinimg.com/736x/35/af/2e/35af2e577d3dd62ec3350ba2727bb13d.jpg" style="max-height:400px;" class="img-rounded img-responsive imgCenter" />*@
        <img src="@Model.Logo.ImageUrl" style="max-height:400px;" class="img-rounded img-responsive imgCenter" />

    }
</div>
<div class="page-header text-center">
    <h2>
        @Model.Name
    </h2>
    <div class="row text-center">
        @Model.City,
        @Model.State @if (!String.IsNullOrEmpty(Model.Country))
        {<span> - @Model.Country</span>}
    </div>

    <div class="row text-center">
        @if (!String.IsNullOrEmpty(Model.Website))
        {
            <a href="@Model.Website" class="" target="_blank">@Model.Website</a>
        }
        </div>
    <div class="row text-center">
        @if (!String.IsNullOrEmpty(Model.Facebook))
        {
            <a href="@Model.Facebook" class="" target="_blank"><i class="fa fa-facebook fa-2x"></i></a>
        }
        @if (!String.IsNullOrEmpty(Model.Instagram))
        {
            <a href="@Model.Instagram" class="" target="_blank"><i class="fa fa-instagram fa-2x"></i></a>
        }
        @if (!String.IsNullOrEmpty(Model.Twitter))
        {
            <a href="@Model.Twitter" class="" target="_blank"><i class="fa fa-twitter-square fa-2x"></i></a>
        }
        @if (!String.IsNullOrEmpty(Model.ShopUrl))
        {
            <a href="@Model.ShopUrl" class="" target="_blank"><i class="fa fa-shopping-cart fa-2x"></i></a>
        }
        <a href="@RDN.Library.Classes.Config.LibraryConfig.InternalSite/messages/new/league/@Model.LeagueId.ToString().Replace("-", "")">
            <i class="fa fa-envelope fa-2x"></i>
        </a>

    </div>
</div>


<div>

    <ul class="nav nav-tabs" role="tablist" id="myTabs">
        <li role="presentation" class="active"><a href="#membersTab" role="tab" data-toggle="tab">Members</a></li>
        <li role="presentation"><a href="#calendarTab" role="tab" data-toggle="tab">Calendar</a></li>
        @*<li role="presentation"><a href="#tweetTab" role="tab" data-toggle="tab">Tweets</a></li>*@
    </ul>

    <div class="tab-content">
        <div role="tabpanel" class="tab-pane active well " id="membersTab">




            @if (Model.LeagueMembers != null && Model.LeagueMembers.Count > 0)
            {
                for (int i = 0; i < Model.LeagueMembers.Count; i++)
                {

                    <div class="col-sm-4 col-md-3">
                        <div class="thumbnail">
                         
                            <a href="@Url.Content("~/" + RDN.Library.Classes.Config.LibraryConfig.SportNamePlusMemberNameForUrl + "/" + RDN.Utilities.Strings.StringExt.ToSearchEngineFriendly(Model.LeagueMembers[i].DerbyName) + "/" + Model.LeagueMembers[i].MemberId.ToString().Replace("-", ""))">
                                @if (Model.LeagueMembers[i].Photos.Where(x => x.IsPrimaryPhoto == true).LastOrDefault() != null)
                                {
                                    <img style="max-height:200px" alt="@Model.LeagueMembers[i].Photos.Where(x => x.IsPrimaryPhoto == true).LastOrDefault().Alt" src="@Model.LeagueMembers[i].Photos.Where(x => x.IsPrimaryPhoto == true).LastOrDefault().ImageUrl" />
                                }
                                                                else
                                {
                                    <img style="max-height:200px" src="@Url.Content("~/content/" + RDN.Library.Classes.Config.LibraryConfig.DefaultPictureName)" alt="default picture" />
                                }
                            </a>
                            <div class="caption">
                                <h4>
                                    <a href="@Url.Content("~/" + RDN.Library.Classes.Config.LibraryConfig.SportNamePlusMemberNameForUrl + "/" + RDN.Utilities.Strings.StringExt.ToSearchEngineFriendly(Model.LeagueMembers[i].DerbyName) + "/" + Model.LeagueMembers[i].MemberId.ToString().Replace("-", ""))">
                                        @Model.LeagueMembers[i].PlayerNumber - @Model.LeagueMembers[i].DerbyName
                                    </a>
                                </h4>


                            </div>
                            
                        </div>
                        
                    </div>

                }



            }
            <div class="clearfix"></div>
        </div>

        <div role="tabpanel" class="tab-pane active" id="calendarTab">
            <br />
            <div id="calendar" class="calendarDisplay">
            </div>
        </div>
        @*<div role="tabpanel" class="tab-pane active" id="tweetTab">
            <br />
            <div id="tweet">
            </div>
        </div>*@
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {

        @*LeagueViewModel.LoadTweets("@Model.Twitter");*@

        var date = new Date();
        var d = date.getDate();
        var m = date.getMonth();
        var y = date.getFullYear();
        var rendered = false;

        $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
            if (!rendered) {
                var calendar = $('#calendar').fullCalendar({
                    header: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'month,agendaWeek,agendaDay'
                    },
                    eventBackgroundColor: "#872f95",
                    eventBorderColor: "#c5c5c5",
                    selectable: true,
                    events: function (start, end, callback) {
                        start = start.getTime() / 1000;
                        end = end.getTime() / 1000;
                        $.getJSON("/utilities/LoadCalendarView", { lid: '@Model.LeagueId.ToString().Replace("-", "")', startDt: start, endDt: end }, function (result) {
                            var events = [];
                            $.each(result.events, function (i, field) {
                                events.push({
                                    title: $(field).attr('title'),
                                    start: $(field).attr('start'),
                                    id: $(field).attr('id'),
                                    end: $(field).attr('end'),
                                    url: $(field).attr('url'),
                                    allDay: $(field).attr('allDay'),
                                    backgroundColor: $(field).attr('backColor')
                                });
                            });
                            callback(events);

                        });
                    }
                });
                $('#calendar').fullCalendar('render');
                rendered = true;
            }
        });

    });
</script>
