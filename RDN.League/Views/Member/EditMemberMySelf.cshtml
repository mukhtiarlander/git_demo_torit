@model RDN.League.Models.User.EditMember
@{
    ViewBag.Title = "Edit You";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    var ClassTypes = from RDN.Library.Classes.Federation.Enums.MADEClassRankEnum d in Enum.GetValues(typeof(RDN.Library.Classes.Federation.Enums.MADEClassRankEnum))
                     select new { ID = (int)d, Name = d.ToString() };
    var OwnerTypes = from RDN.Library.Classes.Federation.Enums.FederationOwnerEnum d in Enum.GetValues(typeof(RDN.Library.Classes.Federation.Enums.FederationOwnerEnum))
                     select new { ID = (int)d, Name = d.ToString() };
}
<ol class="breadcrumb">
    <li><a href="#">Home</a></li>
    <li><a href="@Url.Content("~/member/" + Model.MemberId.ToString().Replace("-", "") + "/" + Model.DerbyNameLink)">@Model.DerbyName</a></li>
    <li class="active">Edit</li>
    </ol>

@using (Html.BeginForm("EditMemberMySelf", "Member", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="text-center center">
        @if (Model.Photos.Where(x => x.IsPrimaryPhoto == true).LastOrDefault() != null)
        {
            <img style="max-height:400px;" class="img-rounded img-responsive imgCenter" alt="@Model.Photos.Where(x => x.IsPrimaryPhoto == true).LastOrDefault().Alt" src="@Model.Photos.Where(x => x.IsPrimaryPhoto == true).LastOrDefault().ImageUrl" />
        }
        else if (Model.Gender == RDN.Portable.Classes.Account.Enums.GenderEnum.Female)
        {
            <img style="max-height:400px;" class="img-rounded img-responsive imgCenter" src="@Url.Content("~/content/roller-girl.jpg")" alt="roller derby girl" />
        }
        else
        {
            <img style="max-height:400px;" class="img-rounded img-responsive imgCenter" src="@Url.Content("~/content/roller-person.gif")" alt="roller derby boy" />
        }
        <br />
        <input type="file" name="file" id="file" class="fileUpload center" accept="image/*" />
        <br />
    </div>
    <div class="col-sm-10 col-sm-offset-1 col-xs-12">
        <ul class="nav nav-tabs" role="tablist" id="myTabs">
            @*<li role="presentation"><a href="#Stats" role="tab" data-toggle="tab">Stats</a></li>*@
            <li role="presentation" class="active"><a href="#profile" role="tab" data-toggle="tab">Profile</a></li>
            @if (RDN.Library.Cache.Singletons.SiteSingleton.Instance.SiteType == RDN.Library.Classes.Site.Enums.SiteType.RollerDerby)
            {
                <li role="presentation"><a href="#Skating" role="tab" data-toggle="tab">Skating</a></li>
            }
            <li role="presentation"><a href="#League" role="tab" data-toggle="tab">League</a></li>
            <li role="presentation"><a href="#Federation" role="tab" data-toggle="tab">Federation</a></li>
            <li role="presentation"><a href="#Public" role="tab" data-toggle="tab">Public</a></li>
            <li role="presentation"><a href="#Address" role="tab" data-toggle="tab">Address</a></li>
        </ul>
        <div class="tab-content">
            <div role="tabpanel" class="tab-pane active well" id="profile">
                <table class="table">
                    <tr>
                        <td class="b text-right">
                            Derby Name:
                        </td>
                        <td>
                            @Html.TextBoxFor(x => x.DerbyName, new { @class = "form-control" })
                        </td>
                    </tr>
                    <tr>
                        <td class="b text-right text-nowrap">
                            Derby Number:
                        </td>
                        <td>
                            @Html.TextBoxFor(x => x.PlayerNumber, new { @class = "form-control" })
                        </td>
                    </tr>
                    <tr>
                        <td class="b text-right">
                            First Name:
                        </td>
                        <td>
                            @Html.TextBoxFor(x => x.Firstname, new { @class = "form-control" })
                        </td>
                    </tr>
                    <tr>
                        <td class="b text-right">
                            Last Name:
                        </td>
                        <td>
                            @Html.TextBoxFor(x => x.LastName, new { @class = "form-control" })
                        </td>
                    </tr>
                    <tr>
                        <td class="b text-right">
                            Gender:
                        </td>
                        <td>
                            @Html.DropDownListFor(x => x.Gender, (SelectList)ViewData["genderSelectList"], new { @class = "form-control" })
                        </td>
                    </tr>
                    <tr>
                        <td class="b text-right">
                            Height:
                        </td>
                        <td class="form-inline">
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.HeightFeet, new { @class = "small form-control" })
                                <div class="input-group-addon">'</div>
                                @Html.TextBoxFor(x => x.HeightInches, new { @class = "small form-control" })
                                <div class="input-group-addon">inches</div>
                            </div>

                        </td>
                    </tr>
                    <tr>
                        <td class="b text-right">
                            Weight (Lbs):
                        </td>
                        <td>
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.WeightLbs, new { @class = "small form-control" })
                                <div class="input-group-addon">lbs.</div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="b text-right">
                            Date Of Birth:
                        </td>
                        <td>
                            @Html.TextBox("DOB", Model.DOB != new DateTime() ? Model.DOB.ToString("MM/dd/yyyy") : "", new { @class = "jquery_datepicker form-control" }) <small class="i"><a href="@Url.Content("~/member/settings#Privacy")">Privacy Settings</a></small>
                        </td>
                    </tr>
                    <tr>
                        <td class="b text-right">
                            Phone Number:
                        </td>
                        <td>
                            @Html.TextBoxFor(x => x.PhoneNumber, new { @class = "form-control" }) <small class="i">Configure <a href="@Url.Content("~/member/settings#Mobile")">SMS Mobile Alerts</a></small>
                        </td>
                    </tr>
                    <tr>
                        <td class="b text-right">
                            Email:
                        </td>
                        <td>
                            @Html.TextBoxFor(x => x.Email, new { @class = "form-control" })
                            <small class="i">updates contact email only, not the email you sign in with.</small>
                        </td>
                    </tr>
                    <tr>
                        <td class="b text-right">
                            Day Job:
                        </td>
                        <td>
                            @Html.TextBoxFor(x => x.DayJob, new { @class = "form-control" }) <small class="i">For use by the league in case they need your expertise.</small>
                        </td>
                    </tr>

                </table>
            </div>
            <div role="tabpanel" class="tab-pane well" id="Skating">
                <table class="table">
                    <tr>
                    <tr>
                        <td class="b text-right">
                            Date Started Skating:
                        </td>
                        <td>
                            @Html.TextBoxFor(model => model.StartedSkating, new { @class = "jquery_datepicker form-control", @Value = Model.StartedSkating.GetValueOrDefault().ToString("MM/dd/yyyy") })
                        </td>
                        <td></td>
                    </tr>
                    <tr>
                        <td class="b text-right">
                            Date Stopped Skating:
                        </td>
                        <td>
                            @if (Model.StoppedSkating.HasValue)
                            {
                                @Html.TextBoxFor(model => model.StoppedSkating, new { @class = "jquery_datepicker form-control", @Value = Model.StoppedSkating.GetValueOrDefault().ToString("MM/dd/yyyy") })
                            }
                            else
                            {
                                @Html.TextBoxFor(model => model.StoppedSkating, new { @class = "jquery_datepicker form-control" })
                            }
                        </td>
                        <td></td>
                    </tr>
                    <tr>
                        <td class="b text-right">
                            Insurance Number WFTDA/Expires:
                        </td>
                        <td>
                            @Html.TextBoxFor(x => x.InsuranceNumWftda, new { @class = "form-control" })
                        </td>
                        <td>
                            @if (Model.InsuranceNumWftdaExpires.HasValue)
                            {
                                @Html.TextBoxFor(x => x.InsuranceNumWftdaExpires, new { @class = "jquery_datepicker form-control", @Value = Model.InsuranceNumWftdaExpires.GetValueOrDefault().ToString("MM/dd/yyyy") })
                            }
                            else
                            {
                                @Html.TextBoxFor(x => x.InsuranceNumWftdaExpires, new { @class = "jquery_datepicker form-control" })
                            }
                        </td>
                    </tr>
                    <tr>
                        <td class="b text-right">
                            Insurance Number USARS/Expires:
                        </td>
                        <td>
                            @Html.TextBoxFor(x => x.InsuranceNumUsars, new { @class = "form-control" })
                        </td>
                        <td>
                            @if (Model.InsuranceNumUsarsExpires.HasValue)
                            {
                                @Html.TextBoxFor(x => x.InsuranceNumUsarsExpires, new { @class = "jquery_datepicker form-control", @Value = Model.InsuranceNumUsarsExpires.GetValueOrDefault().ToString("MM/dd/yyyy") })
                            }
                            else
                            {
                                @Html.TextBoxFor(x => x.InsuranceNumUsarsExpires, new { @class = "jquery_datepicker form-control" })
                            }
                        </td>
                    </tr>
                    <tr>
                        <td class="b text-right">
                            Insurance Number CRDI/Expires:
                        </td>
                        <td>
                            @Html.TextBoxFor(x => x.InsuranceNumCRDI, new { @class = "form-control" })
                        </td>
                        <td>
                            @if (Model.InsuranceNumCRDIExpires.HasValue)
                            {
                                @Html.TextBoxFor(x => x.InsuranceNumCRDIExpires, new { @class = "jquery_datepicker form-control", @Value = Model.InsuranceNumCRDIExpires.GetValueOrDefault().ToString("MM/dd/yyyy") })
                            }
                            else
                            {
                                @Html.TextBoxFor(x => x.InsuranceNumCRDIExpires, new { @class = "jquery_datepicker form-control" })
                            }
                        </td>
                    </tr>
                    <tr>
                        <td class="b text-right">
                            Insurance Number Other/Expires:
                        </td>
                        <td>
                            @Html.TextBoxFor(x => x.InsuranceNumOther, new { @class = "form-control" })
                        </td>
                        <td>
                            @if (Model.InsuranceNumOtherExpires.HasValue)
                            {
                                @Html.TextBoxFor(x => x.InsuranceNumOtherExpires, new { @class = "jquery_datepicker form-control", @Value = Model.InsuranceNumOtherExpires.GetValueOrDefault().ToString("MM/dd/yyyy") })
                            }
                            else
                            {
                                @Html.TextBoxFor(x => x.InsuranceNumOtherExpires, new { @class = "jquery_datepicker form-control" })
                            }
                        </td>
                    </tr>
                </table>

            </div>

            <div role="tabpanel" class="tab-pane well" id="League">
                @foreach (var league in Model.Leagues)
                {
                    <div class="col-lg-6 col-xs-12">
                        <div class="panel panel-default">
                            <div class="panel-body">
                                <h4 class="text-center">
                                    <a target="_blank" href="@Url.Content("http://rdnation.com/roller-derby-league/" + RDN.Utilities.Strings.StringExt.ToSearchEngineFriendly(league.Name) + "/" + league.LeagueId.ToString().Replace("-", ""))">
                                        @league.Name
                                    </a>
                                </h4>
                                <table class="table">
                                    @if (league.HasLeftLeague)
                                    {
                                        <tr>
                                            <td class="b text-right">Set Departure Date:</td>
                                            <td>
                                                @if (league.DepartureDate.HasValue)
                                                {
                                                    @Html.TextBox(league.LeagueId + "-LEAGUEDepartureDate", league.DepartureDate.GetValueOrDefault().ToString("MM/dd/yyyy"), new { @id = league.LeagueId + "-LEAGUEDepartureDate", @class = "jquery_datepicker form-control" })
                                                }
                                                else
                                                {
                                                    @Html.TextBox(league.LeagueId + "-LEAGUEDepartureDate", "", new { @id = league.LeagueId + "-LEAGUEDepartureDate", @class = "jquery_datepicker form-control" })
                                                }
                                            </td>
                                        </tr>
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="2" class="text-center">
                                                <span class="btn btn-danger" onclick="Member.RemoveSelfFromLeague(this, '@Model.MemberId','@league.LeagueId')">Leave The League</span>
                                            </td>
                                        </tr>
                                    }
                                </table>
                                <script type="text/javascript">
                                    $('#@league.LeagueId-LEAGUEDepartureDate').datepicker({
                                        required: false
                                    });

                                </script>
                            </div>
                        </div>
                    </div>
                }
                <div class="clearfix"></div>
            </div>
            <div role="tabpanel" class="tab-pane well" id="Federation">
                @foreach (var fed in Model.FederationsApartOf)
                {
                    <div class="col-lg-6 col-xs-12">
                        <div class="panel panel-default">
                            <div class="panel-body">
                                <h4>@fed.FederationName</h4>
                                <div>
                                    Class: @fed.MADEClassRank
                                </div>

                            </div>
                        </div>
                    </div>
                }
                <div class="clearfix"></div>
            </div>
            <div role="tabpanel" class="tab-pane well" id="Public">
                <table class="table">
                    <tr>
                        <td class="b text-right">
                            Hide Public Profile:
                        </td>
                        <td class="alignLeft">
                            <label>  @Html.CheckBoxFor(x => x.IsProfileRemovedFromPublicView) <small class="i">Removes profile from the public.</small></label>
                        </td>
                    </tr>
                    <tr>
                        <td class="b text-right">
                            Public Bio:
                        </td>
                        <td>

                            @Html.TextAreaFor(x => x.Bio, new { id = "wmd-input" })

                        </td>
                    </tr>
                </table>
            </div>
            <div role="tabpanel" class="tab-pane well" id="Address">
                <table class="table">
                    <tr>
                        <td class="b text-right">
                            Address:
                        </td>
                        <td>
                            @Html.TextBoxFor(x => x.Address, new { @class = "form-control" })
                        </td>
                    </tr>
                    <tr>
                        <td class="b text-right">
                            Address2:
                        </td>
                        <td>
                            @Html.TextBoxFor(x => x.Address2, new { @class = "form-control" })
                        </td>
                    </tr>
                    <tr>
                        <td class="b text-right">
                            City:
                        </td>
                        <td>
                            @Html.TextBoxFor(x => x.City, new { @class = "form-control" })
                        </td>
                    </tr>
                    <tr>
                        <td class="b text-right">
                            State:
                        </td>
                        <td>
                            @Html.TextBoxFor(x => x.State, new { @class = "form-control" })
                        </td>
                    </tr>
                    <tr>
                        <td class="b text-right">
                            Zip Code:
                        </td>
                        <td>
                            @Html.TextBoxFor(x => x.ZipCode, new { @class = "form-control" })
                        </td>
                    </tr>
                    <tr>
                        <td class="b text-right">
                            Country:
                        </td>
                        <td>

                            @Html.DropDownListFor(x => x.Country, @Model.Countries, "Select Country...", new { @class = "form-control" })
                            <span style="color: red;">@Html.ValidationMessageFor(m => m.Country)</span>
                        </td>
                    </tr>
                </table>

            </div>
        </div>

    </div>
    @Html.HiddenFor(x => x.MemberId)
    <div class="col-sm-10 col-sm-offset-1 col-xs-12">
        <div class="text-center">
            <input type="submit" class="btn btn-success" value="Save Information" />
        </div>
    </div>
}

<div class="col-sm-10 col-sm-offset-1 col-xs-12">
    @if (!Model.IsRetired)
    {
        using (Html.BeginForm("RetireSelf", "Member", FormMethod.Post))
        {

            <div class="pull-right">
                <input type="submit" class="btn btn-danger" onclick="return confirm('Really Retire Profile?');"
                       value="Retire Your Profile" />
            </div>
            @Html.HiddenFor(x => x.MemberId)

        }
    }
    else
    {
        using (Html.BeginForm("UnRetireSelf", "Member", FormMethod.Post))
        {
            <div class="pull-right">
                <input type="submit" class="btn btn-warning" value="UnRetire Your Profile" />
            </div>
            @Html.HiddenFor(x => x.MemberId)
        }
    }
</div>
<div class="clearfix"></div>
<br />
<br /><br />
<script type="text/javascript">
    $('#DOB').datepicker({ required: false });
    $('#StartedSkating').datepicker({
        required: false
    });
    $('#StoppedSkating').datepicker({
        required: false
    });

    $('#InsuranceNumOtherExpires').datepicker({
        required: false
    });
    $('#InsuranceNumUsarsExpires').datepicker({
        required: false
    });
    $('#InsuranceNumWftdaExpires').datepicker({
        required: false
    });
    $('#InsuranceNumCRDIExpires').datepicker({
        required: false
    });
    $(function () {
        tinymce.init({
            mode: "textareas",
            elements: "elm2",
            theme: "advanced",
            skin: "o2k7",
            skin_variant: "silver",
            plugins: "safari,style,layer,table,advhr,advimage,advlink,inlinepopups,preview,media,contextmenu,directionality,fullscreen,noneditable,visualchars,nonbreaking,xhtmlxtras,template",

            // Theme options
            theme_advanced_buttons1: "bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,|,bullist,numlist,|,outdent,indent,blockquote,|,formatselect,fontsizeselect",
            theme_advanced_buttons2: "link,unlink,anchor,image,cleanup,code,|,preview,|,forecolor,backcolor,|tablecontrols,|,hr,removeformat,visualaid,|,iespell,media,|,ltr,rtl",
            theme_advanced_buttons3: "",
            theme_advanced_buttons4: "",
            theme_advanced_toolbar_location: "top",
            theme_advanced_toolbar_align: "left",
            theme_advanced_statusbar_location: "bottom",
            theme_advanced_resizing: true,
        });
    });
</script>
