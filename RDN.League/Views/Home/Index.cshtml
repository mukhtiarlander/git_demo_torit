@using RDN.Library.Util;
@using RDN.Library.Classes.Calendar.Enums;
@using RDN.League.Models.Utilities;
@using RDN.League.Models.Helpers;
@using RDN.Portable.Classes.Controls.Calendar.Enums;
@using RDN.Portable.Classes.Controls.Calendar;
@model RDN.League.Models.League.HomeModel
@{
    ViewBag.Title = "Home";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var memId = RDN.Library.Classes.Account.User.GetMemberId();
    var AvailableType = from AvailibilityEnum d in Enum.GetValues(typeof(AvailibilityEnum))
                        where d.ToString() != "None"
                        select new { ID = (int)d, Name = RDN.Utilities.Enums.EnumExt.ToFreindlyName(d), Data = d.ToString() };
}
@if (Model.League == null)
{

    <div class="col-sm-7 col-sm-offset-1">
        <div class="panel panel-default ">
            <div class="panel-heading">Welcome to @RDN.Library.Classes.Config.LibraryConfig.WebsiteShortName!</div>
            <div class="panel-body">
                <div>
                    We at @RDN.Library.Classes.Config.LibraryConfig.WebsiteShortName are trying to create something every fan around the world as well as @RDN.Library.Classes.Config.LibraryConfig.SportName @RDN.Library.Classes.Config.LibraryConfig.NameOfMember would love.
                    From software, our plan is simple.  To make a smarter way to @RDN.Library.Classes.Config.LibraryConfig.SportName.
                    This is our idea and this is the execution of that idea.
                </div>
                <br />
                <div>
                    We are pure software people. So if you have an idea for @RDN.Library.Classes.Config.LibraryConfig.SportName that you would love to see implemented for the better of either your self
                    or the sport, please without a second thought, let us know. We are here for the
                    betterment of the entire community.
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-3 ">
        <div class="panel panel-default ">
            <div class="panel-heading">@RDN.Library.Classes.Config.LibraryConfig.WebsiteShortName News</div>
            <div class="panel-body">
                @if (ViewData["tumblr"] != null)
                {
                    for (int i = 0; i < 3; i++)
                    {
                        try
                        {
                            if (((Tumblr)ViewData["tumblr"]).Posts.Post[i] != null && ((Tumblr)ViewData["tumblr"]).Posts.Post[i].Type == "regular")
                            {
                                <div class="panelBoxNewsPost">
                                    - <a class="blogLink" target="_blank" href="@Url.Content(((Tumblr)ViewData["tumblr"]).Posts.Post[i].UrlSlug)">@(((Tumblr)ViewData["tumblr"]).Posts.Post[i].Title)</a>
                                </div>
                            }
                        }
                        catch { }
                    }
                }
            </div>
        </div>
    </div>

}
else
{
    <div class="row">
        <div class="col-xs-12 col-lg-10 col-lg-offset-1">
            <div class="row">
                <div class="col-xs-12 col-sm-9">
                    @if (!String.IsNullOrEmpty(Model.League.InternalWelcomeMessageHtml)) { 
                    <div class="panel panel-default ">
                        <div class="panel-heading">@Model.League.Name Homepage</div>
                        <div class="panel-body">
                            @if (Model.League.InternalWelcomeImage != null)
                            {
                                <div>
                                    <img alt="Internal Picture set by the league" class="lhsPicture" src="@Model.League.InternalWelcomeImage.ImageUrl" />
                                </div>
                            }
                            @if (!String.IsNullOrEmpty(Model.League.InternalWelcomeMessageHtml))
                            {
                                <div>
                                    @Html.Raw(Model.League.InternalWelcomeMessageHtml)
                                </div>
                            }
                        </div>
                    </div>
                    }

                    @if (Model.Polls != null && Model.Polls.Polls.Count > 0)
                    {
                        <div class="panel panel-default ">
                            <div class="panel-heading">    Votes Needed</div>
                            <div class="panel-body" style="overflow-x:auto">
                                <table class="table table-condensed table-hover no-margin-bottom" id="members">
                                    <thead> 
                                        <tr>
                                            <th>Question</th>
                                            <th class="text-center">Vote</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @for (int i = 0; i < Model.Polls.Polls.Count; i++)
                                        {
                                            if (Model.Polls.Polls[i].Version == 1)
                                            {
                                                <tr>
                                                    <td>
                                                        @Model.Polls.Polls[i].Question
                                                    </td>
                                                    <td class="text-center">
                                                        <a class="btn btn-primary btn-xs" href="@Url.Content("~/poll/vote/" + Model.Polls.LeagueId.ToString().Replace("-", "") + "/" + Model.Polls.Polls[i].VotingId)"><i class="fa fa-thumbs-up"></i> Vote</a>
                                                    </td>
                                                   
                                                </tr>
                                            }
                                            else
                                            {
                                                <tr>
                                                    <td>
                                                        @if (Model.Polls.Polls[i].IsOpenToLeague)
                                                        {
                                                            <a href="@Url.Content("~/poll/viewv2/" + Model.Polls.LeagueId.ToString().Replace("-", "") + "/" + Model.Polls.Polls[i].VotingId)">@Model.Polls.Polls[i].Title</a>
                                                        }
                                                        else
                                                        {
                                                            @Model.Polls.Polls[i].Title
                                                        }
                                                    </td>
                                                    <td class="text-center">
                                                        <a class="btn btn-primary btn-xs" href="@Url.Content("~/poll/votev2/" + Model.Polls.LeagueId.ToString().Replace("-", "") + "/" + Model.Polls.Polls[i].VotingId)"><i class="fa fa-thumbs-up"></i> Vote</a>
                                                    </td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    }
                    @if (Model.Forum.Count > 0)
                    {
                        <div class="panel panel-default">
                            <div class="panel-heading">Unread Forum Topics <span class="titleDesc">@Model.Forum.Count Unread Topics</span></div>
                            <div class="panel-body" style="overflow-x:auto">
                                <table class="table table-striped table-condensed table-hover">
                                    <thead>
                                        <tr>
                                            <th></th>
                                            <th>
                                                Topic
                                            </th>
                                            <th>
                                                Posts
                                            </th>
                                            <th>Group</th>
                                            <th>
                                                Views
                                            </th>
                                            <th>
                                                Last Post
                                            </th>
                                        </tr>
                                    </thead>
                                    @foreach (var topic in Model.Forum.OrderBy(x => x.LastModified))
                                    {
                                        <tr class="homeUpcomingRow">
                                            <td>
                                                <button onclick="Forum.MarkHomeForumTopicAsRead(this,'@topic.TopicId','@topic.ForumId')" type="button" class="btn btn-xs btn-default" data-toggle="tooltip" data-placement="top" title="Mark as Read"><i class="fa fa-envelope"></i></button> 
                                            </td>
                                            <td>
                                                <a class="b" href="@Url.Content("~/forum/post/view/" + Model.ForumId.ToString().Replace("-", "") + "/" + topic.TopicId + "/" + RDN.Utilities.Strings.StringExt.ToSearchEngineFriendly(topic.TopicTitle))">@topic.TopicTitle</a>
                                            </td>
                                            <td>

                                                @topic.Replies
                                            </td>
                                            <td>
                                                @topic.ForumGroup
                                            </td>
                                            <td>
                                                @topic.ViewCount
                                            </td>
                                            <td>
                                                <a target="_blank" href="@Url.Content("~/Member/" + topic.LastPostByMember.MemberId.ToString().Replace("-", "") + "/" + RDN.Utilities.Strings.StringExt.ToSearchEngineFriendly(topic.LastPostByMember.DerbyName))">
                                                    @topic.LastPostByMember.DerbyName
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </table>
                                @Html.Hidden("ForumId", Model.ForumId)
                            </div>
                        </div>
                    }
                    @if (Model.Calendar != null)
                    {
                        <div class="panel panel-default ">
                            <div class="panel-heading"> Upcoming Schedule <span class="titleDesc">@Model.Calendar.DaysToNextEvent Days Till Next Event</span></div>
                            <div class="panel-body" style="overflow-x:auto">
                                <table class="table table-striped table-hover table-condensed">
                                    <thead>
                                        <tr>
                                          
                                            <th class="text-center">RSVP</th>
                                            <th>
                                                Event
                                            </th>
                                            <th>
                                                Date
                                            </th>
                                            <th>
                                                Time
                                            </th>
                                            <th>
                                                Location
                                            </th>
                                        </tr>
                                    </thead>
                                    @foreach (var calEvent in Model.Calendar.Events.OrderBy(x => x.StartDate))
                                    {
                                        var avail = calEvent.Attendees.Where(x => x.MemberId == memId && x.Availability != AvailibilityEnum.None).FirstOrDefault();
                                        var attend = calEvent.Attendees.Where(x => x.MemberId == memId && x.IsCheckedIn == true).FirstOrDefault();
                                        var isApartOfEvent = calEvent.MembersApartOfEvent.Where(x => x.MemberId == memId).FirstOrDefault();
                                        <tr class="homeUpcomingRow" id="@calEvent.CalendarItemId-calendarEventRow">
                                            
                                            <td class="text-center vertical-middle column-nowrap"> 
                                                <div class='selectedColorList' style='background-color:@calEvent.ColorTempSelected;margin-right:5px'></div>
                                                @if (calEvent.EventType.EventType == CalendarEventTypeEnum.Birthday)
                                                {
                                                    <i class="fa fa-check-square fa-lg"></i>
                                                }
                                                else if (calEvent.EventType.EventType == CalendarEventTypeEnum.StartedDate)
                                                {
                                                    <img src="@Url.Content("~/Content/images/icons/games.png")" height="25px" />
                                                }
                                                else
                                                {
                                                    if (avail == null)
                                                    {
                                                        <button class="btn btn-sm btn-default" id="@calEvent.CalendarItemId-setAvail" onclick="javascript:setAvailForEvent('@Model.Calendar.CalendarId','@calEvent.CalendarItemId')"
                                                                data-container="body" data-toggle="popover" data-html="true">
                                                            <i class="fa fa-calendar fa-lg"></i>
                                                        </button>
                                                    }
                                                    else if (avail != null)
                                                    {
                                                        if (avail.Availability == AvailibilityEnum.Going)
                                                        {
                                                            <button class="btn btn-sm btn-success" id="@calEvent.CalendarItemId-setAvail" onclick="javascript:setAvailForEvent('@Model.Calendar.CalendarId','@calEvent.CalendarItemId')"
                                                                    data-container="body" data-toggle="popover" data-html="true">
                                                                <i class="fa fa-car fa-lg"></i>
                                                            </button>
                                                        }
                                                        else if (avail.Availability == AvailibilityEnum.Maybe_Going)
                                                        {
                                                            <button class="btn btn-sm btn-warning" id="@calEvent.CalendarItemId-setAvail" onclick="javascript:setAvailForEvent('@Model.Calendar.CalendarId','@calEvent.CalendarItemId')"
                                                                    data-container="body" data-toggle="popover" data-html="true">
                                                                <i class="fa fa-car fa-lg"></i>
                                                            </button>
                                                        }
                                                        else
                                                        {
                                                            <button class="btn btn-danger btn-sm padding-3 padding-left-10 padding-right-10" id="@calEvent.CalendarItemId-setAvail" onclick="javascript:setAvailForEvent('@Model.Calendar.CalendarId','@calEvent.CalendarItemId')"
                                                                    data-container="body" data-toggle="popover" data-html="true">
                                                                <i class="fa fa-home font18"></i>
                                                            </button>
                                                        }
                                                    }
                                                }

                                            </td>
                                            <td class="vertical-middle">
                                                @if (calEvent.EventType.EventType == CalendarEventTypeEnum.Event)
                                                {
                                                    <a href="@Url.Content("~/calendar/event/" + Model.Calendar.OwnerEntity.ToString().Replace("-", "") + "/" + Model.Calendar.CalendarId.ToString().Replace("-", "") + "/" + calEvent.CalendarItemId.ToString().Replace("-", ""))">@calEvent.Name</a>
                                                }
                                                else if (calEvent.EventType.EventType == CalendarEventTypeEnum.Birthday)
                                                {
                                                    <a href="@Url.Content("~/calendar/birthday/" + calEvent.CalendarItemId.ToString().Replace("-", "") + "/" + RDN.Utilities.Strings.StringExt.ToSearchEngineFriendly(calEvent.Name))">@calEvent.Name</a>
                                                }
                                                else if (calEvent.EventType.EventType == CalendarEventTypeEnum.StartedDate)
                                                {
                                                    <a href="@Url.Content("~/calendar/started-playing/" + calEvent.CalendarItemId.ToString().Replace("-", "") + "/" + RDN.Utilities.Strings.StringExt.ToSearchEngineFriendly(calEvent.Name))">@calEvent.Name</a>
                                                }
                                            </td>
                                            <td class="vertical-middle">

                                                <span>@calEvent.StartDate.ToString("ddd"), @calEvent.StartDate.ToShortDateString()</span>

                                            </td>
                                            <td class="vertical-middle">
                                                @if (calEvent.EventType.EventType == CalendarEventTypeEnum.Event)
                                                {
                                                    <span>@calEvent.StartDate.ToShortTimeString() - @calEvent.EndDate.ToShortTimeString()</span>
                                                }
                                            </td>
                                            <td class="vertical-middle">    
                                                @if (calEvent.EventType.EventType == CalendarEventTypeEnum.Event && calEvent.Location != null)
                                                {
                                                    @calEvent.Location.LocationName
                                                }
                                            </td>

                                        </tr>

                                    }
                                </table>

                            </div>
                        </div>
                    }
                </div>

                <div class="col-xs-12 col-sm-3">
                    <div class="panel panel-default ">
                        <div class="panel-heading">@RDN.Library.Classes.Config.LibraryConfig.WebsiteShortName News</div>
                        <div class="panel-body">
                            @if (ViewData["tumblr"] != null)
                            {
                                for (int i = 0; i < 3; i++)
                                {
                                    try
                                    {
                                        if (((Tumblr)ViewData["tumblr"]).Posts.Post[i] != null && ((Tumblr)ViewData["tumblr"]).Posts.Post[i].Type == "regular")
                                        {
                                            <div class="panelBoxNewsPost">
                                                - <a class="blogLink" target="_blank" href="@Url.Content(((Tumblr)ViewData["tumblr"]).Posts.Post[i].UrlSlug)">@(((Tumblr)ViewData["tumblr"]).Posts.Post[i].Title)</a>
                                            </div>
                                        }
                                    }
                                    catch { }
                                }
                            }
                        </div>
                    </div>


                    @if (Model.League.Logo != null)
                    {
                        <div class="panel panel-default ">

                            <div class="panel-body">
                                <img alt="@Model.League.Logo.Alt" class=" img-responsive img-rounded" src="@Model.League.Logo.ImageUrl" />
                            </div>
                        </div>
                    }
                </div>
                <div id="availablePopUp" style="display: none;">
                    <div class="row">
                        <div class="col-xs-12">
                            <label class="form-label">Available Type</label>
                            <div class="margin-bottom-20">
                                @Html.DropDownList("availableSelection", new SelectList(AvailableType, "Data", "Name"), "Set Availability...", new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-xs-12">
                            <label class="form-label">Notes</label>
                            <div class="margin-bottom-20">
                                <input type="text" id="availableNotes" class="form-control" />
                            </div>
                        </div>
                        <div class="col-xs-12">
                            <button type="button" id="availableButtonPopUp" value="Set Availability" class="btn btn-primary" onclick="javascript:setAvailabilityMemberToEvent()">Set Availability</button>
                            <button type="button" class="btn btn-default" tabindex="-1" onclick="javascript:CloseAddedRow()">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
