@model RDN.Library.Classes.League.BoutList
@{
    ViewBag.Title = "Edit Bout Request";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<ol class="breadcrumb">
    <li><a href="@RDN.Library.Classes.Config.LibraryConfig.InternalSite">Home</a></li>
    <li><a href="@Url.Content("~/challenge/view/all")">Challenge Requests</a></li>
    <li class="active">Edit @RDN.Library.Classes.Config.LibraryConfig.GameName Challenge</li>
</ol>


<div class="row">
    <div class="col-xs-12 col-md-10 col-md-offset-1 col-lg-8 col-lg-offset-2">
        <div class="panel panel-default">
            <div class="panel-heading">
                <div class="row">
                    <div class="col-xs-6 col-md-8">
                        <h3 class="margin-bottom-10 margin-top-5"><i class="fa fa-pencil"></i> Edit Request for @RDN.Library.Classes.Config.LibraryConfig.GameName Challenge</h3>        
                    </div>
                    <div class="col-xs-6 col-md-4 text-right">
                        <a class="btn btn-warning btn-sm" onclick="return confirm('Close the Request Because You Found a team?')" title="Close Request" href="@Url.Content("~/challenge/close/" + Model.ChallengeId + "/" + Model.LeagueId.ToString().Replace("-", ""))">
                            <i class="fa fa-times"></i> Close
                        </a>
                        <a class="btn btn-danger btn-sm" onclick="return confirm('Really Delete?')" title="Delete Request" href="@Url.Content("~/challenge/delete/" + Model.ChallengeId + "/" + Model.LeagueId.ToString().Replace("-", ""))">
                            <i class="fa fa-trash"></i> Delete
                        </a>
                    </div>
                </div>
                <span class="text-muted">
                    Edit/Close a @RDN.Library.Classes.Config.LibraryConfig.GameName Challenge here for your league.  You are requesting other leagues to play you.  While some of these questions are more for the host, if your league is traveling, you can also add a request.
                </span>
            </div>
            @using (Html.BeginForm("EditBoutRequest", "BoutChallenge", FormMethod.Post, new { @id = "editRequest" }))
            {
                <div class="panel-body">
                    <div class="row">
                        
                        <div class="col-xs-12 col-sm-6">
                            <div class="form-label margin-bottom-5">Location</div>
                            <div class="margin-bottom-15">
                                @Html.TextBoxFor(x => x.Location, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6">
                            <div class="form-label margin-bottom-5">Start Date of Game</div>
                            <div class="margin-bottom-15">
                                @Html.TextBoxFor(models => models.StartDateOfEvent, new { @class = "jquery_datepicker form-control", @Value = Model.StartDateOfEvent > new DateTime() ? Model.StartDateOfEvent.ToString("MM/dd/yyyy") : "" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6">
                            <div class="form-label margin-bottom-5">End Date of Game</div>
                            <div class="margin-bottom-15">
                                @Html.TextBoxFor(models => models.EndDateOfEvent, new { @class = "jquery_datepicker form-control", @Value = Model.EndDateOfEvent > new DateTime() ? Model.EndDateOfEvent.ToString("MM/dd/yyyy") : "" }) <span class="i text-muted">If there is no specific date required</span>
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6">
                            <div class="form-label margin-bottom-5"> Crowd Size</div>
                            <div class="margin-bottom-15">
                                @Html.TextBoxFor(x => x.CrowdSize, new { @class = "form-control" }) <span class="i text-muted">1-9999</span>
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6">
                            <div class="form-label margin-bottom-5">Current Ranking</div>
                            <div class="margin-bottom-15">
                                @Html.TextBoxFor(x => x.CurrentRanking, new { @class = "form-control" }) <span class="i text-muted">Exp: 150 WFTDA, 110 FlatTrackStats</span>
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6">
                            <div class="form-label margin-bottom-5">Travel Stipend Amount</div>
                            <div class="margin-bottom-15">
                                @Html.TextBoxFor(x => x.TravelStipendAmount, new { @class = "form-control" }) <span class="i text-muted">Amount able to help pay.</span>
                            </div>
                        </div>
                        <div class="col-xs-12">
                            <div class="margin-bottom-15">
                                <label>@Html.CheckBoxFor(x => x.IsOfferTravelStipend) <span>Can you help pay travel expenses?</span></label>
                            </div>
                        </div>

                        <div class="col-xs-12">
                            <div class="margin-bottom-15">
                                <label>@Html.CheckBoxFor(x => x.IsStreamLive) <span>Do you broadcast live online/TV?</span></label>
                            </div>
                        </div>
                        <div class="col-xs-12">
                            <div class="margin-bottom-15">
                                <label>@Html.CheckBoxFor(x => x.IsSkaterHousingOffered) <span>Can your league offer housing?</span></label>
                            </div>
                        </div>
                        <div class="col-xs-12">
                            <div class="margin-bottom-15">
                                <label>@Html.CheckBoxFor(x => x.IsHangOverBoutOffered)<span>Leagues like hang over bouts the next day.  Can your league offer one?</span></label>
                            </div>
                        </div>
                        <div class="col-xs-12">
                            <div class="margin-bottom-15">
                                <label>@Html.CheckBoxFor(x => x.IsAwayGame)<span>Looking for an Away game rather than a home game?</span></label>
                            </div>
                        </div>
                        <div class="col-xs-12">
                            <div class="margin-bottom-15">
                                <label>@Html.CheckBoxFor(x => x.DisplayToPublic)<span>Will be shown publicly to anyone visiting @RDN.Library.Classes.Config.LibraryConfig.WebsiteShortName.</span></label>
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6">
                            <div class="margin-bottom-15">
                                @Html.DropDownListFor(x => x.RuleSetId, new SelectList(ViewBag.RuleSets, "Value", "Text"), new { @class = "full-width" })
                            </div>
                        </div>
                        <div class="col-xs-12">
                            <div class="margin-bottom-15">
                                @Html.TextArea("EventInformation", new
                                {
                                    id = "wmd-input",
                                    @Value = Model.EventInformation != null ? Model.EventInformation.ToString() : "",
                                    style = "width:100%"
                                })
                            </div>
                        </div>
                        @Html.HiddenFor(x => x.ChallengeId)
                    </div>
                </div>
                <div class="panel-footer">
                    <button type="submit" class="btn btn-sm btn-success" name="saveRequest"><i class="fa fa-paper-plane"></i> Save Request</button>
                    <a class ="btn btn-sm btn-default" href="@Url.Content("~/challenge/view/all")">Cancel</a>
                </div>
            }
        </div>
    </div>
</div>


<script type="text/javascript">
    $("#editRequest").validate({
        rules: {
            Location: "required",
            DateOfEvent: "required"
        }
    });
    $('#EndDateOfEvent').datepicker({
        onSelect: function () { },
        onClose: function () { $(this).focus(); }
    });
    $('#StartDateOfEvent').datepicker({
        onSelect:
          function (dateText, inst) {
              $('#EndDateOfEvent').datepicker("option", 'minDate', new Date(dateText));
          },
        onClose: function () { $(this).focus(); }
    });
    $(function () {
        tinymce.init({
            mode: "textareas",
            elements: "elm2",
            theme: "modern",
            plugins: "layer,table,preview,media,contextmenu,directionality,fullscreen,noneditable,visualchars,nonbreaking,template,link",
        });
    });
</script>

