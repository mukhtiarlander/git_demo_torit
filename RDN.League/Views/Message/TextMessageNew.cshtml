@using RDN.League.Models.Messages
@using RDN.Library.Cache
@model MessageModel
@{
    ViewBag.Title = "Create New Message";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<ol class="breadcrumb">
    <li><a href="@RDN.Utilities.Config.ConfigManager.InternalSite">Home</a></li>
    <li><a href="@Url.Content("~/messages/" + RDN.Portable.Classes.Controls.Message.Enums.GroupOwnerTypeEnum.member + "/" + RDN.Library.Classes.Account.User.GetMemberId().ToString().Replace("-", ""))">Messages</a></li>
    <li class="active">New Text Message</li>
</ol>

<div class="row">
    <div class="col-xs-12 col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="margin-bottom-10 margin-top-5"><i class="fa fa-envelope-o"></i> Send New Text Message</h3>
            </div>
            @using (Html.BeginForm("CreateNewTextMessage", "Message", FormMethod.Post))
            {
                <div class="panel-body">
                    <div class="row">
                        <div class="col-xs-12 margin-bottom-10">
                            <div class="btn-group" role="group" aria-label="...">
                                <div class="btn-group" role="group">
                                    <a class="btn btn-sm btn-default" href="@Url.Content("~/textmessages/new/" + RDN.Portable.Classes.Controls.Message.Enums.GroupOwnerTypeEnum.member + "/" + RDN.Library.Classes.Account.User.GetMemberId().ToString().Replace("-", ""))">View All Members</a>
                                </div>
                                @if (MemberCache.GetLeagueIdOfMember(RDN.Library.Classes.Account.User.GetMemberId()) != new Guid())
                                {
                                    <div class="btn-group" role="group"><a class="btn  btn-sm btn-default" href="@Url.Content("~/textmessages/new/" + RDN.Portable.Classes.Controls.Message.Enums.GroupOwnerTypeEnum.League + "/" + MemberCache.GetLeagueIdOfMember(RDN.Library.Classes.Account.User.GetMemberId()).ToString().Replace("-", ""))">League Members</a></div>
                                }
                            </div>
                        </div>
                        <div class="col-xs-12 font16">
                            <label class="form-label margin-top-10">
                                To Selected
                            </label>
                            <button type="button" class="btn btn-warning btn-sm pull-right" onclick="javascript:Messages.ShowNewTextMessageMembersPopup()"><i class="fa fa-check-square-o"></i> Select</button>
                            <div class="panel panel-default">
                                <div class="panel-body padding-left-5 padding-right-5 padding-bottom-5 no-padding-top">
                                    <div name="ToMemberNamesSelected" id="ToMemberNamesSelected">
                                        <span class="margin-top-5 pull-left">No Recipients Selected!</span>
                                    </div>
                                    @Html.HiddenFor(x => x.ToMemberIds)
                                </div>
                            </div>
                            <div class="modal fade" id="NewTextMessageMembersPopup" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h4 class="modal-title"><i class="fa fa-check-square-o"></i> Known Recipients</h4>
                                        </div>
                                        <div class="modal-body padding-10">
                                            <div class="text-right">
                                                <label class="margin-left-10 no-bold">
                                                    <input type="checkbox" onchange="Messages.toggleCheckedForRecipients(this)" id="checkAll" />
                                                    Select All
                                                </label>
                                            </div>
                                            <div id="checkboxes" class="row panel panel-default no-margin padding-top-10 scroll-y mh400">
                                                @foreach (var mem in Model.Recipients)
                                                {
                                                    <div class="col-xs-12 col-sm-6">
                                                        <label class="no-bold">
                                                            @Html.CheckBox(mem.MemberId.ToString(), new { @derbyname = mem.DerbyName, @onchange = "Messages.ChangeDictionaryItem(this, '" + mem.MemberId + "','" + mem.DerbyName + "')" })<span id="@mem.MemberId.ToString()-name">
                                                                @mem.DerbyName  @if (!String.IsNullOrEmpty(mem.Firstname) || !String.IsNullOrEmpty(mem.LastName))
                                                                {
                                                                    <span>[@((mem.Firstname + " " + mem.LastName).Trim())]</span>
                                                                }
                                                            </span>
                                                        </label>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" data-dismiss="modal" class="btn btn-primary btn-sm"><i class="fa fa-check"></i> Done</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                       
                    </div>
                    <div class="row">
                        <div class="col-xs-12">
                            <p>This list is people you are connected to within @RDN.Library.Classes.Config.LibraryConfig.WebsiteShortName.</p>
                            <div class="alert alert-info">
                                You can send a Text Message to those people you are connected with through @RDN.Library.Classes.Config.LibraryConfig.WebsiteShortName. Text Messages are NOT saved within @RDN.Library.Classes.Config.LibraryConfig.WebsiteShortName nor can anyone reply to them. If someones phone number isn't verified with RDNation, they will be sent an email instead.
                                @if (!Model.IsCarrierVerified)
                                {
                                    <span><a href="@Url.Content("~/member/settings")">Verify Your Phone Number Now</a></span>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12">
                            <div class="form-label margin-bottom-5">To Additional  <button type="button" onclick="Messages.ExpandGroupMemberList()" class="btn btn-sm btn-default"><i class="fa fa-arrow-circle-o-down fa-lg"></i></button></div>
                            <div class="margin-bottom-10">
                                <div class="displayNone groupMemberLists" id="groupMemberLists">
                                    <ul id="groupList" class="noList no-padding"></ul>
                                    <div class="clear"></div>
                                </div>

                                @Html.HiddenFor(x => x.ToGroupIds)
                            </div>
                            <div class="form-label margin-bottom-5">
                                Text To Send <small class="pull-right text-muted">Max character limit: 150</small>
                            </div>
                            <div class="margin-bottom-10">
                                @Html.TextArea("MessageTextWriting", new { maxlength = "150", rows = "2", @class = "form-control full-width h60" })
                                <label id="counter" class="margin-top-10"></label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel-footer">
                    <button class="btn btn-sm btn-success" type="submit"><i class="fa fa-envelope-o"></i> Send Text</button>
                    <a class="btn btn-sm btn-default" href="@Url.Content("~/messages/" + Model.OwnerType.ToString() + "/" + Model.OwnerId.ToString().Replace("-", ""))">Cancel Message</a>
                </div>
                 @Html.HiddenFor(x => x.OwnerType)
                @Html.HiddenFor(x => x.OwnerId)
            }
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        Messages.InitializeNewMessages();
        /**
         * Character Counter for inputs and text areas
         */
        $('#MessageTextWriting').each(function () {
            // get current number of characters
            var length = $(this).val().length;
            // get current number of words
            // update characters
            $("#counter").html(length + ' characters');
            // bind on key up event
            $(this).keyup(function () {
                // get new length of characters
                var new_length = $(this).val().length;
                $("#counter").html(new_length + ' characters');
            });
        });

    });
</script>