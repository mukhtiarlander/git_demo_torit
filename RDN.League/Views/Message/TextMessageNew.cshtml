@using RDN.League.Models.Messages
@using RDN.Library.Cache
@model MessageModel
@{
    ViewBag.Title = "Create New Message";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<ol class="breadcrumb">
    <li><a href="@RDN.Utilities.Config.ConfigManager.InternalSite">Home</a></li>
    <li><a href="@Url.Content("~/messages/" + RDN.Portable.Classes.Controls.Message.Enums.GroupOwnerTypeEnum.member + "/" + RDN.Library.Classes.Account.User.GetMemberId().ToString().Replace("-", ""))">Messages</a></li>
    <li class="active">New Text Message</li>
</ol>

<div class="row">
    <div class="col-xs-12 col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="margin-bottom-10 margin-top-5"><i class="fa fa-envelope-o"></i> Send New Message</h3>
            </div>
            @using (Html.BeginForm("CreateNewTextMessage", "Message", FormMethod.Post))
            {
                <div class="panel-body">
                    <div class="row">
                        <div class="col-xs-12 col-sm-4 col-md-6 font16">
                            Known Recipients
                            <label class="margin-left-10" style="font-weight:normal">
                                <input type="checkbox" onchange="Messages.toggleCheckedForRecipients(this)" id="checkAll" />
                                Check All
                            </label>
                        </div>
                        <div class="col-xs-12 col-sm-8 col-md-6 text-right">

                            <div class="btn-group" role="group" aria-label="...">
                                <div class="btn-group" role="group">
                                    <a class="btn btn-sm btn-default" href="@Url.Content("~/textmessages/new/" + RDN.Portable.Classes.Controls.Message.Enums.GroupOwnerTypeEnum.member + "/" + RDN.Library.Classes.Account.User.GetMemberId().ToString().Replace("-", ""))">View All Members</a>
                                </div>
                                @if (MemberCache.GetLeagueIdOfMember(RDN.Library.Classes.Account.User.GetMemberId()) != new Guid())
                                {
                                    <div class="btn-group" role="group"><a class="btn  btn-sm btn-default" href="@Url.Content("~/textmessages/new/" + RDN.Portable.Classes.Controls.Message.Enums.GroupOwnerTypeEnum.League + "/" + MemberCache.GetLeagueIdOfMember(RDN.Library.Classes.Account.User.GetMemberId()).ToString().Replace("-", ""))">League Members</a></div>
                                }
                            </div>
                        </div>
                       </div>
                    <div class="row margin-top-10">
                        <div class="col-xs-12">
                            <div class="panel panel-default">
                                <div class="panel-body">
                                    <div class="row">
                                        <div id="checkboxes">
                                            @foreach (var mem in Model.Recipients)
                                            {
                                                <div class="col-xs-12 col-sm-6 col-md-4">
                                                    <label style="font-weight:normal">
                                                        @Html.CheckBox(mem.MemberId.ToString(), new { @derbyname = mem.DerbyName, @onchange = "Messages.ChangeDictionaryItem(this, '" + mem.MemberId + "','" + mem.DerbyName + "')" })<span id="@mem.MemberId.ToString()-name">
                                                            @mem.DerbyName  @if (!String.IsNullOrEmpty(mem.Firstname) || !String.IsNullOrEmpty(mem.LastName))
                                                            {
                                                                <span>[@((mem.Firstname + " " + mem.LastName).Trim())]</span>
                                                            }
                                                        </span>
                                                    </label>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12">
                            <p>This list is people you are connected to within RDNation.</p>
                            <div class="alert alert-info">
                                You can send a Text Message to those people you are connected with through RDNation. Text Messages are NOT saved within RDNation nor can anyone reply to them. If someones phone number isn't verified with RDNation, they will be sent an email instead.
                                @if (!Model.IsCarrierVerified)
                                {
                                    <span><a href="@Url.Content("~/member/settings")">Verify Your Phone Number Now</a></span>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12">
                            <div class="form-label">To Selected</div>
                            <div class="margin-bottom-10">
                                <div name="ToMemberNamesSelected" id="ToMemberNamesSelected">
                                </div>
                                @Html.HiddenFor(x => x.ToMemberIds)
                            </div>
                            <div class="form-label margin-bottom-5">To Additional  <button type="button" onclick="Messages.ExpandGroupMemberList()" class="btn btn-xs btn-default"><i class="fa fa-arrow-circle-o-down fa-lg"></i></button></div>
                            <div class="margin-bottom-10">
                                <div class="displayNone groupMemberLists" id="groupMemberLists">
                                    <ul id="groupList" class="noList no-padding"></ul>
                                    <div class="clear"></div>
                                </div>

                                @Html.HiddenFor(x => x.ToGroupIds)
                            </div>
                            <div class="form-label margin-bottom-5">
                                Text To Send
                            </div>
                            <div class="margin-bottom-10">
                                @Html.TextArea("MessageTextWriting", new { maxlength = "150", rows = "2", style = "height:60px;width:100%", @class = "form-control" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel-footer">
                    <button class="btn btn-sm btn-success" type="submit"><i class="fa fa-envelope-o"></i> Send Text</button>
                    <a class="btn btn-sm btn-default" href="@Url.Content("~/messages/" + Model.OwnerType.ToString() + "/" + Model.OwnerId.ToString().Replace("-", ""))">Cancel Message</a>
                </div>
                 @Html.HiddenFor(x => x.OwnerType)
                @Html.HiddenFor(x => x.OwnerId)
            }
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        Messages.InitializeNewMessages();
        /**
         * Character Counter for inputs and text areas
         */
        $('#MessageTextWriting').each(function () {
            // get current number of characters
            var length = $(this).val().length;
            // get current number of words
            // update characters
            $("#counter").html(length + ' characters');
            // bind on key up event
            $(this).keyup(function () {
                // get new length of characters
                var new_length = $(this).val().length;
                $("#counter").html(new_length + ' characters');
            });
        });

    });
</script>