@using RDN.League.Models.Messages
@using RDN.Library.Cache
@model MessageModel
@{
    ViewBag.Title = "Create New Message";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<ol class="breadcrumb">
    <li><a href="@RDN.Utilities.Config.ConfigManager.InternalSite">Home</a></li>
    <li><a href="@Url.Content("~/messages/" + RDN.Portable.Classes.Controls.Message.Enums.GroupOwnerTypeEnum.member + "/" + RDN.Library.Classes.Account.User.GetMemberId().ToString().Replace("-", ""))">Messages</a></li>
    <li class="active">New Text Message</li>
</ol>

<div class="row">
    <div class="col-xs-12 col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="margin-bottom-10 margin-top-5"><i class="fa fa-envelope-o"></i> Send New Text Message </h3>
                <span class="text-muted">
                    You can send a Text Message to those people you are connected with through @RDN.Library.Classes.Config.LibraryConfig.WebsiteShortName. Text Messages are NOT saved within @RDN.Library.Classes.Config.LibraryConfig.WebsiteShortName nor can anyone reply to them. If someones phone number isn't verified with @RDN.Library.Classes.Config.LibraryConfig.WebsiteShortName, they will be sent an email instead.
                    @if (!Model.IsCarrierVerified)
                    {
                        <span><a href="@Url.Content("~/member/settings")">Verify Your Phone Number Now</a></span>
                    }
                </span>
            </div>
            @using (Html.BeginForm("CreateNewTextMessage", "Message", FormMethod.Post, new { onsubmit = "Messages.SaveRecipientListToForm(0)" }))
            {
                <div class="panel-body">
                    <div class="row">
                        <div class="col-xs-12 ">
                            <div class="form-label margin-bottom-5">
                                <label class="form-label margin-top-10">
                                    Members and Groups
                                </label>

                            </div>
                            <div class="input-group margin-bottom-5">
                                @Html.TextBoxFor(x => x.ToMemberNames, new { @class = "form-control full-width" })
                                <span class="input-group-btn">
                                    <button type="button" class="btn btn-warning pull-right" onclick="Messages.ShowNewTextMessageMembersPopup()"><i class="fa fa-check-square-o"></i> Select</button>
                                </span>
                                @Html.HiddenFor(x => x.ToMemberIds)
                            </div>
                        </div>
                    </div>



                    <div class="row">
                        <div class="col-xs-12">

                            <div class="form-label margin-bottom-5">
                                Message <small class="pull-right text-muted">Max character limit: 150</small>
                            </div>
                            <div class="margin-bottom-10">
                                @Html.TextArea("MessageTextWriting", new { maxlength = "150", rows = "2", @class = "form-control full-width h60" })
                                <label id="counter" class="margin-top-10"></label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel-footer">
                    <button class="btn btn-sm btn-success" type="submit"><i class="fa fa-envelope-o"></i> Send Text</button>
                    <a class="btn btn-sm btn-default" href="@Url.Content("~/messages/" + Model.OwnerType.ToString() + "/" + Model.OwnerId.ToString().Replace("-", ""))">Cancel Message</a>
                </div>
                @Html.HiddenFor(x => x.OwnerType)
                @Html.HiddenFor(x => x.OwnerId)
                <div class="modal fade" id="NewTextMessageMembersPopup" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h4 class="modal-title"><i class="fa fa-check-square-o"></i> Known Recipients</h4>
                            </div>

                            <div class="modal-body padding-10">
                                @if (Model.Groups.Count > 0)
                                {
                                    <div class="text-right">
                                        <label class="margin-left-10" style="font-weight:normal">
                                            <input type="checkbox" onchange="Messages.ToggleCheckedAllForGroups(this)" id="checkAll" />
                                            Select All
                                        </label>
                                    </div>
                                    <div id="groupCheckBoxes" class="row panel panel-default no-margin padding-top-10" style="max-height:300px; overflow-y:auto">
                                        @foreach (var group in Model.Groups)
                                        {
                                            <div class="col-xs-12 col-sm-6">
                                                <label class="no-bold">
                                                    @Html.CheckBox(group.Id.ToString(), new { @derbyname = group.GroupName, @onchange = "Messages.SelectRecipient(this, '" + group.Id + "','" + group.GroupName + "')" })<span id="@group.Id.ToString()-name">
                                                        @group.GroupName
                                                    </span>
                                                </label>
                                            </div>
                                        }
                                    </div>
                                }
                                <div class="text-right">
                                    <label class="margin-left-10 no-bold">
                                        <input type="checkbox" onchange="Messages.ToggleCheckedAllForRecipients(this)" id="checkAllMembers" />
                                        Select All
                                    </label>
                                </div>
                                <div id="checkboxesForMembers" class="row panel panel-default no-margin padding-top-10 scroll-y mh400">
                                    @foreach (var mem in Model.Recipients)
                                    {
                                        <div class="col-xs-12 col-sm-6">
                                            <label class="no-bold">

                                                @Html.CheckBox(mem.MemberId.ToString(), new { @class = "cbm", @derbyname = mem.SiteName, @onchange = "Messages.SelectRecipient(this, '" + mem.MemberId + "','" + mem.SiteName + "')" })
                                                <span id="@mem.MemberId.ToString()-name">
                                                    @mem.SiteName
                                                </span>

                                            </label>
                                        </div>
                                    }
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" data-dismiss="modal" class="btn btn-primary btn-sm"><i class="fa fa-check"></i> Done</button>
                            </div>
                        </div>
                    </div>
                </div>

            }
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        var memberId = '@Model.OwnerId.ToString().Replace("-","")';
        var type = '@Model.OwnerType.ToString()';
        Messages.SetupNewMessage(memberId, type);
        $('#MessageTextWriting').each(function () {
            var length = $(this).val().length;
            $("#counter").html(length + ' characters');
            $(this).keyup(function () {
                var new_length = $(this).val().length;
                $("#counter").html(new_length + ' characters');
            });
        });
    });
</script>