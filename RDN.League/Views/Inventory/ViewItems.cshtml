@model List<RDN.Library.Classes.League.ItemInfoDA>
@{
    ViewBag.Title = "Inventory";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var memId = RDN.Library.Classes.Account.User.GetMemberId();
    Guid leagueId = RDN.Library.Cache.MemberCache.GetLeagueIdOfMember(memId);
    bool isSec = RDN.Library.Cache.MemberCache.IsInventoryOrBetterOfLeague(memId);
    
}
@helper Truncate(string input, int length = 30)
{
    if (input != null)
    {
        if (input.Length <= length)
        {
    @input
        }
        else
        {
    @input.Substring(0, length)<text>...</text>
        }
    }
    else
    {
    <text><i>Null</i></text>
    }
}

<ol class="breadcrumb">
    <li><a href="@RDN.Utilities.Config.ConfigManager.InternalSite">Home</a></li>
    <li class="active">Inventory</li>
</ol>

<div class="panel panel-default margin-top-20">
    <div class="panel-heading">
        <div class="row">
            <div class="col-xs-6 col-sm-9">
                <h3 style="margin-top:5px !important"><i class="fa fa-cubes"></i> Inventory Items For The League</h3>
            </div>
            <div class="col-xs-6 col-sm-3">
                @if (isSec)
                {
                    <a class="btn btn-success pull-right" href="@Url.Content("~/league/inventory/add")">
                        <i class="fa fa-plus-circle"></i> Add
                    </a>
                }
            </div>
        </div>
        <div class="text-muted">Here we help you manage the inventory items including laptops, whiteboards, projectors, screens etc...</div>
    </div>
    <div class="panel-body no-padding padding-top-10">
        <table class="table table-striped table-hover table-condensed no-margin-bottom" id="jobBoard">
            <thead>
                <tr>
                   
                    <th>Item Name</th>
                    <th>Item Serial No</th>
                    <th>Unit Price</th>
                    <th>Quantity</th>
                    <th>Location</th>
                    @if (isSec)
                    {
                        <th></th>
                    }
                </tr>
            </thead>
            <tbody>

                @foreach (var b in Model)
                {
                    <tr>
                        
                        <td>
                            @Truncate(b.ItemName, 18)
                        </td>
                        <td>
                            @b.ItemSerialNo
                        </td>
                        <td>
                            @Truncate(b.UnitePice, 10)
                        </td>
                        <td>
                            @Truncate(b.Quantity, 20)
                        </td>
                        <td>
                            @b.Location.ToString()
                        </td>
                        @if (isSec)
                        {
                            <td>
                                <a class="btn btn-warning btn-xs" href="@Url.Content("~/league/inventory/Details/" + b.ItemId + "/" + b.ItemsForLeague.ToString().Replace("-", ""))"><i class="fa fa-eye"></i> View </a>
                                <a class="btn btn-info btn-xs" href="@Url.Content("~/league/inventory/Edit/" + b.ItemId + "/" + b.ItemsForLeague.ToString().Replace("-", ""))"><i class="fa fa-pencil"></i> Edit </a>
                            </td>
                        }
                    </tr>
                }
            </tbody>

        </table>
    </div>
</div>
