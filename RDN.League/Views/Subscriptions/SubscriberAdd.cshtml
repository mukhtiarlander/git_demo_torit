@model RDN.Library.Classes.EmailServer.SubscriptionFactory
@{
    ViewBag.Title = "Add New Subscriber";
    Layout = "~/Views/Shared/_Layout.cshtml";
    Guid memId = RDN.Library.Classes.Account.User.GetMemberId();
    bool subPaid = RDN.Library.Cache.MemberCache.CheckIsLeagueSubscriptionPaid(memId);
    
}

<div class="fixedContainer">
    <div class="fixedlinksContainter">
        <div class="backLink">
        </div>
    </div>
    <div class="fixedCenterContainter">
        <div class="fixTitle">
         Subscription Type: @RDN.Utilities.Enums.EnumExt.ToFreindlyName((RDN.Library.DataModels.EmailServer.Enums.SubscriberTypeEnum)Model.SubscriberTypeEnum)
        </div>

        <div class="titleDescription">
            Add a new subscriber here.
     
        </div>
        <div class="divider"></div>

        <div>
            @using (Html.BeginForm("SubscriberAdd", "Subscriptions", FormMethod.Post, new { @id = "addNewSubscriber" }))
            { 
                <table class="addForumPostTbl">
                    <tr>
                        <td class="b alRight">Subscriber Name:
                        </td>
                        <td class="largeInput">
                            @Html.TextBoxFor(x => x.Name)
                        </td>
                    </tr>
                  @*    <tr>
                        <td class="b alRight">Subscriber Type:
                        </td>
                        <td class="largeInput">
                            @Html.DropDownListFor(x => x.SubscriberTypeEnum, new SelectList(ViewBag.Sets, "Value", "Text"))
                        </td>
                    </tr>*@

                     @if (Model.SubscriberTypeEnum == 0)
                                { 
                                     <tr>
                                        <td class="b alRight">Email:
                                    </td>
                                            <td class="largeInput">
                                                @Html.TextBoxFor(x=>x.Data)
                                            </td>
                                      </tr>
                                    <input type="hidden" id="SubscriberTypeEnum" name="SubscriberTypeEnum" value="true" />
                                }
                                else
                                {
                                    <tr>
                                         <td class="b alRight">Phone:
                                            </td>
                                            <td class="largeInput">
                                                     @Html.TextBoxFor(x=>x.Data)
                                            </td>
                                     </tr>
                                    <input type="hidden" id="SubscriberTypeEnum" name="SubscriberTypeEnum" value="false" />
                                }
                     
                  <tr>
                        <td class="b alRight">OptedOut:
                        </td>
                        <td >
                      <label>      @Html.CheckBoxFor(models => models.OptedOut)
                          <span class="i">OptedOut</span></label>
                        </td>
                    </tr>
              @*      <tr>
                        <td class="b alRight">OptedOutDateTime:
                        </td>
                        <td >
                      <label>      @Html.CheckBoxFor(models => models.OptedOutDateTime)
                          <span class="i">OptedOutDateTime</span></label>
                        </td>
                    </tr> *@
                      <tr>
                         <td>
                        </td>
                        <td class="largeInput">
                           <input type="submit" class="primary" value="Submit" name="addNewSubscriber"/>
                        </td>
                    </tr> 
                     
                </table>
              
                
                @Html.HiddenFor(x => x.listId)
                @Html.HiddenFor(x => x.ListName)
               
              
                
            }
        </div>
    </div>     
</div>
 
<script type="text/javascript">
    // document.getElementById('SubscriberTypeEnum').value
    var singleValues = $("#SubscriberTypeEnum").val();
   // alert(singleValues)
    if (singleValues === "true") {
        $("#addNewSubscriber").validate({

            rules: {
                Name: {
                    required: true,
                },
                Data: {
                    required: true,

                    email: true
                }
            }
        });
    }
    else
    {

        $("#addNewSubscriber").validate({

            rules: {
                Name: {
                    required: true,
                },
                Data: {
                    required: true
                }
            }
        });

    }
</script>