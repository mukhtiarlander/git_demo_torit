@using RDN.Library.Classes.Dues;
@using RDN.Library.Cache;
@model RDN.Portable.Classes.Controls.Dues.DuesPortableModel
@{
    ViewBag.Title = "Dues for " + Model.LeagueOwnerName;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var memId = RDN.Library.Classes.Account.User.GetMemberId();
}

<ol class="breadcrumb">
    <li><a href="@RDN.Utilities.Config.ConfigManager.InternalSite">Home</a></li>
    <li ><a href="@Url.Content("~/dues/league/" + @Model.LeagueOwnerId.ToString().Replace("-", ""))">Dues</a></li>
    <li class="active">Yours</li>
</ol>

<div class="panel panel-default margin-top-20">
    <div class="panel-heading">
        
            <div class="row">
                <div class="col-xs-12 col-sm-6">
                    <h3 style="margin-top:5px !important"><i class="fa fa-money"></i> Dues Collections For @Model.LeagueOwnerName</h3>
                </div>
                <div class="col-xs-12 col-sm-6 text-right">
                    @if (MemberCache.IsTreasurerOrBetterOfLeague(memId))
                    { 
                        <a class="btn btn-primary btn-sm" title="Generate New Dues Item" onclick="return confirm('Generate New Dues Payment?')" href="@Url.Content("~/dues/new/" + @Model.OwnerEntity + "/" + @Model.LeagueOwnerId.ToString().Replace("-", "") + "/" + @Model.DuesId.ToString().Replace("-", ""))">
                            <i class="fa fa-plus-circle"></i> New
                        </a>
                    }
                </div>
            </div>


    </div>
    @if (MemberCache.IsTreasurerOrBetterOfLeague(memId))
    { 
        <div class="panel-heading text-right" style="background-color: #fafafa">
            <a class="btn btn-default btn-sm" title="Dues Settings" href="@Url.Content("~/dues/settings/" + @Model.OwnerEntity + "/" + @Model.LeagueOwnerId.ToString().Replace("-", "") + "/" + @Model.DuesId.ToString().Replace("-", ""))">
                <i class="fa fa-cog"></i> Settings
            </a>
            <a class="btn btn-default btn-sm" title="Dues Classifications" href="@Url.Content("~/dues/classification/" + @Model.OwnerEntity + "/" + @Model.LeagueOwnerId.ToString().Replace("-", "") + "/" + @Model.DuesId.ToString().Replace("-", ""))">
                <i class="fa fa-folder"></i> Classify
            </a>
            <button type="button" class="btn btn-default btn-sm" onclick="document.getElementById('DuesReport').submit();" title="Export Report">
                <i class="fa fa-download"></i> Export
            </button>
            <a class="btn btn-default btn-sm" title="Withstanding By Member" href="@Url.Content("~/dues/members/" + @Model.OwnerEntity + "/" + @Model.LeagueOwnerId.ToString().Replace("-", ""))">
                <i class="fa fa-group"></i> Members
            </a>
        </div>
    }
    <div class="panel-body" style="overflow-x:auto">
        <table class="table table-striped table-hover table-condensed no-margin-bottom" id="notPaid">
            <thead class="vmTableHead">
                <tr>

                    <th>
                        Due Date
                    </th>
                    <th class="text-center">Group</th>
                    <th class="text-right">
                        Cost
                    </th>
                    <th class="text-right">
                        Total Withstanding (@Model.DuesFees.Sum(x => x.TotalPaymentNeededFromMember).ToString("N2"))
                    </th>
                    <th class="text-right">
                        Total Paid +@Model.DuesFees.Sum(x => x.TotalPaidFromMember).ToString("N2")
                    </th>
                    <th class="text-center">Pay</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.DuesFees)
                {
                    <tr>
                        <td>
                            @item.PayBy.ToLongDateString()
                        </td>
                        <td class="text-center">
                            @item.MemberClassificationName
                        </td>
                        <td class="text-right">

                            @item.CostOfDues.ToString("N2")
                        </td>
                        <td class="text-right">
                            @item.TotalPaymentNeededFromMember.ToString("N2")
                        </td>
                        <td class="text-right">
                            @item.TotalPaidFromMember.ToString("N2")
                        </td>
                        <td class="text-center">
                            @if (Model.AcceptPaymentsOnline && !item.IsCurrentMemberPaidOrWaivedInFull && Model.CurrentMemberId == memId)
                            {
                                using (Html.BeginForm("PayDuesOnlinePayPal", "Dues", FormMethod.Post))
                                {
                                    <button class="btn btn-warning btn-xs" type="submit">Pay with Paypal</button>
                                    @Html.Hidden("DuesItemId", item.DuesItemId)
                                    @Html.HiddenFor(x => x.DuesId)
                                    @Html.HiddenFor(x => x.LeagueOwnerId)
                                }

                            }
                            else if (item.IsCurrentMemberPaidOrWaivedInFull)
                            {
                                <span>Paid</span>
                            }
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <th>
                        Due Date
                    </th>
                    <th class="text-center">Group</th>
                    <th class="text-right">
                        Cost
                    </th>
                    <th class="text-right">
                        (@Model.DuesFees.Sum(x => x.TotalPaymentNeededFromMember).ToString("N2"))
                    </th>
                    <th class="text-right">
                        +@Model.DuesFees.Sum(x => x.TotalPaidFromMember).ToString("N2")
                    </th>
                    <th class="text-center">Pay</th>
                </tr>
            </tfoot>
        </table>
        @using (Html.BeginForm("DuesPersonalReport", "Dues", FormMethod.Post, new { @id = "DuesReport" }))
        {
            @Html.HiddenFor(x => x.DuesId)
            @Html.HiddenFor(x => x.LeagueOwnerId)

        }
    </div>
    <div class="panel-footer">
        @if (!Model.AcceptPaymentsOnline)
        {
            <div class="alert alert-warning">
                <b>Collect Dues Online:</b> Your league can collect dues through RDNation just by enabling the feature within the dues management settings page.
            </div>
        }
        New dues collection dates automatically get generated prior to the date of the month
        defined in the settings. So there is no need to generate a new dues payment unless
        you have a payment not on the same schedule as defined in the settings.
    </div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        $('#notPaid').dataTable({
            "bPaginate": false,
            "bLengthChange": false,
            "bFilter": false,
            "bSort": true,
            "bInfo": false,
            "bAutoWidth": false,
            "aaSorting": [[0, "desc"]],
            "aoColumns": [null, null, { "sType": "natural" }, { "sType": "natural" }, { "sType": "natural" }, null],
        });
    });
</script>
