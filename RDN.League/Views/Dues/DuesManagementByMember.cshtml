@using RDN.Library.Classes.Dues;
@using RDN.Library.Cache;
@model RDN.Portable.Classes.Controls.Dues.DuesPortableModel
@{
    ViewBag.Title = "Dues Withstanding " + Model.LeagueOwnerName;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var memId = RDN.Library.Classes.Account.User.GetMemberId();
}
<ol class="breadcrumb">
    <li><a href="@RDN.Utilities.Config.ConfigManager.InternalSite">Home</a></li>
    <li><a href="@Url.Content("~/dues/league/" + @Model.LeagueOwnerId.ToString().Replace("-", ""))">Dues</a></li>
    <li class="active">Members</li>
</ol>


<div class="panel panel-default margin-top-20">
    <div class="panel-heading">
        <div class="row">
            <div class="col-xs-6">
                <h3 style="margin-top:5px !important"><i class="fa fa-money"></i> Total Withstanding by Member for @Model.LeagueOwnerName</h3>
            </div>
            @if (MemberCache.IsTreasurerOrBetterOfLeague(memId))
             {
                <div class="col-xs-6 text-right">
                    <a class="btn btn-sm btn-primary"  title="Generate New Dues Item" onclick="return confirm('Generate New Dues Payment?')" href="@Url.Content("~/dues/new/" + @Model.OwnerEntity + "/" + @Model.LeagueOwnerId.ToString().Replace("-", "") + "/" + @Model.DuesId.ToString().Replace("-", ""))">
                        <i class="fa fa-plus-circle"></i> New
                    </a>
                </div>
            }
        </div>
        <div class="text-muted">
            Group members of your league by how much they pay for dues.  Therefore, moving a member between groups, will ask them to pay different amounts for dues.
        </div>
    </div>
    @if (MemberCache.IsTreasurerOrBetterOfLeague(memId))
    {
        <div class="panel-heading text-right padding-top-5" style="background-color:#fafafa">
            <a class="btn btn-default btn-sm margin-top-5" title="Dues Settings" href="@Url.Content("~/dues/settings/" + @Model.OwnerEntity + "/" + @Model.LeagueOwnerId.ToString().Replace("-", "") + "/" + @Model.DuesId.ToString().Replace("-", ""))">
                <i class="fa fa-cog"></i> Settings
            </a>
            <a class="btn btn-default btn-sm margin-top-5" title="Dues Classifications" href="@Url.Content("~/dues/classification/" + @Model.OwnerEntity + "/" + @Model.LeagueOwnerId.ToString().Replace("-", "") + "/" + @Model.DuesId.ToString().Replace("-", ""))">
                <i class="fa fa-folder"></i> Classify
            </a>
            <button type="button" class="btn btn-default btn-sm margin-top-5" onclick="document.getElementById('DuesReport').submit();" title="Export Report">
                <i class="fa fa-download"></i> Export
            </button>
        </div>
    }
    <div class="panel-body scroll-x">
        <table class="table table-striped table-hover table-condensed no-margin-bottom" id="notPaid">

            <thead class="vmTableHead">
                <tr>
                    <th></th>
                    <th>Last</th>
                    <th>
                        Name
                    </th>
                    <th>Group</th>
                    <th class="text-right">
                        Paid +@Model.Members.Sum(x => x.collected).ToString("N2")
                    </th>
                    <th class="text-right">
                        Withstanding (@Model.Members.Sum(x => x.TotalWithstanding).ToString("N2"))
                    </th>
                    <th class="text-center">
                        Email Reminder
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Members)
                {
                    <tr>
                        <td></td>
                        <td>@item.LastName</td>
                        <td>
                            <a target="_blank" href="@Url.Content("~/dues/member/" + @Model.LeagueOwnerId.ToString().Replace("-", "") + "/" + item.MemberId.ToString().Replace("-", ""))">@item.DerbyName</a>
                        </td>
                        <td>@item.ClassificationName</td>

                        <td class="text-right">
                            @item.collected.ToString("N2")
                        </td>
                        <td class="text-right">
                            @item.TotalWithstanding.ToString("N2")
                        </td>
                        <td class="text-center">
                            @if (item.UserId != new Guid())
                            {
                                <button class="btn btn-xs btn-info" id="@item.MemberId-button-email" type="button" class="primary"
                                        onclick="javascript:SendReminderToPayDuesWithstanding(this,'@item.MemberId    ')"><i class="fa fa-bell"></i> Send Reminder</button>
                            }
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot class="vmTableHead">
                <tr>
                    <th></th>
                    <th>Last</th>
                    <th>
                        Name
                    </th>
                    <th>Group</th>
                    <th class="text-right">
                        Paid +@Model.Members.Sum(x => x.collected).ToString("N2")
                    </th>
                    <th class="text-right">
                        Withstanding (@Model.Members.Sum(x => x.TotalWithstanding).ToString("N2"))
                    </th>
                    <th class="text-center">
                        Email Reminder
                    </th>
                </tr>
            </tfoot>
        </table>
        @Html.HiddenFor(x => x.DuesId)
        @Html.HiddenFor(x => x.LeagueOwnerId)
        @using (Html.BeginForm("DuesManagementReport", "Dues", FormMethod.Post, new { @id = "DuesReport" }))
        {
            @Html.HiddenFor(x => x.DuesId)
            @Html.HiddenFor(x => x.LeagueOwnerId)
        }
    </div>
    <div class="panel-footer">
        @if (!Model.AcceptPaymentsOnline)
        {
            <div class="alert alert-warning">
                <b>Collect Dues Online:</b> Your league can collect dues through RDNation just by enabling the feature within the dues management settings page.
            </div>
            }
            New dues collection dates automatically get generated prior to the date of the month
                        defined in the settings. So there is no need to generate a new dues payment unless
                        you have a payment not on the same schedule as defined in the settings.
        
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $('#notPaid').dataTable({
            "bPaginate": false,
            "bLengthChange": false,
            "bFilter": true,
            "bSort": true,
            "bInfo": false,
            "bAutoWidth": false,
            "aaSorting": [[2, "asc"]],
            "oLanguage": { "sSearch": "" },
            "aoColumns": [null, null, null, null, { "sType": "natural" }, { "sType": "natural" }, null],
        });
        $('#notPaid_filter input').addClass('form-control').attr("placeholder", "Search");
    });
</script>
