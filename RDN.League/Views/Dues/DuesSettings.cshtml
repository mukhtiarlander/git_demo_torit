@using RDN.League.Models.Dues
@using RDN.League.Models.Utilities
@model DuesModel
@{
    ViewBag.Title = "Modify Dues Collection Settings";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<ol class="breadcrumb">
    <li><a href="@RDN.Utilities.Config.ConfigManager.InternalSite">Home</a></li>
    <li><a href="@Url.Content("~/dues/league/" + @Model.LeagueOwnerId.ToString().Replace("-", ""))">Dues</a></li>
    <li class="active">Settings</li>
</ol>
<div class="row">
    <div class="col-xs-12 col-sm-10 col-sm-offset-1 col-lg-8 col-lg-offset-2">
        <div class="panel panel-default margin-top-20">
            <div class="panel-heading">
                <h3 style="margin-top:5px !important"><i class="fa fa-cogs"></i> Modify Dues Settings</h3>
                <span class="text-muted">Here you can modify the dues management settings for your league.</span>
            </div>
            @using (Html.BeginForm("DuesSettings", "Dues", FormMethod.Post))
            {
            <div class="panel-body" style="overflow-x:auto">
                <div class="row">
                 
                        <div class="col-xs-12 col-sm-4">
                            <label class="form-label margin-top-10">Day Of Month To Collect</label>
                            <div>
                                @Html.TextBoxFor(x => x.DayOfMonthToCollectDefault, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-4">
                            <label class="form-label margin-top-10">Days Before to Notify Member</label>
                            <div>
                                @Html.TextBoxFor(x => x.DaysBeforeDeadlineToNotifyDefault, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-4">
                            <label class="form-label margin-top-10">Amount of Money To Collect</label>
                            <div>
                                @Html.TextBoxFor(x => x.DuesCostDisplay, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-md-6 margin-top-25">
                            <div class="panel panel-default no-margin-bottom">
                                <div class="panel-heading" style="background-color: #fff !important">
                                    <label class="form-label margin-top-5">Dues Management for Managers Only</label>
                                    <div>
                                        <label>@Html.CheckBoxFor(x => x.LockDownManagementToManagersOnly)  Users only shown their payments and withstanding. Not leagues.</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-12 col-md-6 margin-top-25">
                            <div class="panel panel-default no-margin-bottom">
                                <div class="panel-heading" style="background-color:#fff !important">
                                    <label class="form-label margin-top-5">Accept Paypal Dues Payments</label>
                                    <div>
                                        <label>@Html.CheckBoxFor(x => x.AcceptPaymentsOnline) Members can pay with their Paypal account</label>
                                        <br />&nbsp;
                                    </div>  
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-12 col-md-6 margin-top-20">
                            <label class="form-label">Currency for Dues</label>
                            <div>
                                @Html.DropDownListFor(x => x.Currency, Model.CurrencyList, new { @class = "full-width" })
                                <div class="text-muted margin-top-5 i">
                                    To add your currency, email us at <a href="mailto:@RDN.Portable.Config.ServerConfig.DEFAULT_INFO_EMAIL">info@rdnation.com</a>
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-12 col-md-6  margin-top-20">
                            <label class="form-label">Leagues Paypal Email Address</label>
                            <div>
                                @Html.TextBoxFor(x => x.PayPalEmailAddress, new { @class = "form-control" })
                                <div class="text-muted margin-top-5 i">Email Address of the league to collect dues, this needs to be a <b><a href="@RDN.Portable.Config.ServerConfig.WIKI_URL_FOR_CONFIRMED_PAYPAL_ACCOUNT" target="_blank">VERIFIED</a></b> paypal account.</div>
                            </div>
                        </div>
                        <div class="col-xs-12">
                            <label class="form-label margin-top-10">Text For Email Notification</label>
                            <div>
                                @Html.TextAreaFor(x => x.DuesEmailDisplayText, new { id = "wmd-input", width = "100%" })
                            </div>
                        </div>
                        @Html.HiddenFor(x => x.DuesId)
                        @Html.HiddenFor(x => x.LeagueOwnerId)
                        @Html.HiddenFor(x => x.OwnerEntity)
                   
                </div>

                </div>
            <div class="panel-footer">
                @if (ViewBag.IsSuccessful)
                {
                    <span class="addedSuccessfully">Updated Successfully!</span>
                }
                <button class="btn btn-success btn-sm" type="submit" ><i class="fa fa-save"></i> Update Settings</button>
            </div>
            }
        </div>
    </div>
</div>

<script type="text/javascript">
    $("#DuesCostDisplay").numeric({ negative: false });
    $("#DayOfMonthToCollectDefault").numeric({ negative: false, decimal: false });
    $("#DaysBeforeDeadlineToNotifyDefault").numeric({ negative: false, decimal: false });

    $(function () {
        tinymce.init({
            mode: "textareas",
            elements: "elm2",
            theme: "advanced",
            skin: "o2k7",
            skin_variant: "silver",
            plugins: "safari,style,layer,table,advhr,advimage,advlink,inlinepopups,preview,media,contextmenu,directionality,fullscreen,noneditable,visualchars,nonbreaking,xhtmlxtras,template",

            // Theme options
            theme_advanced_buttons1: "bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,|,bullist,numlist,|,outdent,indent,blockquote,|,formatselect,fontsizeselect",
            theme_advanced_buttons2: "link,unlink,anchor,image,cleanup,code,|,preview,|,forecolor,backcolor,|tablecontrols,|,hr,removeformat,visualaid,|,iespell,media,|,ltr,rtl",
            theme_advanced_buttons3: "",
            theme_advanced_buttons4: "",
            theme_advanced_toolbar_location: "top",
            theme_advanced_toolbar_align: "left",
            theme_advanced_statusbar_location: "bottom",
            theme_advanced_resizing: true,
        });
    });
</script>

