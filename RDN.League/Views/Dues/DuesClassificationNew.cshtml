@using RDN.Library.Classes.Controls.Dues
@using RDN.League.Models.Utilities
@model RDN.Portable.Classes.Controls.Dues.Classify.FeeClassified
@{
    ViewBag.Title = "Modify Dues Collection Settings";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<ol class="breadcrumb">
    <li><a href="@RDN.Utilities.Config.ConfigManager.InternalSite">Home</a></li>
    <li><a href="@Url.Content("~/dues/league/" + @Model.LeagueOwnerId.ToString().Replace("-", ""))">Dues</a></li>
    <li class="active">Dues Item</li>
</ol>

<div class="row">
    <div class="col-xs-12 col-sm-10 col-sm-offset-1 col-lg-8 col-lg-offset-2">

        <div class="panel panel-default margin-top-20">
            <div class="panel-heading">
                <div class="row">
                    <div class="col-xs-12 col-sm-6">
                        <h3 style="margin-top:5px !important"><i class="fa fa-pencil-square-o"></i> Add New Classification</h3>
                    </div>
                    <div class="col-xs-12 col-sm-6 text-right">
                        <a class="btn btn-default" title="Dues Management" href="@Url.Content("~/dues/league/" + @Model.LeagueOwnerId.ToString().Replace("-", ""))">
                            <i class="fa fa-money"></i> Dues
                        </a>
                        <a class="btn btn-default" title="Dues Management" href="@Url.Content("~/dues/classification/league/" + @Model.LeagueOwnerId.ToString().Replace("-", "") + "/" + @Model.DuesId.ToString().Replace("-", ""))">
                            <i class="fa fa-folder"></i> Classify
                        </a>
                    </div>
                </div>
                <div class="text-muted">
                    Here you can add a new classification for the @RDN.Library.Classes.Config.LibraryConfig.NameOfMembers who you want to put into a group that pay dues at a group price rather than the leagues default price.
                </div>
            </div>
            @using (Html.BeginForm("DuesClassificationNew", "Dues", FormMethod.Post, new { @id = "form", @name = "form" }))
            {
                <div class="panel-body">
                    <div class="row">
                        <div class="col-xs-12 col-sm-6 margin-bottom-10 margin-top-10">
                            <label class="form-label">
                                Name of the dues group
                            </label>
                            <div>
                                @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6 margin-bottom-10 margin-top-10">

                            <label class="form-label">
                                Amount required for each dues collection
                            </label>
                            <div>
                                @Html.TextBoxFor(x => x.FeeRequiredInput, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6 margin-bottom-10 margin-top-10">
                            <label class="form-label">
                                Does Not Pay Dues
                            </label>
                            <div>
                                @Html.CheckBoxFor(x => x.DoesNotPayDues, new { @onchange = "classificationDoesNotPayDues(this)" }) <span class="b">Set if group does NOT pay dues.</span>
                            </div>
                        </div>
                      

                    </div>
                </div>
                <div class="panel-footer">
                    <button type="submit" class="btn btn-success"><i class="fa fa-save"></i> Create New Class</button>
                </div>
                @Html.HiddenFor(x => x.DuesId)
                @Html.HiddenFor(x => x.LeagueOwnerId)
                @Html.HiddenFor(x => x.OwnerEntity)
            }
        </div>
    </div>
</div>

<script type="text/javascript">
    $("#FeeRequiredInput").numeric({ negative: false });
    $("#form").validate({
        rules: {
            Name: "required",
            FeeRequiredInput: "required"
        }
    });
</script>
    

