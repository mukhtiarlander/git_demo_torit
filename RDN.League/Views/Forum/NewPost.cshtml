@using RDN.League.Models.Forum
@using RDN.League.Models.Utilities
@model NewPost
@{
    ViewBag.Title = "Create New Post";
    Layout = "~/Views/Shared/_Layout.cshtml";
    Guid memId = RDN.Library.Classes.Account.User.GetMemberId();
    bool subPaid = RDN.Library.Cache.MemberCache.CheckIsLeagueSubscriptionPaid(memId);
}

<ol class="breadcrumb">
    <li><a href="@RDN.Library.Classes.Config.LibraryConfig.InternalSite">Home</a></li>
    <li><a href="@Url.Content("~/forum/posts/" + Model.ForumType + "/" + Model.ForumId.ToString().Replace("-", ""))">Forum</a></li>
    <li class="active">New Forum Post</li>
</ol>

<div class="row">
    <div class="col-xs-12 col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="margin-top-10"><i class="fa fa-file-o"></i> @Model.GroupName, Post New Message</h3>
            </div>

            @using (Html.BeginForm("NewPost", "Forum", FormMethod.Post, new { @id = "NewPost", onsubmit="Forum.GetMentionedMembers()" }))
            {
                <div class="panel-body">
                    <div class="form-label">
                        Subject For @Model.GroupName
                    </div>
                    <div class="margin-top-5">
                        @Html.TextBoxFor(x => x.Subject, new { tabindex = "1", @class = "form-control" })
                    </div>
                    <div class="form-label  margin-top-10">
                        Category
                    </div>
                    <div class=" margin-top-5">
                        @Html.DropDownListFor(x => x.ChosenCategory, Model.ForumCategories, "None", new { tabindex = "2", @class = "full-width" })
                    </div>
                    <div class="form-label margin-top-10">
                        @Html.LabelFor(x => x.Message)
                    </div>
                    <div class=" margin-top-5">
                        @Html.TextArea("Message", string.Empty, new
                        {
                            id = "wmd-input",
                            style = "width:100%"
                        })
                        @Html.HiddenFor(x => x.Mentions, new { @id = "mentioned_members_ids"})
                    </div>
                    <div class="form-label margin-top-10">
                        @if (Model.ForumType != RDN.Portable.Classes.Forum.Enums.ForumOwnerTypeEnum.main)
                        {
                            <label>@Html.CheckBoxFor(x => x.BroadcastMessage, new { tabindex = "3" }) <span class="b">Broadcast this message</span> <span>Entire group will be sent copy via email.</span></label>
                        }
                    </div>
                    @if (Model.IsManagerOrBetter)
                    {
                        <div class="form-label margin-top-10">
                            <label>@Html.CheckBoxFor(x => x.PinMessage, new { tabindex = "4" }) <span class="b">Pin this message.</span> <span>This message will stay at the top of the forum.</span></label>
                        </div>
                        <div class="form-label margin-top-10">
                            <label>@Html.CheckBoxFor(x => x.LockMessage, new { tabindex = "5" }) <span class="b">Lock this message.</span> <span>This message will not allow replies.</span></label>
                        </div>
                    }
                </div>
                @Html.HiddenFor(x => x.ForumId)
                @Html.HiddenFor(x => x.ForumType)
                <div class="panel-footer text-right">
                    <button class="btn btn-success btn-sm" type="submit" value="" tabindex="6"><i class="fa fa-save"></i> Post Message</button>
                    <a class="btn btn-default btn-sm" href="@Url.Content("~/forum/posts/" + Model.ForumType + "/" + Model.ForumId.ToString().Replace("-", ""))">Cancel</a>
                </div>
            }
        </div>
    </div>

    <div id="form_target" name="form_target" style="display:none"></div>

    <form id="img_form" action="/forum/postimageupload" method="post" enctype="multipart/form-data" style="width:0px;height:0;overflow:hidden">
        <input id="img_file" name="File" type="file">
        @Html.HiddenFor(x => x.ForumId, new { data_val = "false" })
        @Html.HiddenFor(x => x.ForumType, new { data_val = "false" })
        <input id="img_submit" type="submit" />
    </form> 
</div>

<script type="text/javascript">
    $("#NewPost").validate({
        rules: {
            Subject: "required"
        }
    });
    $(document).ready(function () {
        $("#Subject").focus();
        Forum.SetupPost("Forum", '@Model.ForumId', '@Model.ForumType', '@Model.TopicId', '@Model.GroupId');

    });

    $('#img_file').change(function (e) {
        var files = e.target.files;
        if (files.length > 0) {
            if (window.FormData !== undefined) {
                var data = new FormData($('#img_form')[0]);
                for (var x = 0; x < files.length; x++) {
                    data.append("file" + x, files[x]);
                }

                $.ajax({
                    type: "POST",
                    url: '/forum/postimageupload',
                    contentType: false,
                    processData: false,
                    data: data,
                    success: function (result) {
                        if (result.success) {
                            $('#form_target').html(decodeURIComponent(result.data));
                        }
                        else {
                            //close the modal window
                            var ed = parent.tinymce.editors[0];
                            ed.windowManager.windows[0].close();
                            //show error message
                            $('.bottom-right').notify({
                                message: { text: result.message },
                                fadeOut: { enabled: true, delay: 4000 },
                                type: "danger"
                            }).show();
                        }
                    },
                    error: function (xhr, status, p3, p4) {
                        var err = "Error " + " " + status + " " + p3 + " " + p4;
                        if (xhr.responseText && xhr.responseText[0] == "{")
                            err = JSON.parse(xhr.responseText).Message;
                        console.log(err);
                    }
                });
            } else {
                alert("This browser doesn't support HTML5 file uploads!");
            }
        }
    });
</script>