@using RDN.Library.Classes.Calendar
@using RDN.League.Models.Utilities
@using RDN.Library.Cache
@model RDN.Portable.Classes.Controls.Calendar.Calendar
@{
    ViewBag.Title = "Modify Calendar Settings";
    Layout = "~/Views/Shared/_Layout.cshtml";
    Guid memId = RDN.Library.Classes.Account.User.GetMemberId();
}
<div class="fixedContainer">
    <div class="fixedlinksContainter">
        <div class="backLink">
            @if (MemberCache.GetCalendarDefaultView(memId) == RDN.Portable.Classes.Account.Enums.Settings.CalendarDefaultViewEnum.List_View)
            {
                <span>< <a href="@Url.Content("~/calendar/" + Model.OwnerEntity + "/" + Model.CalendarId.ToString().Replace("-", ""))">Calendar</a></span>
            }
            else
            { 
                <span>< <a href="@Url.Content("~/calendar/view/" + Model.OwnerEntity + "/" + Model.CalendarId.ToString().Replace("-", ""))">Calendar</a></span>
            }
        </div>
    </div>
    <div class="fixedCenterContainter">
        <div class="fixTitle">
            Modify Calendar Settings
        </div>

        <div class="titleDescription">
            Here you can modify the calendar settings for your organization.
     
        </div>
        <div class="divider"></div>

        <div>
            @using (Html.BeginForm("CalendarSettings", "Calendar", FormMethod.Post))
            { 
                <table class="addForumPostTbl">
                    <tr>
                        <td class="b vLTD">TimeZone of Calendar:</td>
                        <td>@Html.DropDownListFor(x => x.TimeZoneId, new SelectList(Model.TimeZones, "ZoneId", "LocationGMT"), "Select TimeZone...")</td>
                    </tr>
                    <tr>
                        <td class="b vLTD">Allow Self Check Ins:
                        </td>
                        <td>
                           <label> @Html.CheckBoxFor(x => x.AllowSelfCheckIn) <span class="i">Allows user to check their
                                self into the event.</span></label>
                        </td>
                    </tr>
                    <tr>
                        <td class="b vLTD">Not Present Required For Check In:
                        </td>
                        <td>
                            @Html.CheckBoxFor(x => x.NotPresentCheckIn) <span class="i">If Enabled, you will NOT need to count the skater as "Not Present" to effect their attendance percentage. <a href="http://wiki.rdnation.com/Calendar_and_Attendance_Tracking#Calendar_Point_Types_Explained" target="_blank">Read more here.</a></span>
                        </td>
                    </tr>
                    <tr>
                        <td class="b vLTD">Disable Birthdays:
                        </td>
                        <td>
                          <label>  @Html.CheckBoxFor(x => x.DisableBirthdays) <span class="i">Removes Birthdays from Calendar</span></label>
                        </td>
                    </tr>
                    <tr>
                        <td class="b vLTD">Disable Skater Start Dates:
                        </td>
                        <td>
                           <label> @Html.CheckBoxFor(x => x.DisableSkatingStartDates) <span class="i">Removes Skater Start Dates From Calendar</span></label>
                        </td>
                    </tr>
                    <tr>
                        <td class="b vLTD">Locations:
                        </td>
                        <td>
                            <a href="@Url.Content("~/location/all")" >Edit Locations</a>
                        </td>
                    </tr>
                    <tr>
                        <td class="b vLTD">Event Types:
                        </td>
                        <td>
                            <a href="@Url.Content("~/calendar/event-type/new/" + Model.OwnerEntity.ToString() + "/" + Model.CalendarId.ToString().Replace("-", ""))" >Add New Event Type</a> <span class="i">Used for describing what type of event it is,
                                    as well as point structures for that event.</span>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="2">
                            <table class="eventTypeTable">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th class="tht" colspan="5">Points
                                        </th>
                                    </tr>
                                    <tr>
                                        <th class="tht">Name Of Event
                                        </th>
                                        <th class="tht">Color
                                        </th>
                                        <th class="tht">Present
                                        </th>
                                        <th class="tht">Partial
                                        </th>
                                        <th class="tht">Not Present
                                        </th>
                                        <th class="tht">Excused
                                        </th>
                                        <th class="tht">Tardy
                                        </th>
                                        <th class="tht"></th>
                                    </tr>
                                </thead>
                                @foreach (var type in Model.EventTypes)
                                { 
                                    <tr>
                                        <td>@type.EventTypeName
                                        </td>
                                        <td>
                                            @if (!String.IsNullOrEmpty(type.ColorTempSelected)) { 
                                                <div class='selectedColor' style='background-color:@type.ColorTempSelected;'>@type.ColorName</div>
                                            }
                                        </td>
                                        <td>@type.PointsForPresent
                                        </td>
                                        <td>@type.PointsForPartial
                                        </td>
                                        <td>@type.PointsForNotPresent
                                        </td>
                                        <td>@type.PointsForExcused
                                        </td>
                                        <td>@type.PointsForTardy
                                        </td>
                                        <td>
                                            <a href="@Url.Content("~/calendar/event-type/edit/" + Model.OwnerEntity + "/" + Model.CalendarId.ToString().Replace("-", "") + "/" + type.CalendarEventTypeId)" >Edit</a>
                                        </td>
                                    </tr>
                                }
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>
                            @if (ViewBag.IsSuccessful)
                            { 
                                <span class="addedSuccessfully">Updated Successfully!</span>
                            }
                            <input type="submit" class="primary" value="Update Settings" />
                        </td>
                    </tr>
                </table>
                @Html.HiddenFor(x => x.CalendarId)
                @Html.HiddenFor(x => x.EntityName)
                @Html.HiddenFor(x => x.OwnerEntity)
            }
        </div>
    </div>
</div>
