@using RDN.Library.Classes.Calendar;
@using RDN.Library.Classes.Calendar.Enums;
@using RDN.Portable.Classes.Controls.Calendar.Enums;
@using RDN.Portable.Classes.Controls.Calendar;
@using RDN.Library.Cache;
@model Calendar
@{
    ViewBag.Title = "Calendar for " + Model.EntityName;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var CalendarPointType = from CalendarEventPointTypeEnum d in Enum.GetValues(typeof(CalendarEventPointTypeEnum))
                            where d.ToString() != "None" && d.ToString() != "Tardy"
                            select new { ID = (int)d, Name = RDN.Utilities.Enums.EnumExt.ToFreindlyName(d) };
    var AvailableType = from AvailibilityEnum d in Enum.GetValues(typeof(AvailibilityEnum))
                        where d.ToString() != "None"
                        select new { ID = (int)d, Name = RDN.Utilities.Enums.EnumExt.ToFreindlyName(d), Data = d.ToString() };
    var memId = RDN.Library.Classes.Account.User.GetMemberId();
    var isSec = MemberCache.IsSecretaryOrBetterOfLeague(memId);
    bool isEventsCourd = MemberCache.IsEventsCourdinatorOrBetterOfLeague(memId);
    var isAttendance = MemberCache.IsAttendanceManager(memId);
}

<ol class="breadcrumb">
    <li><a href="@RDN.Utilities.Config.ConfigManager.InternalSite">Home</a></li>
    <li class="active">Calendar List</li>
</ol>

@if (Model.CalendarId == new Guid())
{
    <div class="alert alert-warning margin-top-20">
        <h3 class="margin-top-5">Calendar Setup</h3>
        <div class="margin-bottom-10">
            It looks like your calendar has not yet been created. Go ahead and create one so
            you can start scheduling events and tracking attendance! This calendar will be open
            to all your members!
        </div>
        @using (Html.BeginForm("CreateCalendar", "Calendar"))
        {
            <button type="submit" class="btn btn-warning btn-sm"><i class="fa fa-calendar"></i> Create Calendar</button>
            @Html.HiddenFor(x => x.OwnerEntity);
        }
    </div>
}
else
{

    <div class="panel panel-default margin-top-20">
        <div class="panel-heading">
            <div class="row">
                <div class="col-xs-12 col-sm-4 col-md-5">
                    <h3 class="margin-top-5 margin-left-5"><i class="fa fa-calendar"></i> Schedule</h3>
                </div>
                <div class="col-xs-12 col-sm-8 col-md-7 text-right">
                    @if (isSec || isAttendance || isEventsCourd)
                    {
                        <a class="btn btn-default btn-sm margin-top-5" title="New Event" href="@Url.Content("~/calendar/new/" + @Model.OwnerEntity + "/" + @Model.CalendarId.ToString().Replace("-", ""))">
                            <i class="fa fa-plus"></i> New
                        </a>
                    }
                    <a class="btn btn-default btn-sm margin-top-5" title="Large Calendar" href="@Url.Content("~/calendar/view/" + @Model.OwnerEntity + "/" + @Model.CalendarId.ToString().Replace("-", ""))">
                        <i class="fa fa-calendar"></i> Large
                    </a>
                    @if (isSec || isAttendance || isEventsCourd)
                    {

                        <a class="btn btn-default btn-sm margin-top-5" title="Import Calendar" href="@Url.Content("~/calendar/import/" + @Model.OwnerEntity + "/" + @Model.CalendarId.ToString().Replace("-", ""))">
                            <span class="glyphicon glyphicon-import" aria-hidden="true"></span>  Import
                        </a>
                        <a class="btn btn-default btn-sm margin-top-5" title="Calendar Settings" href="@Url.Content("~/calendar/settings/" + @Model.OwnerEntity + "/" + @Model.CalendarId.ToString().Replace("-", ""))">
                            <i class="fa fa-cogs"></i> Settings
                        </a>

                    }
                    <a class="btn btn-default btn-sm margin-top-5" title="Run Report" href="@Url.Content("~/calendar/reports/" + @Model.OwnerEntity + "/" + @Model.CalendarId.ToString().Replace("-", ""))">
                        <span class="glyphicon glyphicon-list-alt" aria-hidden="true"></span> Report
                    </a>
                </div>
            </div>
        </div>
        <div class="panel-body">
            <div class="row margin-bottom-20">
                <ul class="nav nav-tabs padding-top-5" id="myTab">
                    @for (int i = -3; i < 4; i++)
                    {
                        <li class="calPagerLi @(i == 0 ? "active b" : "") margin-left-5">
                            <a role="presentation" href="@Url.Content("~/calendar/" + Model.OwnerEntity + "/" + @Model.CalendarId.ToString().Replace("-", "") + "/" + @Model.CurrentDateSelected.AddMonths(i).Year + "/" + @Model.CurrentDateSelected.AddMonths(i).Month)">
                            @Model.CurrentDateSelected.AddMonths(i).Month/@Model.CurrentDateSelected.AddMonths(i).Year.ToString().Remove(0, 2)
                            </a>
                        </li>
                    }
                </ul>
            </div>
            <div class="scroll-x">
                <table class="table table-hover table-striped">
                    <thead>
                        <tr>
                             <th class="smallCaps text-center">RSVP</th>
                            <th class="text-center">Check In</th>
                            <th>
                                Event
                            </th>
                            <th>
                                Date
                            </th>
                            <th>
                                Time
                            </th>
                            <th>
                                Location
                            </th>

                            @if (isSec || isAttendance)
                        {
                                <th class="text-center">
                                    Check In
                                </th>
                        }
                        else
                        {
                                <th></th>}
                        </tr>
                    </thead>
                    @foreach (var calEvent in Model.Events.OrderByDescending(x => x.StartDate))
                {

                    var avail = calEvent.Attendees.Where(x => x.MemberId == memId && x.Availability != AvailibilityEnum.None).FirstOrDefault();
                    var attend = calEvent.Attendees.Where(x => x.MemberId == memId && x.IsCheckedIn == true).FirstOrDefault();
                    var isApartOfEvent = calEvent.MembersApartOfEvent.Where(x => x.MemberId == memId).FirstOrDefault();
                        <tr id="@calEvent.CalendarItemId-mainrow" class="forumTopicRow @(calEvent.StartDate.ToString("yyyy/MM/dd") == DateTime.Now.ToString("yyyy/MM/dd") ? "calCurrentDateEvent" : "")">
                            <td class="text-center">
                                <div class='selectedColorList' style='background-color:@calEvent.ColorTempSelected;'></div>


                                @if (calEvent.EventType.EventType != CalendarEventTypeEnum.Birthday && calEvent.EventType.EventType != CalendarEventTypeEnum.StartedDate)
                                {
                                    if (avail == null)
                                    {
                                        <button class="btn btn-sm btn-default" id="@calEvent.CalendarItemId-setAvail" onclick="javascript:setAvailForEvent('@Model.CalendarId','@calEvent.CalendarItemId')"
                                                data-container="body" data-toggle="popover" data-html="true">
                                            <i class="fa fa-calendar fa-lg"></i>
                                        </button>
                                    }
                                    else if (avail != null)
                                    {
                                        if (avail.Availability == AvailibilityEnum.Going)
                                        {
                                            <button class="btn btn-sm btn-success" id="@calEvent.CalendarItemId-setAvail" onclick="javascript:setAvailForEvent('@Model.CalendarId','@calEvent.CalendarItemId')"
                                                    data-container="body" data-toggle="popover" data-html="true">
                                                <i class="fa fa-car fa-lg"></i>
                                            </button>
                                        }
                                        else if (avail.Availability == AvailibilityEnum.Maybe_Going)
                                        {
                                            <button class="btn btn-sm btn-warning" id="@calEvent.CalendarItemId-setAvail" onclick="javascript:setAvailForEvent('@Model.CalendarId','@calEvent.CalendarItemId')"
                                                    data-container="body" data-toggle="popover" data-html="true">
                                                <i class="fa fa-car fa-lg"></i>
                                            </button>
                                        }
                                        else
                                        {
                                            <button class="btn btn-danger btn-sm padding-3 padding-left-10 padding-right-10" id="@calEvent.CalendarItemId-setAvail" onclick="javascript:setAvailForEvent('@Model.CalendarId','@calEvent.CalendarItemId')"
                                                    data-container="body" data-toggle="popover" data-html="true">
                                                <i class="fa fa-home font18"></i>
                                            </button>
                                        }
                                    }

                                }
                            </td>
                        <td class="text-center vertical-middle">
                        @if (attend != null)
                        {
                            <button class="btn btn-default btn-sm" id="@calEvent.CalendarItemId" onclick="javascript:checkIntoEvent('checkInPopUp','@Model.CalendarId','@calEvent.CalendarItemId', '@calEvent.Name')" class="btn btn-default btn-sm"
                                    data-container="body" data-toggle="popover" data-html="true">
                                <i class="fa fa-check-square fa-lg"></i>
                            </button>
                        }
                        else if (calEvent.AllowSelfCheckIn && calEvent.IsCurrentMemberApartOfEvent || (calEvent.AllowSelfCheckIn && isApartOfEvent != null))
                        {
                            <button class="btn btn-default btn-sm" id="@calEvent.CalendarItemId" onclick="javascript:checkIntoEvent('checkInPopUp','@Model.CalendarId','@calEvent.CalendarItemId', '@calEvent.Name')"
                                    data-container="body" data-toggle="popover" data-html="true">
                                <i class="fa fa-square-o fa-lg"></i>
                            </button>
                        }
                        else if (calEvent.EventType.EventType == CalendarEventTypeEnum.Birthday)
                        {
                            <i class="fa fa-birthday-cake fa-lg"></i>
                        }
                        else if (calEvent.EventType.EventType == CalendarEventTypeEnum.StartedDate)
                        {
                            <img src="@Url.Content("~/Content/images/icons/games.png")" height="25px" />
                        }

                            </td>
                            <td class="vertical-middle @(calEvent.StartDate.ToString("yyyy/MM/dd") == DateTime.Now.ToString("yyyy/MM/dd") ? "b" : "")">
                                @if (calEvent.EventType.EventType == CalendarEventTypeEnum.Event)
                            {
                                    <a href="@Url.Content("~/calendar/event/" + Model.OwnerEntity.ToString().Replace("-", "") + "/" + Model.CalendarId.ToString().Replace("-", "") + "/" + calEvent.CalendarItemId.ToString().Replace("-", ""))">@calEvent.Name</a>
                            }
                            else if (calEvent.EventType.EventType == CalendarEventTypeEnum.Birthday)
                            {
                                <a href="@Url.Content("~/calendar/birthday/" + calEvent.CalendarItemId.ToString().Replace("-", "") + "/" + RDN.Utilities.Strings.StringExt.ToSearchEngineFriendly(calEvent.Name))">@calEvent.Name</a>
                            }
                            else if (calEvent.EventType.EventType == CalendarEventTypeEnum.StartedDate)
                            {
                                <a href="@Url.Content("~/calendar/started-playing/" + calEvent.CalendarItemId.ToString().Replace("-", "") + "/" + RDN.Utilities.Strings.StringExt.ToSearchEngineFriendly(calEvent.Name))">@calEvent.Name</a>
                            }
                            </td>
                            <td class="vertical-middle">
                                @calEvent.StartDate.ToString("ddd"), @calEvent.StartDate.ToShortDateString()
                            </td>
                            <td class="vertical-middle">
                                @if (calEvent.EventType.EventType == CalendarEventTypeEnum.Event)
                        {
                                    <span>@calEvent.StartDate.ToShortTimeString() - @calEvent.EndDate.ToShortTimeString()</span>
                        }
                            </td>

                            <td class="vertical-middle">
                                @if (calEvent.EventType.EventType == CalendarEventTypeEnum.Event)
                        {
                            if (calEvent.Location != null)
                            {
                                @calEvent.Location.LocationName
                            }
                        }
                            </td>



                            <td class="text-center ">
                                @if (calEvent.EventType.EventType == CalendarEventTypeEnum.Event && (isSec || isAttendance))
                            {

                                    <div class="btn-group">
                                        <button type="button" class="btn btn-default dropdown-toggle btn-sm" data-toggle="dropdown" aria-expanded="false">
                                            <i class="fa fa-check-square-o"></i> Check In <span class="caret"></span>
                                        </button>
                                        <ul class="dropdown-menu" role="menu">
                                            <li class="no-margin-left"><a href="@Url.Content("~/calendar/event/checkin-l/" + Model.OwnerEntity.ToString().Replace("-", "") + "/" + Model.CalendarId.ToString().Replace("-", "") + "/" + calEvent.CalendarItemId.ToString().Replace("-", ""))">Large Screen</a></li>
                                            <li class="no-margin-left"><a href="@Url.Content("~/calendar/event/checkin-s/" + Model.OwnerEntity.ToString().Replace("-", "") + "/" + Model.CalendarId.ToString().Replace("-", "") + "/" + calEvent.CalendarItemId.ToString().Replace("-", ""))">Small Screen</a></li>
                                        </ul>
                                    </div>
                            }
                            </td>
                        </tr>
                }
                </table>
            </div>
        </div>
    </div>
    <div id="checkInPopUp" style="display: none;" class="well">
        <div class="row">
            <div class="col-xs-12">
                <label class="form-label">Check In</label>
                <div class="margin-bottom-5">
                    @Html.DropDownList("checkInSelection", new SelectList(CalendarPointType, "ID", "Name"), "Check In...", new { @class = "form-control" })
                </div>
                <div class="margin-bottom-10">
                    <label> @Html.CheckBox("IsTardy")<span class="b">Tardy?</span></label>
                </div>
            </div>
            <div class="col-xs-12">
                <label class="form-label">Notes</label>
                <div class="margin-bottom-20">
                    <input type="text" id="notes" class="form-control" />
                </div>
            </div>
            <div class="col-xs-12 margin-bottom-5">
                <button type="button" id="checkInButtonPopUp" value="Check In" class="btn btn-primary" onclick="javascript: checkInMemberToEvent()">Check In</button>
                <button type="button" class="btn btn-default" tabindex="-1" onclick="javascript:CloseAddedRow()">Cancel</button>
            </div>
            <div class="col-xs-12">
                <a href="@RDN.Library.Classes.Config.LibraryConfig.WikiSite/Calendar_and_Attendance_Tracking#Calendar_Point_Types_Explained" target="_blank">Point Types Explained</a>
            </div>
        </div>
    </div>
    
    <div id="availablePopUp" style="display: none;">
        <div class="row">
            <div class="col-xs-12">
                <label class="form-label">Available Type</label>
                <div class="margin-bottom-20">
                    @Html.DropDownList("availableSelection", new SelectList(AvailableType, "Data", "Name"), "Set Availability...", new { @class = "form-control" })
                </div>
            </div> 
            <div class="col-xs-12">
                <label class="form-label">Notes</label>
                <div class="margin-bottom-20">
                    <input type="text" id="availableNotes" class="form-control" />
                </div>
            </div> 
            <div class="col-xs-12">
                <button type="button" id="availableButtonPopUp" value="Set Availability" class="btn btn-primary" onclick="javascript:setAvailabilityMemberToEvent()">Set Availability</button>
                <button type="button" class="btn btn-default" tabindex="-1" onclick="javascript:CloseAddedRow()">Cancel</button>
            </div>
        </div>
    </div>
    <script type="text/javascript">
        $(document).ready(function () {
            $('[data-toggle="offcanvas"]').click(function () {
                $('.row-offcanvas').toggleClass('active');
            });
        });
    </script>

}
