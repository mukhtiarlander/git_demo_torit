@model RDN.League.Models.OutModel.GenericSingleModel<RDN.League.Models.Utilities.SimpleModPager<RDN.Portable.Classes.Account.Classes.MemberDisplay>>
@using RDN.Library.Classes.League.Enums
@using RDN.Portable.Classes.League.Enums;
@{
    ViewBag.Title = "Permissions for " + ViewBag.LeagueName;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var memId = RDN.Library.Classes.Account.User.GetMemberId();
    bool isManager = RDN.Library.Cache.MemberCache.IsManagerOrBetterOfLeague(memId);
    bool isAdminOfLeague = RDN.Library.Cache.MemberCache.IsSecretaryOrBetterOfLeague(memId);
    bool isOwner = RDN.Library.Cache.MemberCache.IsOwnerOfLeague(memId);
    bool isPaid = RDN.Library.Cache.MemberCache.CheckIsLeagueSubscriptionPaid(memId);
}

<ol class="breadcrumb">
    <li><a href="@RDN.Utilities.Config.ConfigManager.InternalSite">Home</a></li>
    <li class="active">Members Permissions</li>
</ol>
<div class="panel panel-default margin-top-20">
    <div class="panel-heading">
        <div class="row">
            <div class="col-xs-12 col-sm-6">
                <h3 style="margin-top:5px !important"><i class="fa fa-group"></i> Members For @ViewBag.LeagueName</h3>
            </div>
            <div class="col-xs-12 col-sm-6 text-right">
                @if (isAdminOfLeague)
                {
                    <a class="btn btn-info btn-sm" title="Add Members" href="@Url.Content("~/League/Members/Add")">
                        <i class="fa fa-plus-circle"></i> Add
                    </a>
              
                }
                @if (isPaid)
                {
                    <a class="btn btn-default btn-sm" href="@Url.Content("~/league/members/view/report")">
                        <i class="fa fa-file-text"></i> Report
                    </a>
                }
                else
                {
                    <a class="btn btn-default btn-sm" href="@Url.Content("~/billing/league/" + ViewBag.LeagueId + "?u=" + RDN.Library.Util.Enum.SiteMessagesEnum.pp)" title="Report Builder is only available to subscribed leagues">
                        <i class="fa fa-file-text"></i> Report
                    </a>
                }
            </div>
        </div>
        <div class="text-muted">Change the permissions of people within your league.  Allow them to do various things within @RDN.Library.Classes.Config.LibraryConfig.WebsiteShortName.</div>
    </div>
    <div class="panel-heading text-center no-padding-bottom margin-bottom-10" style="background-color:#fbfbfb">
        @Html.Partial("Menus/LeagueViewMembers")
    </div>
    <div id="double-scroll" class="panel-body no-padding padding-top-10" style="overflow-x:auto">
            <table class="table table-striped table-hover table-condensedas" id="members">
                <thead>
                    <tr>
                        @if (isAdminOfLeague)
                        {
                            <th></th>
                        }
                        <th>
                           Nick Name
                        </th>
                        <th>
                            #
                        </th>
                        @if (isOwner)
                        {
                            <th class="text-center">
                                @RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Owner)
                            </th>
                        }
                        @if (isManager)
                        {
                            <th class="text-center">
                                @RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Manager)
                            </th>
                        }
                        <th class="text-center">
                            @RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Secretary)
                        </th>
                        <th class="text-center">
                            @RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Treasurer)
                        </th>
                        <th class="text-center">
                            @RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Head_Ref)
                        </th>
                        <th class="text-center">
                            @RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Shops)
                        </th>
                        <th class="text-center">
                            @RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Events_Coord)
                        </th>
                        <th class="text-center">
                            @RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Medical)
                        </th>
                        <th class="text-center">
                            @RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Attendance)
                        </th>
                        <th class="text-center">
                            @RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Polls)
                        </th>
                        <th class="text-center">
                            @RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Inventory)
                        </th>
                        <th class="center">
                            @RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Sponsorship)
                        </th>
                        <th class="center">
                            @RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Roster)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Model.Items.Count; i++)
                    {
                        <tr>
                            @if (isAdminOfLeague)
                            {
                                <td>
                                    <a class="btn btn-success btn-xs" href="@Url.Content("~/League/Member/Edit/" + Model.Model.Items[i].MemberId.ToString().Replace("-", "") + "/" + RDN.Utilities.Strings.StringExt.ToSearchEngineFriendly(Model.Model.Items[i].DerbyName))"><i class="fa fa-pencil"></i></a>
                                </td>
                            }
                            <td>
                                <a href="@Url.Content("~/Member/" + Model.Model.Items[i].MemberId.ToString().Replace("-", "") + "/" + RDN.Utilities.Strings.StringExt.ToSearchEngineFriendly(Model.Model.Items[i].DerbyName))">
                                    @Model.Model.Items[i].DerbyName
                                </a>
                            </td>
                            <td>
                                @Model.Model.Items[i].PlayerNumber
                            </td>
                            @if (isOwner)
                            {
                                <td class="text-center">
                                    <input type="checkbox" id="@Model.Model.Items[i].MemberId-o" @(Model.Model.Items[i].LeagueOwnersEnum.HasFlag(LeagueOwnersEnum.Owner) ? "checked='checked'" : "") />
                                </td>
                            }
                            @if (isManager)
                            {
                                <td class="text-center">
                                    <input type="checkbox" id="@Model.Model.Items[i].MemberId-m" @(Model.Model.Items[i].LeagueOwnersEnum.HasFlag(LeagueOwnersEnum.Manager) ? "checked='checked'" : "") />
                                </td>
                            }
                            <td class="text-center">
                                <input type="checkbox" id="@Model.Model.Items[i].MemberId-s" @(Model.Model.Items[i].LeagueOwnersEnum.HasFlag(LeagueOwnersEnum.Secretary) ? "checked='checked'" : "") />
                            </td>
                            <td class="text-center">
                                <input type="checkbox" id="@Model.Model.Items[i].MemberId-t" @(Model.Model.Items[i].LeagueOwnersEnum.HasFlag(LeagueOwnersEnum.Treasurer) ? "checked='checked'" : "") />
                            </td>
                            <td class="text-center">
                                <input type="checkbox" id="@Model.Model.Items[i].MemberId-r" @(Model.Model.Items[i].LeagueOwnersEnum.HasFlag(LeagueOwnersEnum.Head_Ref) ? "checked='checked'" : "") />
                            </td>
                            <td class="text-center">
                                <input type="checkbox" id="@Model.Model.Items[i].MemberId-sm" @(Model.Model.Items[i].LeagueOwnersEnum.HasFlag(LeagueOwnersEnum.Shops) ? "checked='checked'" : "") />
                            </td>
                            <td class="text-center">
                                <input type="checkbox" id="@Model.Model.Items[i].MemberId-ec" @(Model.Model.Items[i].LeagueOwnersEnum.HasFlag(LeagueOwnersEnum.Events_Coord) ? "checked='checked'" : "") />
                            </td>
                            <td class="text-center">
                                <input type="checkbox" id="@Model.Model.Items[i].MemberId-med" @(Model.Model.Items[i].LeagueOwnersEnum.HasFlag(LeagueOwnersEnum.Medical) ? "checked='checked'" : "") />
                            </td>
                            <td class="text-center">
                                <input type="checkbox" id="@Model.Model.Items[i].MemberId-attn" @(Model.Model.Items[i].LeagueOwnersEnum.HasFlag(LeagueOwnersEnum.Attendance) ? "checked='checked'" : "") />
                            </td>
                            <td class="text-center">
                                <input type="checkbox" id="@Model.Model.Items[i].MemberId-poll" @(Model.Model.Items[i].LeagueOwnersEnum.HasFlag(LeagueOwnersEnum.Polls) ? "checked='checked'" : "") />
                            </td>
                            <td class="text-center">
                                <input type="checkbox" id="@Model.Model.Items[i].MemberId-inventory" @(Model.Model.Items[i].LeagueOwnersEnum.HasFlag(LeagueOwnersEnum.Inventory) ? "checked='checked'" : "") />
                            </td>
                            <td class="text-center">
                                <input type="checkbox" id="@Model.Model.Items[i].MemberId-sponsor" @(Model.Model.Items[i].LeagueOwnersEnum.HasFlag(LeagueOwnersEnum.Sponsorship) ? "checked='checked'" : "") />
                            </td>
                            <td class="text-center">
                                <input type="checkbox" id="@Model.Model.Items[i].MemberId-roster" @(Model.Model.Items[i].LeagueOwnersEnum.HasFlag(LeagueOwnersEnum.Roster) ? "checked='checked'" : "") />
                            </td>
                        </tr>
                }
                </tbody>
                <tfoot>
                    <tr>
                        @if (isAdminOfLeague)
                    {
                            <th></th>
                    }
                        <th>
                           Nick Name
                        </th>
                        <th>
                            #
                        </th>
                       @if (isOwner)
                        {
                            <th class="text-center">
                                @RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Owner)
                            </th>
                            }
                            @if (isManager)
                            {
                                <th class="text-center">
                                    @RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Manager)
                                </th>
                            }
                            <th class="text-center">
                                @RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Secretary)
                            </th>
                            <th class="text-center">
                                @RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Treasurer)
                            </th>
                            <th class="text-center">
                                @RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Head_Ref)
                            </th>
                            <th class="text-center">
                                @RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Shops)
                            </th>
                            <th class="text-center">
                                @RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Events_Coord)
                            </th>
                            <th class="text-center">
                                @RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Medical)
                            </th>
                            <th class="text-center">
                                @RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Attendance)
                            </th>
                            <th class="text-center">
                                @RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Polls)
                            </th>
                            <th class="text-center">
                                @RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Inventory)
                            </th>
                        <th class="center">
                            @RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Sponsorship)
                        </th>
                    </tr>
                </tfoot>

            </table>
    </div>
    <div class="panel-footer">
        <ul class="permissionDetails">
            <li>
                <b>
                    @RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Owner)
                </b> - Can do anything within @RDN.Library.Classes.Config.LibraryConfig.WebsiteShortName.
            </li>
            <li>
                <b>@RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Manager)</b> - Can do anything within @RDN.Library.Classes.Config.LibraryConfig.WebsiteShortName, but does not own the league. Does NOT have access to Medical Records.
            </li>
            <li>
                <b>@RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Secretary)</b> - Has manager access to Forums, Insurance, Contacts, Groups, Skill Levels, Documents, Contacts, Polls, Inventory and Attendance.
            </li>
            <li>
                <b>@RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Treasurer)</b> - Has manager access to Dues Management.
            </li>
            <li>
                <b>@RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Head_Ref)</b> - Has manager access to Games.
            </li>
            <li>
                <b>@RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Shops)</b> - Has manager access to the shop of the league.
            </li>
            <li>
                <b>@RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Events_Coord)</b> - Manages the Calendar & answers messages about public events from the general public.
            </li>
            <li>
                <b>@RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Medical)</b> - Has Access to Medical Records.
            </li>
            <li>
                <b>@RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Attendance)</b> - Attendance Manager deals with all attendance records along.
            </li>
            <li>
                <b>@RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Polls)</b> - Poll Manager can create, edit and view polls and their results.
            </li>
            <li>
                <b>@RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Inventory)</b> - Inventory Manager manages the leagues inventory and items for the league.
            </li>
            <li>
                <b>@RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Sponsorship)</b> - Can manage sponsors, add remove and edit all sponsorship information.
            </li>
            <li>
                <b>@RDN.Utilities.Enums.EnumExt.ToFreindlyName(LeagueOwnersEnum.Roster)</b> - Can manage rosters, add remove and edit all roster information.
            </li>
        </ul>
    </div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        $("#membersTypeButtons").find("li[tag='permissions']").addClass('active b');
        $('#members').dataTable({
            "aaSorting": [[1, "asc"]],
            "bPaginate": false,
            "bLengthChange": false,
            "bFilter": true,
            "bSort": true,
            "bInfo": false,
            "bAutoWidth": false,
            "oLanguage": { "sSearch": "" },
        });
        $('#members_filter input').addClass('form-control').attr("placeholder", "Search");
         @for (int i = 0; i < Model.Model.Items.Count; i++)
         {
             if (isOwner)
             {
        <text>$("#@Model.Model.Items[i].MemberId-o").change(function () {
            SetLeagueOwnership(this, '@Model.Model.Items[i].MemberId', 'o');
        });</text>
             }
             if (isManager)
             {
             <text>$("#@Model.Model.Items[i].MemberId-m").change(function () {
            SetLeagueOwnership(this, '@Model.Model.Items[i].MemberId', 'm');
        });</text>
             }
             <text>$("#@Model.Model.Items[i].MemberId-s").change(function () {
            SetLeagueOwnership(this, '@Model.Model.Items[i].MemberId', 's');
        });</text>
             <text>$("#@Model.Model.Items[i].MemberId-t").change(function () {
            SetLeagueOwnership(this, '@Model.Model.Items[i].MemberId', 't');
        });</text>
             <text>$("#@Model.Model.Items[i].MemberId-r").change(function () {
            SetLeagueOwnership(this, '@Model.Model.Items[i].MemberId', 'r');
        });</text>
              <text>$("#@Model.Model.Items[i].MemberId-sm").change(function () {
            SetLeagueOwnership(this, '@Model.Model.Items[i].MemberId', 'sm');
        });</text>
               <text>$("#@Model.Model.Items[i].MemberId-ec").change(function () {
            SetLeagueOwnership(this, '@Model.Model.Items[i].MemberId', 'ec');
        });</text>
                <text>$("#@Model.Model.Items[i].MemberId-med").change(function () {
            SetLeagueOwnership(this, '@Model.Model.Items[i].MemberId', 'med');
        });</text>
                <text>$("#@Model.Model.Items[i].MemberId-attn").change(function () {
            SetLeagueOwnership(this, '@Model.Model.Items[i].MemberId', 'attn');
        });</text>
             <text>$("#@Model.Model.Items[i].MemberId-poll").change(function () {
            SetLeagueOwnership(this, '@Model.Model.Items[i].MemberId', 'poll');
        });</text>
              <text>$("#@Model.Model.Items[i].MemberId-inventory").change(function () {
            SetLeagueOwnership(this, '@Model.Model.Items[i].MemberId', 'inventory');
        });</text>
            <text>$("#@Model.Model.Items[i].MemberId-sponsor").change(function () {
            SetLeagueOwnership(this, '@Model.Model.Items[i].MemberId', 'sponsor');
        });</text>
         }
        $("#double-scroll").doubleScroll();
    });
   
</script>
