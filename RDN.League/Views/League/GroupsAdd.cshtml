@model RDN.Portable.Classes.League.Classes.LeagueGroup
@{
    ViewBag.Title = "Create New Group";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<ol class="breadcrumb">
    <li><a href="@RDN.Utilities.Config.ConfigManager.InternalSite">Home</a></li>
    <li><a href="@Url.Content("~/league/groups/")">Groups</a></li>
    <li class="active">Edit Group</li>
</ol>
<div class="row">
    <div class="col-xs-12 col-md-10 col-md-offset-1 col-lg-8 col-lg-offset-2">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="margin-bottom-5 margin-top-5"><i class="fa fa-group"></i> Create a New Group</h3>
                <span class="text-muted">Please <a href="http://wiki.rdnation.com/Groups_And_Teams" target="_blank">read the wiki before continuing</a> to create a group for the first time.</span>
            </div>
             @using (Html.BeginForm("GroupsAdd", "League", FormMethod.Post, new { @id = "GroupsAdd" }))
            { 
                <div class="panel-body">
                    <div class="row">
                        <div class="col-xs-12">
                            <label class="form-label">Group Name</label>
                            <div class="margin-bottom-20">
                                @Html.TextBoxFor(x => x.GroupName, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-xs-12">
                            <label class="form-label">Is Group Public</label>
                            <div class="margin-bottom-20">
                                @Html.CheckBoxFor(x => x.IsPublicToWorld) - Public Groups are for teams or committees you want to display to the world.
                            </div>
                        </div>
                        <div class="col-xs-12">
                            <label class="form-label">Group Type</label>
                            <div class="margin-bottom-20">
                                @Html.DropDownListFor(x => x.GroupTypeEnum, (SelectList)ViewData["groupTypeSelectList"], new { @class = "full-width margin-bottom-5" })
                                <a href="http://wiki.rdnation.com/Groups_And_Teams#Group_Types_Explained" target="_blank">Group Types Explained</a>
                            </div>
                        </div>
                        <div class="col-xs-12">
                            <label class="form-label">Email Address</label>
                            <div class="margin-bottom-20">
                                @Html.TextBoxFor(x => x.EmailAddress, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-xs-12">
                            <label class="form-label">Members</label>
                            <span>- <a href="http://wiki.rdnation.com/Groups_And_Teams#Group_Members_Explained" target="_blank">Group Members Explained</a></span>
                            <div>
                                <table id="groupMembers" class="table table-striped table-hover">
                                    <thead>
                                        <tr>
                                            <th>Name</th>
                                            <th>Apart Of Group</th>
                                            <th>Member Type</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @for (int j = 0; j < Model.League.LeagueMembers.Count; j++)
                                        {
                                            <tr>
                                                <td class="vertical-middle">
                                                    @Model.League.LeagueMembers[j].DerbyName
                                                </td>
                                                <td class="vertical-middle">
                                                    @Html.CheckBox(Model.League.LeagueMembers[j].MemberId + "-check", new { @style = "width:50px;" })
                                                </td>
                                                <td>
                                                    <select name="@Model.League.LeagueMembers[j].MemberId-memType" id="@Model.League.LeagueMembers[j].MemberId-memType">
                                                        @foreach (var item in RDN.League.Classes.Enums.EnumExt.ToSelectList(RDN.Portable.Classes.League.Enums.GroupMemberAccessLevelEnum.Member))
                                                        {
                                                            <option value="@item.Value" title="@item.Text" label="@item.Text"></option>
                                                        }
                                                    </select>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel-footer">
                    <button class="btn btn-success" type="submit"><i class="fa fa-save"></i> Create Group</button>
                    <a class="btn btn-default" href="@Url.Content("~/league/groups/")">Cancel Group</a>
                </div>
               @Html.HiddenFor(x => x.League.LeagueId)
            }
        </div>
    </div>
</div>
<script type="text/javascript">
    $("#GroupsAdd").validate({
        rules: {
            GroupName: "required",
            mem1: "required",
            GroupTypeEnum: "required"
        }
    });
</script>
