@model RDN.League.Models.OutModel.GenericSingleModel<RDN.League.Models.Utilities.SimpleModPager<RDN.Portable.Classes.Account.Classes.MemberDisplay>>
@{
    ViewBag.Title = "Dates for Members in " + ViewBag.LeagueName;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var memId = RDN.Library.Classes.Account.User.GetMemberId();
    bool isAdminOfLeague = RDN.Library.Cache.MemberCache.IsSecretaryOrBetterOfLeague(memId);
    bool isPaid = RDN.Library.Cache.MemberCache.CheckIsLeagueSubscriptionPaid(memId);
}
<div class="expandableContainer">
    <div class="expandableCenterContainter">
        <div class="fixTitle">
            Members For @ViewBag.LeagueName
        </div>
        <div class="expandableCenterContainterRight">
            @if (isAdminOfLeague)
            { 
                <div class="navIcons">
                    <a title="Add Members" href="@Url.Content("~/League/Members/Add")">
                        <img src="@Url.Content("~/Content/images/icons/adduser.png")"  />Add
                    </a>
                </div>
            }
            <div class="navIcons">
                <a href="@Url.Content("~/league/ViewMembersDatesExportExcel")" title="Export Excel">
                    <img src="@Url.Content("~/Content/images/icons/docs/excel.png")"  />Export
                </a>
            </div>
            @if (isPaid)
            {
                <div class="navIcons">
                    <a href="@Url.Content("~/league/members/view/report")">
                        <img src="@Url.Content("~/Content/images/icons/report.png")"  />Report
                    </a>
                </div>
            }
            else
            { 
                <div class="navIcons">
                    <a href="@Url.Content("~/billing/league/" + ViewBag.LeagueId + "?u=" + RDN.Library.Util.Enum.SiteMessagesEnum.pp)" title="Report Builder is only available to subscribed leagues">
                        <img src="@Url.Content("~/Content/images/icons/report.png")"  />Report
                    </a>
                </div>
            }
        </div>
        <div class="titleDescription">
            Here you can view the Member Dates for your league
     
        </div>
        <div class="divider"></div>


        <div class="membersPager">
            @Html.Partial("Menus/LeagueViewMembers")


        </div>
        <br />
        <br />
        <div>
            <table class="listTable" id="members">
                <thead>
                    <tr>
                        <th></th>
                        <th></th>
                        <th>First Name
                        </th>
                        <th>Last Name
                        </th>
                        <th>Derby Name
                        </th>
                        <th>#
                        </th>
                        <th>Skills Test Date
                        </th>
                        <th>Birth Date
                        </th>
                        <th>League Departure Date
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Model.Items.Count; i++)
                    {
                    
                        <tr>
                            <th>
                                @i
                            </th>
                            @if (isAdminOfLeague)
                            { 
                                <td>
                                    <a href="@Url.Content("~/League/Member/Edit/" + Model.Model.Items[i].MemberId.ToString().Replace("-", "") + "/" + RDN.Utilities.Strings.StringExt.ToSearchEngineFriendly(Model.Model.Items[i].DerbyName))">Edit </a>
                                </td>
                            }
                            <td>@Model.Model.Items[i].Firstname
                            </td>
                            <td>@Model.Model.Items[i].LastName
                            </td>
                            <td>
                                <a href="@Url.Content("~/Member/" + Model.Model.Items[i].MemberId.ToString().Replace("-", "") + "/" + RDN.Utilities.Strings.StringExt.ToSearchEngineFriendly(Model.Model.Items[i].DerbyName))">
                                    @Model.Model.Items[i].DerbyName
                                </a>
                            </td>
                            <td>@Model.Model.Items[i].PlayerNumber
                            </td>

                            <td>@if (Model.Model.Items[i].Leagues.FirstOrDefault() != null && Model.Model.Items[i].Leagues.FirstOrDefault().SkillsTestDate.HasValue)
                                {
                                <span>@Model.Model.Items[i].Leagues.FirstOrDefault().SkillsTestDate.GetValueOrDefault().ToShortDateString()</span>
                                }
                            </td>
                            <td>
                                @if (Model.Model.Items[i].DOB > new DateTime())
                                {
                                    @Model.Model.Items[i].DOB.ToShortDateString()
                                }
                            </td>
                            <td>@if (Model.Model.Items[i].Leagues.FirstOrDefault() != null && Model.Model.Items[i].Leagues.FirstOrDefault().DepartureDate.HasValue)
                                {
                                <span>@Model.Model.Items[i].Leagues.FirstOrDefault().DepartureDate.GetValueOrDefault().ToShortDateString()</span>
                                }
                            </td>

                        </tr>     
                    
                    }
                </tbody>
            </table>
        </div>

    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $('#members').dataTable({
            "aaSorting": [[1, "asc"]],
            "bPaginate": false,
            "bLengthChange": false,
            "bFilter": false,
            "bSort": true,
            "bInfo": false,
            "bAutoWidth": false
        });
    });

</script>
