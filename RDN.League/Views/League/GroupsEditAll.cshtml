@*@model RDN.League.Models.OutModel.GenericSingleModel<RDN.League.Models.Utilities.SimpleModPager<RDN.Portable.Classes.Account.Classes.>>*@
@model RDN.Portable.Classes.League.Classes.League
@*@model RDN.Portable.Classes.League.Classes.LeagueGroup*@
@using RDN.Library.Classes.League.Enums
@using RDN.Portable.Classes.League.Enums;
@{
	ViewBag.Title = "Edit Groups";
	Layout = "~/Views/Shared/_Layout.cshtml";
	var memId = RDN.Library.Classes.Account.User.GetMemberId();
	bool isManager = RDN.Library.Cache.MemberCache.IsManagerOrBetterOfLeague(memId);
	bool isAdminOfLeague = RDN.Library.Cache.MemberCache.IsSecretaryOrBetterOfLeague(memId);
	bool isOwner = RDN.Library.Cache.MemberCache.IsOwnerOfLeague(memId);
	bool isPaid = RDN.Library.Cache.MemberCache.CheckIsLeagueSubscriptionPaid(memId);
}

<ol class="breadcrumb">
	<li><a href="@RDN.Library.Classes.Config.LibraryConfig.InternalSite">Home</a></li>
	<li><a href="@Url.Content("~/league/members/view/all")">Members</a></li>
	<li><a href="@Url.Content("~/league/groups")">Groups</a></li>
	<li class="active">Edit</li>
</ol>
<div class="panel panel-default margin-top-20">
	<div class="panel-heading">
		<div class="row">
			<div class="col-xs-12 col-sm-6">
				<h3 style="margin-top:5px !important"><i class="fa fa-group"></i> Groups For @Model.Name</h3>
			</div>			
		</div>		
	</div>
	
	<div id="double-scroll" class="panel-body no-padding padding-top-10" style="overflow-x:auto">
		<table class="table table-striped table-hover table-condensedas" id="members">
			<thead>
				<tr>
					<th class="text-center">Name</th>
					@for (int i = 0; i < Model.Groups.Count; i++)
					{
						<th class="text-center">@Model.Groups[i].GroupName</th>
					}
				</tr>
			</thead>
			<tbody>	
				@for (int i = 0; i < Model.LeagueMembers.Count; i++)
				{ 
					<tr>
						<td class="text-left">
							@Model.LeagueMembers[i].DerbyName
							<br />
							@Model.LeagueMembers[i].Firstname @Model.LeagueMembers[i].LastName
						</td>
						
						@for (int j = 0; j < Model.Groups.Count; j++)
						{
							var member = Model.Groups[j].GroupMembers.FirstOrDefault(m => m.MemberId == Model.LeagueMembers[i].MemberId);
							if(member != null)
							{
								<td class="text-center">
									@Html.CheckBox(member.MemberId + ":" + @Model.Groups[j].Id , member.IsApartOfGroup, new { @style = "width:50px;" })
									
								</td>
							}
							else
							{
								<td class="text-center">
									@Html.CheckBox(Model.LeagueMembers[i].MemberId + ":" + @Model.Groups[j].Id, false, new { @style = "width:50px;" })
								</td>
							}
						}
					</tr>
				}
			</tbody>
			<tfoot>
				<tr>
					<th class="text-center">Name</th>
					@for (int i = 0; i < Model.Groups.Count; i++)
					{
						<th class="text-center">@Model.Groups[i].GroupName</th>
					}
				</tr>
			</tfoot>
		</table>
	</div>	
</div>


<script type="text/javascript">
    $(document).ready(function () {
        $('#members').dataTable({
            "aaSorting": [[1, "asc"]],
            "bPaginate": false,
            "bLengthChange": false,
            "bFilter": true,
            "bSort": true,
            "bInfo": false,
            "bAutoWidth": false,
            "oLanguage": { "sSearch": "" },
        });
        $('#members_filter input').addClass('form-control').attr("placeholder", "Search");
        
        $("#double-scroll").doubleScroll();

        $("input[type='checkbox']").change(function () {

        	$.getJSON("/league/EditMemberGroup",
				{
					memberId: this.name.substr(0, this.name.indexOf(':')),
					groupId: this.name.substr(this.name.indexOf(':')+1),
					isApartOfGroup: this.checked
				},
				function (result) {
					if (result.isSuccess === true) {
					} else {
						this.checked = !this.checked;
					}
				}).error(function () {
				});

        });
    });

</script>