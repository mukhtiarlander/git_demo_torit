@using RDN.Library.Classes.Document.Enums
@model RDN.Library.Classes.Document.DocumentRepository
@{
    ViewBag.Title = "Documents for " + Model.OwnerName;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var memId = RDN.Library.Classes.Account.User.GetMemberId();
    bool manager = RDN.Library.Cache.MemberCache.IsSecretaryOrBetterOfLeague(memId);
    string selectedFolder = "Documents";

    if (ViewBag.SelectedFolder != null)
    { selectedFolder = ViewBag.SelectedFolder; }
}

<ol class="breadcrumb">
    <li><a href="@RDN.Utilities.Config.ConfigManager.InternalSite">Home</a></li>
    <li class="active">Documents</li>
</ol>


<div class="row">
    <div class="col-xs-12">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="input-group">
                    <input id="textSearchBox" class="form-control" placeholder="Search Documents, Seperate, By, Comma" onkeyup="League.FullTextDocumentSearchLeague(true)" />
                    <div class="input-group-btn alignTop">
                        <button class="btn btn-primary" onclick="League.FullTextDocumentSearchLeague(false)"><i class="fa fa-search"></i> Search</button>
                    </div>
                    <div style="width: 120px;margin: 0 5px !important;text-align: right; position:relative; vertical-align: middle; display:table-cell">
                        <label title="Search Within the Documents">
                            <input type="checkbox" id="cbDeepSearch"> Deep Search
                        </label>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="co-xs-12 col-sm-4 col-md-3">
        <div class="panel panel-default">
            <div class="panel-heading">
                <div class="row">
                    <div class="col-xs-6">
                        <i class="fa fa-folder"></i> Folders
                    </div>
                    @if (manager)
                    {
                        <div class="col-xs-6 text-right">
                            <a class="btn btn-xs btn-warning" title="Document Settings" href="@Url.Content("~/league/documents/settings/" + @Model.OwnerId.ToString().Replace("-", ""))">
                                <i class="fa fa-cogs"></i>
                            </a>
                        </div>
                    }
                </div>
            </div>
            <div class="panel-body scroll-x">

                <ol class="tree">
                    <li>
                        <label for="@Model.OwnerId.ToString().Replace("-", "")"> <a href="@Url.Content("~/league/documents/" + @Model.OwnerId.ToString().Replace("-", ""))">League Docs</a></label><input type="checkbox" checked id="@Model.OwnerId.ToString().Replace("-", "")" />
                        <ol class="groupFolder">
                            @foreach (var folder in Model.Folders.Where(x => x.GroupId == 0 && x.ParentFolderId == 0).OrderBy(x => x.FolderName))
                            {

                                <li>
                                    <label for="folder.FolderId">
                                        <a href="@Url.Content("~/league/documents/" + @Model.OwnerId.ToString().Replace("-", "") + "?f=" + folder.FolderId)">

                                            @folder.FolderName

                                        </a>
                                    </label><input type="checkbox" id="folder.FolderId" />
                                    @if (Model.Folders.Where(x => x.ParentFolderId == folder.FolderId).Count() > 0)
                                    {
                                        <ol>
                                            @foreach (var subFolder in Model.Folders.Where(x => x.ParentFolderId == folder.FolderId).OrderBy(x => x.FolderName))
                                            {
                                                <li>
                                                    <a href="@Url.Content("~/league/documents/" + @Model.OwnerId.ToString().Replace("-", "") + "?f=" + subFolder.FolderId)">
                                                        @if (subFolder.FolderName.ToString().Length > 17)
                                                        {
                                                            @subFolder.FolderName.Substring(0, 17)<span>..</span>;
                                                        }
                                                        else
                                                        {
                                                            @subFolder.FolderName
                                                        }
                                                    </a>
                                                </li>
                                            }
                                        </ol>
                                    }
                                </li>
                            }
                        </ol>
                    </li>


                    @foreach (var group in Model.GroupsApartOf.OrderBy(x => x.GroupName))
                    {
                        <li>
                            <label for="group.Id">
                                <a href="@Url.Content("~/league/documents/" + @Model.OwnerId.ToString().Replace("-", "") + "?g=" + group.Id)">
                                    @if (group.GroupName.ToString().Length > 17)
                                    {
                                        @group.GroupName.Substring(0, 17)<span>..</span>;
                                    }
                                    else
                                    {
                                        @group.GroupName
                                    }
                                </a>
                            </label><input type="checkbox" checked id="group.Id" />

                            <ol>
                                @foreach (var groupFolder in Model.Folders.Where(x => x.GroupId == group.Id).OrderBy(x => x.FolderName))
                                {
                                    <li>
                                        <label for="groupFolder.FolderId">
                                            <a href="@Url.Content("~/league/documents/" + @Model.OwnerId.ToString().Replace("-", "") + "?f=" + groupFolder.FolderId)">
                                                @if (groupFolder.FolderName.ToString().Length > 17)
                                                {
                                                    @groupFolder.FolderName.Substring(0, 17)<span>..</span>;
                                                }
                                                else
                                                {
                                                    @groupFolder.FolderName
                                                }
                                            </a>
                                        </label><input type="checkbox" checked id="groupFolder.FolderId" />
                                        @if (Model.Folders.Where(x => x.ParentFolderId == groupFolder.FolderId).Count() > 0)
                                        {
                                            <ol>
                                                @foreach (var subFolder in Model.Folders.Where(x => x.ParentFolderId == groupFolder.FolderId).OrderBy(x => x.FolderName))
                                                {
                                                    <li>
                                                        <label>
                                                            <a href="@Url.Content("~/league/documents/" + @Model.OwnerId.ToString().Replace("-", "") + "?f=" + subFolder.FolderId)">
                                                                @if (subFolder.FolderName.ToString().Length > 17)
                                                                {
                                                                    @subFolder.FolderName.Substring(0, 17)<span>..</span>;
                                                                }
                                                                else
                                                                {
                                                                    @subFolder.FolderName
                                                                }
                                                            </a>
                                                        </label>
                                                    </li>
                                                }
                                            </ol>
                                        }

                                    </li>
                                }
                            </ol>

                        </li>

                    }

                </ol>
            </div>
            <div class="panel-footer">
                @using (Html.BeginForm("UploadLeagueDocuments", "Document", FormMethod.Post, new { @enctype = "multipart/form-data" }))
                {
                    <div class="margin-bottom-10">
                        <input type="file" class="btn btn-default" name="files" id="documentUpload" style="width:100%" />
                    </div>
                    <div class="margin-bottom-10">
                        <div id="fileUpload-list" class="uploadList"></div>
                    </div>
                    <div class="margin-bottom-10">
                        @Html.DropDownList("uploadDocsDD", (SelectList)ViewBag.FoldersApartOf, "Send To...", new { @class = "select-sm full-width" })
                    </div>
                    <button class="btn btn-success btn-sm" id="submitDocs" type="submit"><i class="fa fa-upload"></i> Upload Documents</button>

                    @Html.HiddenFor(x => x.OwnerId)
                }
            </div>
        </div>


    </div>
    <div class="co-xs-12 col-sm-8 col-md-9">
        <div class="panel panel-default">
            <div class="panel-heading">
                <div class="row">
                    <div class="col-xs-6">
                        <h4><i class="fa fa-file"></i> @selectedFolder</h4>
                    </div>
                    @if (manager)
                    {
                        <div class="col-xs-6 text-right">
                            <button id="doc-view-archive-btn" class="btn btn-sm  btn-default non-archive" title="View Archived Documents" onclick="League.DisplayArchivedDocuments(this)">
                                <i class="fa fa-archive"></i>
                            </button>
                            <button id="doc-archive-btn" class="btn btn-sm  btn-primary display-none" title="Archive" onclick="League.ArchiveDocument(this)">
                                <i class="fa fa-file-archive-o"></i>
                            </button>
                            <button id="doc-rename-btn" class="btn btn-sm  btn-success display-none" title="Rename" onclick="League.RenameDocument(this)">
                                <i class="fa fa-pencil"></i>
                            </button>
                            <button id="doc-delete-btn" class="btn btn-sm  btn-danger  display-none" title="Delete" onclick="League.DeleteDocument(this)">
                                <i class="fa fa-trash-o"></i>
                            </button>
                            @Html.DropDownList("dd-MoveItem", (SelectList)ViewBag.FoldersSelect, "Move To...", new { @id = "doc-move-ddl", @onchange = "League.MoveDocumentToFolder(this)", @class = "select-sm  display-none" })
                            <span id="img-MoveItem"><i class="fa fa-check-circle display-none"></i></span>
                        </div>
                    }
                </div>
            </div>
            <div class="panel-body scroll-y">
                <table id="documents" class="table table-striped table-hover table-condensed no-margin-bottom">
                    <thead>
                        <tr>
                            <th></th>
                            <th></th>
                            <th>Document</th>
                            <th>Folder</th>
                            <th></th>
                            <th>Size</th>
                            <th>Uploaded</th>
                        </tr>

                    </thead>
                    <tbody id="documentsBody">
                        @foreach (var doc in Model.Documents)
                        {
                            <tr id="docRow-@doc.OwnerDocId" name="@doc.DocumentName" style="cursor:pointer">
                                <td style="vertical-align:middle" class="text-center">
                                    <input type="checkbox" id="cb-@doc.OwnerDocId" />
                                </td>
                                <td style="vertical-align:middle">
                                    @switch (doc.MimeType)
                                    {
                                        case MimeType.excel:
                                        case MimeType.excelOld:
                                        case MimeType.xlsm:
                                            <i class="fa fa-file-excel-o fa-lg"></i>
                                            break;
                                        case MimeType.doc:
                                        case MimeType.rtf:
                                        case MimeType.dotx:
                                        <i class="fa fa-file-word-o fa-lg"></i>
                                            break;
                                        case MimeType.csv:
                                        <i class="fa fa-file-excel-o fa-lg"></i>
                                            break;
                                        case MimeType.odf:
                                        <img class="docIcon" src="@Url.Content("~/Content/images/icons/docs/odf.png")" />
                                            break;
                                        case MimeType.ods:
                                        <img class="docIcon" src="@Url.Content("~/Content/images/icons/docs/ods.png")" />
                                            break;
                                        case MimeType.png:
                                        case MimeType.tif:
                                        case MimeType.jpg:
                                        case MimeType.bmp:
                                        case MimeType.jpeg:
                                        case MimeType.gif:
                                        <i class="fa fa-file-image-o fa-lg"></i>
                                            break;
                                        case MimeType.txt:
                                        <i class="fa fa-file-text-o fa-lg"></i>
                                            break;
                                        case MimeType.ai:
                                        <img class="docIcon" src="@Url.Content("~/Content/images/icons/docs/ai.png")" />
                                            break;
                                        case MimeType.pdf:
                                        <i class="fa fa-file-pdf-o fa-lg"></i>
                                            break;
                                        case MimeType.zip:
                                        <i class="fa fa-file-zip-o fa-lg"></i>
                                            break;
                                        case MimeType.xml:
                                        <i class="fa fa-file-code-o fa-lg"></i>
                                            break;
                                        case MimeType.ppt:
                                        case MimeType.odp:
                                        <i class="fa fa-file-powerpoint-o fa-lg"></i>
                                            break;
                                        case MimeType.svg:
                                        <img class="docIcon" src="@Url.Content("~/Content/images/icons/docs/svg.png")" />
                                            break;
                                        case MimeType.html:
                                        <img class="docIcon" src="@Url.Content("~/Content/images/icons/docs/html.png")" />
                                            break;
                                        case MimeType.pages:
                                        <i class="fa fa-newspaper-o fa-lg"></i>
                                            break;
                                        case MimeType.mht:
                                        <i class="fa fa-file-o fa-lg"></i>
                                            break;
                                        case MimeType.mp3:
                                        <i class="fa fa-file-audio-o fa-lg"></i>
                                            break;
                                        case MimeType.wmv:
                                        <i class="fa fa-film fa-lg"></i>
                                            break;
                                        case MimeType.ps:
                                        <img class="docIcon" src="@Url.Content("~/Content/images/icons/docs/ps.png")" />
                                            break;
                                        case MimeType.wps:
                                        <img class="docIcon" src="@Url.Content("~/Content/images/icons/docs/wps.png")" />
                                            break;
                                        case MimeType.xps:
                                        <i class="fa fa-file-excel-o fa-lg"></i>
                                            break;
                                        case MimeType.vsd:
                                        <i class="fa fa-file-o fa-lg"></i>
                                            break;
                                        case MimeType.gform:
                                        <span class="fa-stack">
                                            <i class="fa fa-file-o fa-stack-2x font19 width-initial"></i>
                                            <i class="fa fa-google fa-stack-1x font11 margin-left-3 width-initial"></i>
                                        </span>
                                            break;
                                    }
                                </td>
                                <td id="rn-@doc.OwnerDocId" class="vertical-middle">
                                    <a href="@Url.Content("~/document/download/" + doc.DocumentId.ToString().Replace("-", ""))">@doc.DocumentName</a>
                                </td>
                                <td id="fn-@doc.OwnerDocId" class="vertical-middle">
                                    @if (doc.GroupId > 0)
                                    {
                                        <span>@doc.GroupName</span>
                                    }
                                    else if (doc.Folder != null)
                                    {
                                        <span>@doc.Folder.FolderName</span>
                                    }
                                </td>
                                <td class="vertical-middle">
                                    <a class="btn btn-xs btn-primary" title="Comments (@doc.CommentCount)" href="@Url.Content("~/league/document/comments/" + @doc.DocumentId.ToString().Replace("-", "") + "/" + @doc.OwnerDocId)">
                                        <i class="fa fa-comments"></i>
                                        @if (doc.CommentCount > 0)
                                        {<span class="docCount">@doc.CommentCount</span>}
                                    </a>
                                </td>
                                <td class="vertical-middle">@RDN.Utilities.Strings.StringExt.FormatKiloBytes(doc.SizeOfDocument)</td>
                                <td class="vertical-middle">@doc.UploadedHuman</td>
                            </tr>
                        }
                    </tbody>


                </table>
                @Html.HiddenFor(x => x.OwnerId)
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    $(document).ready(function () { // wait for document to load
        League.SetUpDocumentsSection();
        $('#documents').dataTable({
            "bPaginate": false,
            "bLengthChange": false,
            "bFilter": false,
            "bInfo": false,
            "bAutoWidth": false,
            "aoColumns": [null, null, null, null, null, { "sType": "natural" }, { "sType": "natural" }],
            "aaSorting": []
        });
        $('#documentUpload').MultiFile({
            list: '#fileUpload-list'
        });
    });
</script>
