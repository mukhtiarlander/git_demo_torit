@model RDN.Library.Classes.Payment.Classes.Display.DisplayInvoice
@using RDN.Portable.Classes.Payment.Enums;
@using RDN.Library.Classes.Payment.Enums;
@using RDN.Utilities.Enums;
@{
    ViewBag.Title = "Your Order";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="fixedContainer">
    <div class="fixedlinksContainter">
        <div class="backLink">
            <a href="@Url.Content("~/store/home/" + Model.Merchant.PrivateManagerId.ToString().Replace("-", "") + "/" + Model.Merchant.MerchantId.ToString().Replace("-", ""))">Store</a> > <a href="@Url.Content("~/store/orders/" + Model.Merchant.PrivateManagerId.ToString().Replace("-", "") + "/" + Model.Merchant.MerchantId.ToString().Replace("-", ""))">Orders</a>
        </div>
    </div>
    <div class="fixedCenterContainter">
        <div class="fixTitle">
            View Store Order
        </div>

        <div class="titleDescription">
            Here you can view and modify the order for the store.
      
        </div>
        <div class="divider"></div>
        <div>
            @using (Html.BeginForm("StoreOrder", "Store", FormMethod.Post, new { @id = "storeOrder" }))
            { 
                <table class="addForumPostTbl">
                    <tr>
                        <td class="b vLT2D">Created:
                        </td>
                        <td class="largeInput">
                            @Model.Created.ToString("yyyy/M/d")
                        </td>
                    </tr>
                    <tr>
                        <td class="b vLT2D">Invoice Id:
                        </td>
                        <td class="largeInput">
                            @Model.InvoiceId.ToString().Replace("-", "")
                        </td>
                    </tr>
                    <tr>
                        <td class="b vLT2D">Invoice Status:
                        </td>
                        <td id="invoiceStatus">
                            @EnumExt.ToFreindlyName(Model.InvoiceStatus)

                        </td>
                    </tr>
                    <tr>
                        <td class="b vLT2D">Change Status:
                        </td>
                        <td>
                            @if (Model.InvoiceStatus != RDN.Portable.Classes.Payment.Enums.InvoiceStatus.Archived_Item_Completed)
                            { 
                                <div>
                                    <span class="primaryLink" onclick="moveInvoiceToNextStatus(this,'@Model.InvoiceId', '@ViewData["invoiceStatus"]')">@ViewData["invoiceStatus"]</span> - <span class="i">Changing the status notifies the buyer about their purchase</span><br />
                                    <br />
                                </div>
                            }
                        </td>
                    </tr>

                    <tr>
                        <td class="b vLT2D">Payment Through:
                        </td>
                        <td class="largeInput">
                            @if (Model.PaymentProvider == RDN.Library.Classes.Payment.Enums.PaymentProvider.Paypal)
                            { 
                                <span><a href="http://paypal.com/" target="_blank">Paypal</a></span>
                            }
                            else if (Model.PaymentProvider == RDN.Library.Classes.Payment.Enums.PaymentProvider.Stripe)
                            {
                                <span><a href="http://stripe.com/" target="_blank">Stripe</a></span>
                            }
                        </td>
                    </tr>
                    <tr>
                        <td class="b vLT2D">Total Payment:
                        </td>
                        <td class="smallInput">
                            @Model.TotalIncludingTax @Model.Currency
                        </td>
                    </tr>

                    <tr>
                        <td class="b vLT2D">Shipping Costs:
                        </td>
                        <td>
                            @Model.ShippingCost @Model.Currency
                        </td>
                    </tr>
                    @*       <tr>
                        <td class="b vLT2D">RDN Fee:
                        </td>
                        <td>
                            @Model.RDNDeductedFee @Model.Currency
                        </td>
                    </tr>
                    <tr>
                        <td class="b vLT2D">Total Paid to Seller:
                        </td>
                        <td>
                            @((Model.TotalIncludingTax + Model.ShippingCost - Model.RDNDeductedFee).ToString("N2")) @Model.Currency
                        </td>
                    </tr>*@



                    <tr>
                        <td class="b vLT2D">Buyers Email:
                        </td>
                        <td>
                            @Model.InvoiceShipping.Email
                        </td>
                    </tr>
                    <tr>
                        <td class="b vLT2D">Shipping Address:
                        </td>
                        <td>
                            @Model.InvoiceShipping.FirstName @Model.InvoiceShipping.LastName<br />
                            @Model.InvoiceShipping.Street<br />
                            @if (!String.IsNullOrEmpty(Model.InvoiceShipping.Street2))
                            { 
                                <span>@Model.InvoiceShipping.Street2</span><br />
                            }
                            @Model.InvoiceShipping.State @Model.InvoiceShipping.Zip<br />
                            @Model.InvoiceShipping.Country
                        </td>
                    </tr>
                    <tr>
                        <td class="b vLT2D">Buyer Notes:
                        </td>
                        <td>
                            @Model.Note
                        </td>
                    </tr>
                    <tr>
                        <td class="b vLT2D">Items Bought:
                        </td>
                        <td>
                            <table id="orders" class="listTable">
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th>#</th>
                                        <th>Price</th>
                                        <th>Shipping</th>

                                        <th>Size</th>
                                        <th>Color</th>
                                        <th>Ref #</th>
                                        <th>Ref # 2</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.InvoiceItems)
                                    { 
                                        <tr>
                                            <td><a target="_blank" href="@RDN.Portable.Config.ServerConfig.WEBSITE_STORE_DEFAULT_LOCATION/roller-derby-item/@RDN.Utilities.Strings.StringExt.ToSearchEngineFriendly(item.Name)/@item.StoreItemId">@item.Name</a></td>
                                            <td>@item.Quantity</td>
                                            <td>@item.Price @Model.Currency</td>
                                            <td>@item.TotalShipping @Model.Currency</td>
                                            <td>@item.SizeOfItemName</td>
                                            <td>
                                                @if (item.ColorHex != null && item.ColorHex.Length > 0)
                                                { 
                                                    <div class='selectedColorCon center'>
                                                        <div class='selectedColor' style='background-color:@item.ColorHex;'>@item.ColorName</div>
                                                    </div>
                                                }

                                            </td>
                                            <td>@item.ArticleNumber</td>
                                            <td>@item.Article2Number</td>

                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </td>
                    </tr>

                    <tr>
                        <td class="b vLTD">Your Notes:
                        </td>
                        <td>
                            @Html.TextAreaFor(x => x.AdminNote)
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>

                            <input type="submit" class="primary" value="Update Order" />
                        </td>
                    </tr>
                </table>
                @Html.HiddenFor(x => x.Merchant.PrivateManagerId)
                @Html.HiddenFor(x => x.Merchant.MerchantId)
                @Html.HiddenFor(x => x.InvoiceId)
            }
        </div>
        <br />
        <br />
        <ul>
            <li><b>@EnumExt.ToFreindlyName(InvoiceStatus.Not_Started)</b> - didn't complete the order, order is sitting in users Cart.</li>
            <li><b>@EnumExt.ToFreindlyName(InvoiceStatus.Awaiting_Payment)</b> - order was sent to paypal or stripe, awaiting purchase.</li>
            <li><b>@EnumExt.ToFreindlyName(InvoiceStatus.Payment_Successful)</b> - Payment was successful, moving into shipment mode soon.</li>
            <li><b>@EnumExt.ToFreindlyName(InvoiceStatus.Awaiting_Shipping)</b> - Seller NEEDS to ship product.</li>
            <li><b>@EnumExt.ToFreindlyName(InvoiceStatus.Not_Started)</b> - didn't complete the order</li>
            <li><b>@EnumExt.ToFreindlyName(InvoiceStatus.Archived_Item_Completed)</b> - Order is complete and archived</li>
            <li><b>@EnumExt.ToFreindlyName(InvoiceStatus.Cancelled)</b> - Order is cancelled</li>
            <li><b>@EnumExt.ToFreindlyName(InvoiceStatus.Shipped)</b> - Order is shipped.</li>
        </ul>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $('#orders').dataTable({
            "aaSorting": [[0, "desc"]],
            "bPaginate": false,
            "bLengthChange": false,
            "bFilter": false,
            "bSort": true,
            "bInfo": false,
            "bAutoWidth": false
        });
    });
</script>
