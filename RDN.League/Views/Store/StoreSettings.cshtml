@model RDN.League.Models.Store.DisplayStoreModel
@{
    ViewBag.Title = "Store Settings";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<ol class="breadcrumb">
    <li><a href="@RDN.Utilities.Config.ConfigManager.InternalSite">Home</a></li>
    <li><a href="@Url.Content("~/store/home/" + Model.PrivateManagerId.ToString().Replace("-", "") + "/" + Model.MerchantId.ToString().Replace("-", ""))">Shop</a></li>
    <li class="active">Settings</li>
</ol>
<div class="col-md-10  col-xs-12">
    <h2>
        Modify Settings<small>
            Here you can modify the store settings.
        </small>
    </h2>
</div>

<div class="col-md-8 col-xs-12">
    <div class="panel panel-default">
        <div class="panel-body">
            @using (Html.BeginForm("StoreSettings", "Store", FormMethod.Post, new { @id = "storeSettings" }))
            {
                <table class="table">
                    <tr>
                        <td class="b  text-right">
                            Name Of Store:
                        </td>
                        <td class="largeInput">
                            @Html.TextBoxFor(x => x.ShopName, new {@class="form-control" })
                        </td>
                    </tr>
                    <tr>
                        <td class="b  text-right">
                            Description:
                        </td>
                        <td class="extraLargeInput">
                            @Html.TextBoxFor(x => x.Description, new { @class = "form-control" }) <small>Few words to describe the store. ex: Handmade Derby Gear, Zipping Roller Derby Leagues Store </small>
                        </td>
                    </tr>
                    @if (Model.Location == null)
                    {
                        <tr>
                            <td class="b  text-right">
                                Location:
                            </td>
                            <td class="vRTD">
                                <a href="@Url.Content("~/location/new/shop/shop/" + Model.PrivateManagerId.ToString().Replace("-", ""))">Add Location</a>
                            </td>
                        </tr>
                    }
                    else
                    {
                        <tr>
                            <td class="b  text-right">
                                Location of Shop:
                            </td>
                            <td class="vRTD">
                                @Model.Location.LocationName
                                @if (Model.Location.Contact != null)
                                {
                                    <br />
                                    if (Model.Location.Contact.Addresses.FirstOrDefault() != null)
                                    {
                                        @Model.Location.Contact.Addresses.FirstOrDefault().Address1<br />
                                        if (!String.IsNullOrEmpty(Model.Location.Contact.Addresses.FirstOrDefault().Address2))
                                        {
                                            @Model.Location.Contact.Addresses.FirstOrDefault().Address2<br />
                                        }
                                        if (!String.IsNullOrEmpty(Model.Location.Contact.Addresses.FirstOrDefault().CityRaw))
                                        {
                                            @Model.Location.Contact.Addresses.FirstOrDefault().CityRaw<span>,</span>}
                                        if (!String.IsNullOrEmpty(Model.Location.Contact.Addresses.FirstOrDefault().StateRaw))
                                        {
                                            @Model.Location.Contact.Addresses.FirstOrDefault().StateRaw
                                        }
                                        if (!String.IsNullOrEmpty(Model.Location.Contact.Addresses.FirstOrDefault().Zip))
                                        {
                                            @Model.Location.Contact.Addresses.FirstOrDefault().Zip
                                        }
                                        if (!String.IsNullOrEmpty(Model.Location.Contact.Addresses.FirstOrDefault().Country))
                                        {
                                            <br />@Model.Location.Contact.Addresses.FirstOrDefault().Country
                                        }
                                    }
                                }
                            </td>
                        </tr>
                    }
                    <tr>
                        <td class="b  text-right">
                            Notifications Email:
                        </td>
                        <td class="largeInput">
                            @Html.TextBoxFor(x => x.OrderPayedNotificationEmail, new { @class = "form-control" }) <small >Used for any store notifications.</small>
                        </td>
                    </tr>
                    <tr>
                        <td class="b  text-right">
                            Currency:
                        </td>
                        <td class="smallInput">
                            @Html.DropDownListFor(x => x.Currency, Model.CurrencyList, new { @class = "form-control" })
                        </td>
                    </tr>
                    <tr>
                        <td class="b  text-right">
                            Tax Rate Added to Item:
                        </td>
                        <td class="smallInput">
                            @Html.TextBoxFor(x => x.TaxRate, new { @class = "form-control" }) <small>
    Taxes in percentage required for order.
    exp .06
</small>
                        </td>
                    </tr>
                    @if (!Model.AcceptPaymentsViaStripe)
                    {
                        <tr>
                            <td class="b  text-right">
                                Accept Credit Card Payments:
                            </td>
                            <td>
                                <a href="@ViewBag.StripeUrl">
                                    <img width="150px" src="@Url.Content("~/Content/images/stripe.png")" />
                                </a>
                                <small>Our Payment Processor, They will collect the money as well as pay you.</small>
                            </td>
                        </tr>
                    }
                    else
                    {
                        <tr>
                            <td class="b  text-right">
                                <a href="https://stripe.com/" target="_blank">Stripe</a> Connected:
                            </td>
                            <td>
                                <img src="@Url.Content("~/Content/images/greenCheck.png")" />
                                <small>Your <a href="https://stripe.com/" target="_blank">Stripe</a> Account is Connected.</small>
                            </td>
                        </tr>
                    }
                    <tr>
                        <td class="b  text-right">
                            Accept <span class="paypalText">Paypal</span> Payments:
                        </td>
                        <td>
                            @Html.CheckBoxFor(x => x.AcceptPaymentsViaPaypal)
                            <small>Collect Payments Via Paypal</small>
                        </td>
                    </tr>
                    <tr>
                        <td class="b  text-right">
                            Your <span class="paypalText">Paypal</span> Email Address:
                        </td>
                        <td class="largeInput">
                            @Html.TextBoxFor(x => x.PayPalEmailAddressForPayments, new { @class = "form-control" })
                            <small>Email Address To Send Payments To</small>
                        </td>
                    </tr>

                    <tr>
                        <td class="b  text-right">
                            Publish Store?:
                        </td>
                        <td class="form-group alert alert-info">
                            @if (Model.AcceptPaymentsViaStripe || (Model.AcceptPaymentsViaPaypal && !String.IsNullOrEmpty(Model.PayPalEmailAddressForPayments)))
                            {
                                <label>
                                    @Html.CheckBoxFor(x => x.IsPublished) 
                                    - <span class="b">PUBLISH</span> the store online.
                                    store.
                            </label>
                            }
                            else
                            {
                                <span class="b">Store cannot be published until <span class="paypalText">Paypal</span> Or Stripe Have been Setup.</span>
                            }
                        </td>
                    </tr>
                    <tr>
                        <td class="b  text-right">
                            Message:
                        </td>
                        <td>
                            @Html.TextAreaFor(x => x.WelcomeMessage, new { @class = "form-control", @rows="5" })<br />
                            <small>Shown to users who visit your shop</small>
                        </td>
                    </tr>

                    <tr>
                        <td></td>
                        <td>
                            @if (ViewBag.IsSuccessful)
                            {
                                <span class="addedSuccessfully">Updated Successfully!</span>
                            }
                            <input type="submit" class="btn btn-primary" value="Update Settings" />
                        </td>
                    </tr>
                </table>
                @Html.HiddenFor(x => x.PrivateManagerId)
                @Html.HiddenFor(x => x.MerchantId)
                @Html.HiddenFor(x => x.InternalReference)
            }
        </div>
    </div>
</div>
<script type="text/javascript">
    $("#TaxRate").numeric({ negative: false });

    $("#storeSettings").validate({
        rules: {
            ShopName: "required",
            TaxRate: "required",
            OrderPayedNotificationEmail: {
                required: true,
                email: true
            }
        }
    });
</script>
