@model RDN.League.Models.Store.DisplayStoreModel
@{
    ViewBag.Title = "Store Settings";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="fixedContainer">
    <div class="fixedlinksContainter">
        <div class="backLink">
            < <a href="@Url.Content("~/store/home/" + Model.PrivateManagerId.ToString().Replace("-", "") + "/" + Model.MerchantId.ToString().Replace("-", ""))">Store</a>
        </div>
    </div>
    <div class="fixedCenterContainter">
        <div class="fixTitle">
            Modify Store Settings
        </div>
      
         <div class="titleDescription">
     Here you can modify the store settings.
       
            </div>
            <div class="divider"></div>
        <div>
            @using (Html.BeginForm("StoreSettings", "Store", FormMethod.Post, new { @id = "storeSettings" }))
            { 
                <table class="addForumPostTbl">
                    <tr>
                        <td class="b vLTD">Name Of Store:
                        </td>
                        <td class="largeInput">
                            @Html.TextBoxFor(x => x.ShopName)
                        </td>
                    </tr>
                    <tr>
                        <td class="b vLTD">Description of Shop:
                        </td>
                        <td class="extraLargeInput">
                            @Html.TextBoxFor(x => x.Description) <span class="i">Few words to describe the store. ex: Handmade Derby Gear, Zipping Roller Derby Leagues Store </span>
                        </td>
                    </tr>
                    @if (Model.Location == null)
                    { 
                        <tr>
                            <td class="b vLTD">Location of Shop:
                            </td>
                            <td class="vRTD">
                                <a href="@Url.Content("~/location/new/shop/shop/" + Model.PrivateManagerId.ToString().Replace("-", ""))">Add Location</a>
                            </td>
                        </tr>
                    }
                    else
                    { 
                        <tr>
                            <td class="b vLTD">Location of Shop:
                            </td>
                            <td class="vRTD">
                                @Model.Location.LocationName
                                @if (Model.Location.Contact != null)
                                {
                                    <br />
                                    if (Model.Location.Contact.Addresses.FirstOrDefault() != null)
                                    { 
                                    @Model.Location.Contact.Addresses.FirstOrDefault().Address1<br />
                                        if (!String.IsNullOrEmpty(Model.Location.Contact.Addresses.FirstOrDefault().Address2))
                                        { 
                                    @Model.Location.Contact.Addresses.FirstOrDefault().Address2<br />
                                        }
                                        if (!String.IsNullOrEmpty(Model.Location.Contact.Addresses.FirstOrDefault().CityRaw))
                                        { 
                                    @Model.Location.Contact.Addresses.FirstOrDefault().CityRaw<span>,</span>}
                                        if (!String.IsNullOrEmpty(Model.Location.Contact.Addresses.FirstOrDefault().StateRaw))
                                        { 
                                    @Model.Location.Contact.Addresses.FirstOrDefault().StateRaw 
                                        }
                                        if (!String.IsNullOrEmpty(Model.Location.Contact.Addresses.FirstOrDefault().Zip))
                                        { 
                                    @Model.Location.Contact.Addresses.FirstOrDefault().Zip
                                        }
                                        if (!String.IsNullOrEmpty(Model.Location.Contact.Addresses.FirstOrDefault().Country))
                                        { 
                                    <br />@Model.Location.Contact.Addresses.FirstOrDefault().Country
                                        }
                                    }
                                }
                            </td>
                        </tr>
                    }
                    <tr>
                        <td class="b vLTD">Notifications Email:
                        </td>
                        <td class="largeInput">
                            @Html.TextBoxFor(x => x.OrderPayedNotificationEmail) <span class="i">Used for any store notifications.</span>
                        </td>
                    </tr>
                    <tr>
                        <td class="b vLTD">Currency for Shop:
                        </td>
                        <td class="smallInput">
                            @Html.DropDownListFor(x => x.Currency, Model.CurrencyList) 
                        </td>
                    </tr>
                    <tr>
                        <td class="b vLTD">Tax Rate Added to Item:
                        </td>
                        <td class="smallInput">
                            @Html.TextBoxFor(x => x.TaxRate) <span class="i">Taxes in percentage required for order.
                                exp .06</span>
                        </td>
                    </tr>
                    @if (!Model.AcceptPaymentsViaStripe)
                    { 
                        <tr>
                            <td class="b vLTD">Accept Credit Card Payments:
                            </td>
                            <td>
                                <a href="@ViewBag.StripeUrl">
                                    <img width="150px" src="@Url.Content("~/Content/images/stripe.png")" /></a>
                                <span class="i">Our Payment Processor, They will collect the money as well as pay you.</span>
                            </td>
                        </tr>
                    }
                    else
                    { 
                        <tr>
                            <td class="b vLTD"><a href="https://stripe.com/" target="_blank">Stripe</a> Connected:
                            </td>
                            <td>
                                <img src="@Url.Content("~/Content/images/greenCheck.png")" />
                                <span class="i">Your <a href="https://stripe.com/" target="_blank">Stripe</a> Account is Connected.</span>
                            </td>
                        </tr>
                    }
                    <tr>
                        <td class="b vLTD">Accept <span class="paypalText">Paypal</span> Payments:
                        </td>
                        <td>
                            @Html.CheckBoxFor(x => x.AcceptPaymentsViaPaypal)
                            <span class="i">Collect Payments Via Paypal</span>
                        </td>
                    </tr>
                    <tr>
                        <td class="b vLTD">Your <span class="paypalText">Paypal</span> Email Address:
                        </td>
                        <td class="largeInput">
                            @Html.TextBoxFor(x => x.PayPalEmailAddressForPayments)
                            <span class="i">Email Address To Send Payments To</span>
                        </td>
                    </tr>

                    <tr>
                        <td class="b vLTD">Publish Store?:
                        </td>
                        <td>
                            @if (Model.AcceptPaymentsViaStripe || (Model.AcceptPaymentsViaPaypal && !String.IsNullOrEmpty(Model.PayPalEmailAddressForPayments)))
                            { 
                                @Html.CheckBoxFor(x => x.IsPublished) <span>- <span class="b">PUBLISH</span> the store online at the RDNation.com
                            store.</span>
                            }
                            else
                            { 
                                <span class="b">Store cannot be published until <span class="paypalText">Paypal</span> Or Stripe Have been Setup.</span>
                            }
                        </td>
                    </tr>
                    <tr>
                        <td class="b vLTD">Shop Message:
                        </td>
                        <td>
                            @Html.TextAreaFor(x => x.WelcomeMessage, new { @class = "textAreaSmall" })<br />
                            <span class="i">Shown to users who visit your shop</span>
                        </td>
                    </tr>

                    <tr>
                        <td></td>
                        <td>
                            @if (ViewBag.IsSuccessful)
                            { 
                                <span class="addedSuccessfully">Updated Successfully!</span>
                            }
                            <input type="submit" class="primary" value="Update Settings" />
                        </td>
                    </tr>
                </table>
                @Html.HiddenFor(x => x.PrivateManagerId)
                @Html.HiddenFor(x => x.MerchantId)
                @Html.HiddenFor(x => x.InternalReference)
            }
        </div>
    </div>
</div>
<script type="text/javascript">
    $("#TaxRate").numeric({ negative: false });

    $("#storeSettings").validate({
        rules: {
            ShopName: "required",
            TaxRate: "required",
            OrderPayedNotificationEmail: {
                required: true,
                email: true
            }
        }
    });
</script>
