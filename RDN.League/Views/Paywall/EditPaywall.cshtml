@model RDN.Library.Classes.Payment.Paywall.Paywall
@{
    ViewBag.Title = "Edit Paywall";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<ol class="breadcrumb">
    <li><a href="@RDN.Library.Classes.Config.LibraryConfig.InternalSite">Home</a></li>
    <li><a href="@Url.Content("~/paywall/all/")">Paywalls</a></li>
    <li class="active">Edit Paywall</li>
</ol>


<div class="row">
    <div class="col-xs-12 col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2">
        <div class="panel panel-default">
            <div class="panel-heading">
                <div class="row">
                    <div class="col-xs-6">
                        <h3 class="margin-top-5"><i class="fa fa-pencil"></i> Edit Paywall</h3>
                    </div>
                    <div class="col-xs-6 text-right">
                        <a class="btn btn-default btn-sm margin-top-5" href="@RDN.Library.Classes.Config.LibraryConfig.WikiSite/Paywalls" target="_blank"><i class="fa fa-question-circle"></i> Help</a>
                    </div>
                </div>
                <span class="text-muted">Here you can edit a paywall for locking parts of @RDN.Library.Classes.Config.LibraryConfig.WebsiteShortName down to your customers only.</span>
            </div>
             @using (Html.BeginForm("EditPaywall", "Paywall", FormMethod.Post, new { @id = "createNewItem" }))
            { 
                <div class="panel-body">
                    <div class="row">
                        <div class="col-xs-12">
                            <label class="form-label">Description of Wall</label>
                            <div class="margin-bottom-15">
                                @Html.TextBoxFor(x => x.DescriptionOfPaywall, new { @class = "form-control margin-bottom-5" })
                                <span class="i text-muted">This description will be shown to customers before they pay.</span>
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6">
                            <label class="form-label">Start Date</label>
                            <div class="margin-bottom-15">
                                @Html.TextBoxFor(x => x.StartDate, new { @class = "form-control margin-bottom-5" })
                                <span class="i text-muted">optional: Start Date of when the paywall gets put into effect.</span>
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6">
                            <label class="form-label">End Date</label>
                            <div class="margin-bottom-15">
                                @Html.TextBoxFor(x => x.EndDate, new { @class = "form-control margin-bottom-5" })
                                <span class="i text-muted">optional: End Date of when the paywall is turned off and the item is free.</span>
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6">
                            <label class="form-label">Daily Price</label>
                            <div class="margin-bottom-15">
                                @Html.TextBox("Price", Model.DailyPrice.ToString("N2"), new { @class = "form-control margin-bottom-5" })
                                <span class="i text-muted">If paywall is bought for just 1 day. Used for discounted day passes.</span>
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6">
                            <label class="form-label">Full Price</label>
                            <div class="margin-bottom-15">
                                @Html.TextBox("FullPrice", Model.TimespanPrice.ToString("N2"), new { @class = "form-control margin-bottom-5" })
                                <span class="i text-muted">Price of paywall if a "start date" and "end date" are completed.</span>
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6">
                            <label class="form-label">Is Enabled?</label>
                            <div class="margin-bottom-15">
                                @Html.CheckBoxFor(x => x.IsEnabled)
                                <span class="i text-muted">Enable the paywall. Disabled paywalls will force free content.</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel-footer">
                    <button class="btn btn-success btn-sm" type="submit"><i class="fa fa-save"></i> Update Paywall</button>
                </div>
                 @Html.HiddenFor(x => x.PaywallId)
            }
        </div>
    </div>
</div>

<script type="text/javascript">
    var d = new Date();
    var curr_date = d.getDate();

    var curr_month = d.getMonth() + 1; //Months are zero based
    if (curr_month < 10) {
        curr_month = "0" + curr_month;
    }
    var curr_year = d.getFullYear();

    var startDate = d;
    var endDate = d;

    $("#Price").numeric({ negative: false });
    $("#FullPrice").numeric({ negative: false });
    //$('#EndDate').val(curr_month + "/" + curr_date + "/" + curr_year);
    //$('#StartDate').val(curr_month + "/" + curr_date + "/" + curr_year);
    $('#EndDateDisplay').datepicker({
        onSelect: function (value, date) {
            endDate = new Date(value);
            if (endDate < startDate) {
                $('#StartDateDisplay').val($('#EndDateDisplay').val());
                startDate = endDate;
            }
        }
    });
    $('#StartDateDisplay').datepicker({
        onSelect: function (value, date) {
            startDate = new Date(value);
            if (endDate < startDate) {
                $('#EndDateDisplay').val($('#StartDateDisplay').val());
                endDate = startDate;
            }
        }
    });


    $("#createNewItem").validate({
        rules: {
            DescriptionOfPaywall: "required",
            FullPrice: "required",
            StartDate: { lessThanEqual: "#EndDateDisplay" },
            EndDate: { greaterThanEqual: "#StartDateDisplay" },
            DailyPrice: {
                required: true
            }
        }
    });


</script>
