@model List<RDN.Portable.Classes.Games.Officiating.RequestDA>
@{
    ViewBag.Title = "Requests";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var memId = RDN.Library.Classes.Account.User.GetMemberId();
}
@helper Truncate(string input, int length = 30)
{
    if (input != null)
    {
        if (input.Length <= length)
        {
    @input
        }
        else
        {
    @input.Substring(0, length)<text>...</text>
        }
    }
    else
    {
    <text></text>
    }
}

<div class="expandableContainer">
    <div class="expandableCenterContainter">
        <div class="fixTitle">
            All Officiating Requests
        </div>
        <div class="expandableCenterContainterRight">

            <div class="navIcons">
                <a title="New Request" href="@Url.Content("~/officiating/addrequest")">
                    <img src="@Url.Content("~/Content/images/icons/Whistle.png")" />Add
                </a>
            </div>

        </div>
        <div class="titleDescription">
            Add and view officiating requests made from all over the world.  If you're an official, this is the place to check out for more games to officiate.  This should also help alleviate the big need for officials.

        </div>
        <div class="divider"></div>
        <div>
            <table class="listTable tableExtras" id="itemList">
                <thead>
                    <tr>
                        <th></th>
                        <th>Teams Playing</th>
                        <th>Location</th>
                        
                        <th>Date</th>
                        <th>First Whistle</th>
                        <th>Rule Set</th>
                        <th>Refs / NSOs Needed</th>
                        <th>Reimbursement</th>
                        <th>Regulation</th>
                        <th>Evaluation</th>
                        <th>Snacks</th>

                    </tr>
                </thead>
                <tbody>

                    @foreach (var b in Model)
                    {                 
                        <tr class="@(b.RequestId % 2 == 0 ? "tr1" : "tr0")">
                            <td>

                                @if (memId == b.RequestCreator)
                                {
                                    <a href="@Url.Content("~/officiating/editrequest/" + b.RequestId + "/" + b.RequestCreator.ToString().Replace("-", ""))" >Edit </a><span>/ 
                                    </span><a href="@Url.Content("~/officiating/viewrequest/" + b.RequestId + "/" + b.RequestCreator.ToString().Replace("-", ""))" >View </a>
                                }
                                else
                                {
                            
                                    <a href="@Url.Content("~/officiating/viewrequest/" + b.RequestId + "/" + b.RequestCreator.ToString().Replace("-", ""))" >View </a>
                                }
                            </td>

                            <td>
                                @Truncate(b.TeamsPlaying, 23)
                            </td>
                            <td>
                                @Truncate(b.LocationName, 10) -

                                @if (!String.IsNullOrEmpty(b.City))
                                { 
                                    @b.City<span>,</span>
                                }
                                @if (!String.IsNullOrEmpty(b.State))
                                { 
                                    @b.State<span> </span>
                                }


                            </td>
                            <td>
                                @b.Date.Value.ToShortDateString()
                            </td>
                            <td>
                                @Truncate(b.FirstWhistle, 10)
                            </td>
                            <td>
                                @RDN.Utilities.Enums.EnumExt.ToFreindlyName((RDN.Portable.Classes.Federation.Enums.RuleSetsUsedEnum)b.RuleSetId)
                            </td>
                            <td>
                                @b.NoRefNeded / @b.NonsoNeded
                            </td>
                            <td>
                                <label>@Html.CheckBox("IsReimbursed", b.IsReimbursement, new { @disabled = "disabled" })</label>

                            </td>
                            <td>
                                <label>@Html.CheckBox("IsRegulation", b.IsRegulation, new { @disabled = "disabled" })</label>

                            </td>
                            <td>
                                <label>@Html.CheckBox("EvaluationsProvided", b.EvaluationsProvided, new { @disabled = "disabled" })</label>
                            </td>

                            <td>
                                <label>@Html.CheckBox("IsSnacksProvided", b.IsSnacksProvided, new { @disabled = "disabled" })</label>

                            </td>


                        </tr>     
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
