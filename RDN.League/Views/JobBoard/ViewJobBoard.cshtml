@model List<RDN.Library.Classes.League.JobBoard>
@{
    ViewBag.Title = "Job Board";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var memId = RDN.Library.Classes.Account.User.GetMemberId();
    Guid leagueId = RDN.Library.Cache.MemberCache.GetLeagueIdOfMember(memId);
    bool isSec = RDN.Library.Cache.MemberCache.IsSecretaryOrBetterOfLeague(memId);
    
}
@helper Truncate(string input, int length = 30)
{
    if (input != null)
    {
        if (input.Length <= length)
        {
    @input
        }
        else
        {
    @input.Substring(0, length)<text>...</text>
        }
    }
    else
    {
    <text><i></i></text>
    }
}
<ol class="breadcrumb">
    <li><a href="@RDN.Library.Classes.Config.LibraryConfig.InternalSite">Home</a></li>
    <li class="active">Job Board</li>
</ol>

<div class="panel panel-default margin-top-20">
    <div class="panel-heading">
        <div class="row">
            <div class="col-xs-7 col-md-9">
                <h3 style="margin-top:5px !important"><i class="fa fa-suitcase"></i> Jobs For The League</h3>
            </div>
            <div class="col-xs-5 col-md-3 text-right">
                @if (isSec)
                {
                    <a class="btn btn-success pull-right" href="@Url.Content("~/league/job/add")">
                        <i class="fa fa-plus-circle"></i> Add
                    </a>
                }
            </div>
        </div>
        <div class="text-muted">Here you can setup jobs for your @RDN.Library.Classes.Config.LibraryConfig.TeamName.ToLower() and have members review and apply.</div>
    </div>
    <div class="panel-body no-padding padding-top-10 ">
        <table class="table table-striped table-hover table-condensed no-margin-bottom" id="jobBoard">
            <thead>
                <tr>
                    <th>
                        Job Title
                    </th>
                    <th>
                        Completes On
                    </th>
                    <th>
                        Hrs a Week
                    </th>
                    <th>Job Desc</th>
                    <th>
                        Reports To
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>

                @foreach (var b in Model)
                {
                    <tr>
                        <td>
                            @b.JobTitle
                        </td>

                        <td>
                            @if (b.JobEnds > new DateTime())
                            {
                                @b.JobEnds.ToShortDateString() <br />

                                if (b.DaysRemaining == 0)
                                { <text>(Today)</text>  }
                                else if (b.DaysRemaining == 1)
                                {<text>(Tomorrow)</text>}
                                else if (b.DaysRemaining > 1)
                                {  <text> (@b.DaysRemaining Days left) </text> }

                            }
                        </td>
                        <td>
                            @b.HoursPerWeek
                        </td>
                        <td>
                            @Truncate(b.JobDesc)
                        </td>
                        <td>
                            @b.ReportsTo
                        </td>
                        <td>
                            @if (memId == b.JobCreator || isSec)
                            {
                                <a class="btn btn-warning btn-xs" href="@Url.Content("~/league/Job/view/" + b.JobId + "/" + b.LeagueId.ToString().Replace("-", ""))"><i class="fa fa-eye"></i> View </a>
                                <a class="btn btn-info btn-xs" href="@Url.Content("~/league/Job/edit/" + b.JobId + "/" + b.LeagueId.ToString().Replace("-", ""))"><i class="fa fa-pencil"></i> Edit </a>
                            }
                            else
                            {
                                <a class="btn btn-warning btn-xs" href="@Url.Content("~/league/Job/view/" + b.JobId + "/" + b.LeagueId.ToString().Replace("-", ""))"><i class="fa fa-eye"></i> View </a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
