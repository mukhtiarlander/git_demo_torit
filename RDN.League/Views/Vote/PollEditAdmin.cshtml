@model RDN.Portable.Classes.Voting.VotingClass
@{
    ViewBag.Title = "Edit Poll";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int i = 0;
}
<ol class="breadcrumb">
    <li><a href="@RDN.Utilities.Config.ConfigManager.InternalSite">Home</a></li>
    <li><a href="@Url.Content("~/poll/" + @Model.LeagueId)">Polls</a></li>
    <li class="active">Edit Poll</li>
</ol>

<div class="row">
    <div class="col-xs-10 col-xs-offset-1" style="position:initial">
        <div class="panel panel-default">
            <div class="panel-heading">
                <div class="row">
                    <div class="col-xs-12 col-sm-6">
                        <h3 style="margin-top:5px !important"><i class="fa fa-bullhorn"></i> @Model.Title</h3>
                    </div>
                    <div class="col-xs-12 col-sm-6 text-right">
                        <a class="btn btn-primary btn-sm" title="Vote" href="@Url.Content("~/poll/votev2/" + Model.LeagueId + "/" + Model.VotingId)">
                            <i class="fa fa-thumbs-o-up"></i> Vote
                        </a>
                        @using (Html.BeginForm("DeletePoll", "Vote", FormMethod.Post, new { @id = "createNewEventForm", @class = "inline-block" }))
                        {
                            <button class="btn btn-danger btn-sm" title="Delete Poll" onclick="return confirm('Really Delete Poll?')"><i class='fa fa-trash'></i> Delete</button>
                            @Html.HiddenFor(x => x.VotingId)
                            @Html.HiddenFor(x => x.LeagueId)
                        }
                        @if (!Model.IsClosed)
                        {
                            using (Html.BeginForm("ClosePoll", "Vote", FormMethod.Post, new { @id = "createNewEventForm", @class = "inline-block" }))
                            {
                                <button class="btn btn-warning btn-sm" title="Close Poll" onclick="return confirm('Really Close Poll?')"><i class='fa fa-times'></i> Close</button>
                                @Html.HiddenFor(x => x.VotingId)
                                @Html.HiddenFor(x => x.LeagueId)
                            }
                        }
                        else
                        {
                            using (Html.BeginForm("OpenPoll", "Vote", FormMethod.Post, new { @id = "createNewEventForm", @class = "inline-block" }))
                            {
                                <button class="btn btn-warning btn-sm" title="Open Poll" onclick="return confirm('Really Open Poll?')"><i class='fa fa-folder'></i> Open</button>
                                @Html.HiddenFor(x => x.VotingId)
                                @Html.HiddenFor(x => x.LeagueId)
                            }
                        }
                    </div>
                </div>
                <div class="text-muted"> Edit the Poll details.</div>
            </div>
            @using (Html.BeginForm("UpdatePollV2", "Vote", FormMethod.Post, new { @id = "createNewEventForm" }))
            {
                <div class="panel-body no-padding-top">
                    <div class="col-xs-12">
                        <label class="form-label margin-top-10">Title</label>
                        <div>
                            @Html.TextBoxFor(x => x.Title, new { @type = "text", @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-xs-12">
                        <label class="form-label margin-top-10">Description <small class="text-muted"><i>Explain what the vote is on or about.</i></small></label>
                        <div>
                            @Html.TextArea("Description",  new
                                {
                                    id = "wmd-input",
                                    @Value = Model.Description != null ? Model.Description.ToString() : "",
                                    @class = "form-control"
                                })
                        </div>
                    </div>
                    <div class="col-xs-12 margin-top-10">
                        <div>
                            <label>@Html.CheckBoxFor(x => x.IsOpenToLeague) Open Results </label>
                            <span class="text-muted"><i>Results can be seen by league.</i></span>
                        </div>
                    </div>

                    <div class="col-xs-12" style="position:initial">
                        @if (Model.IsPollAnonymous)
                        {
                        <label class="form-label margin-top-10">Anonymous Questions & Answers</label> }
                        else
                        {
                        <label class="form-label margin-top-10">Questions & Answers</label> }

                        <div id="pollQuestions">
                            @foreach (var question in Model.Questions.OrderBy(x => x.SortableOrderId))
                            {
                            <div id="updateQuestionTd-@question.QuestionId">
                                <div class="panel panel-default">
                                    <div class="panel-heading no-padding padding-5">
                                        <div class="row">
                                            <div id='lblDivQuestionId-@question.QuestionId' class="col-xs-12 col-sm-10 padding-top-5">
                                                <span id='lblQuestionId-@question.QuestionId' class="font16">
                                                    <i class="fa fa-question-circle"></i> @question.Question
                                                </span>
                                                @if (question.QuestionType == RDN.Portable.Classes.Voting.Enums.QuestionTypeEnum.Multiple)
                                                    {
                                                    <small class='text-muted'> - multiple choice</small> }
                                            </div>
                                            <div id='updateQuestionId-@question.QuestionId' class="col-xs-12 col-sm-9 display-none">
                                                <input id='textQuestionId-@question.QuestionId' class="form-control input-sm" type='text' value='@question.Question' />
                                            </div>
                                            <div id='updateBtnQuestionId-@question.QuestionId' class="col-xs-12 col-sm-3 text-left display-none">
                                                <button class='btn btn-sm btn-success' type="button" onclick="UpdateEditQuestionInPoll('@question.QuestionId')">Update</button>
                                                <button class='btn btn-sm btn-default' type="button" onclick="CancelEditQuestionInPoll('@question.QuestionId')">Cancel</button>
                                            </div>
                                            <div id='editQuestionId-@question.QuestionId' class="col-xs-12 col-sm-2 text-right">
                                                <button class="btn btn-sm btn-default" type="button" onclick="EditQuestionInPoll('@question.Question', '@question.QuestionId')"><i class="fa fa-pencil"></i></button>
                                                <span class="btn btn-sm btn-default sortableHandle" title="Sort Question/Drag and Drop"><i class="fa fa-arrows"></i></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="panel-body no-padding-top no-padding-bottom">
                                        <div id="newAnswerForQuestionTd-@question.QuestionId">
                                            @foreach (var answer in question.Answers.OrderBy(x => x.AnswerId))
                                                {
                                                <div class="row padding-bottom-10" style="border-bottom:1px solid #eee">
                                                    <div class="col-xs-12 col-sm-3 col-md-2 margin-top-10">
                                                        @if (question.Votes.Where(x => x.AnswerIds.Contains(answer.AnswerId)).Count() > 0)
                                                            {
                                                                <label class="label label-primary">
                                                                    <b> @question.Votes.Where(x => x.AnswerIds.Contains(answer.AnswerId)).Count() vote(s) @question.GetPercentage(answer.AnswerId)%</b>
                                                                </label>
                                                            }
                                                            else
                                                            {
                                                                <label class="label label-default">
                                                                    @question.Votes.Where(x => x.AnswerIds.Contains(answer.AnswerId)).Count() vote(s) @question.GetPercentage(answer.AnswerId)%
                                                                </label>
                                                            }
                                                    </div>
                                                    <div id="labelAnswerTd-@answer.AnswerId" class="col-xs-12 col-sm-6 col-md-8 margin-top-10">
                                                        <b>@answer.Answer</b>
                                                    </div>
                                                    <div id="updateAnswerTd-@answer.AnswerId" class="col-xs-12 col-sm-6 col-md-8 margin-top-10 display-none">
                                                        <input type='text' class='form-control input-sm' id='textAnswerId-@answer.AnswerId' value='@answer.Answer' />
                                                    </div>
                                                    <div id="btnUpdateAnswerTd-@answer.AnswerId" class="text-right col-xs-12 col-sm-3 col-md-2 margin-top-10 padding-top-5 display-none">
                                                        <button class="btn btn-success btn-sm" type="button" onclick="UpdateEditAnswerInPoll('@answer.AnswerId')"><i class="fa fa-save"></i></button>
                                                        <button class="btn btn-default btn-sm" type="button" onclick="CancelEditAnswerInPoll('@answer.AnswerId')"><i class="fa fa-times"></i></button>
                                                    </div>
                                                    <div id="btnEditAnswerTd-@answer.AnswerId" class="text-right col-xs-12 col-sm-3 col-md-2 margin-top-10">
                                                        @if (!answer.WasRemoved)
                                                            {
                                                            <button class="btn btn-sm btn-success" type="button" onclick="EditAnswerInPoll('@answer.Answer', '@answer.AnswerId')"><i class="fa fa-pencil"></i></button>
                                                            <button class="btn btn-sm btn-danger" type="button" onclick="RemoveAnswerInPoll('@answer.AnswerId')"><i class="fa fa-trash"></i></button>
                                                            }
                                                            else
                                                            {
                                                            <span>Answer Was Removed From Poll</span>
                                                            }
                                                    </div>
                                                    <div class="col-xs-12">
                                                        @if (!Model.IsPollAnonymous)
                                                            {
                                                                if (question.Votes.Where(x => x.AnswerIds.Contains(answer.AnswerId)).Count() > 0)
                                                                {
                                                                    <div id="votes-@answer.AnswerId" class="row panel panel-default margin-top-10 no-margin-bottom no-margin-left no-margin-right padding-5 mh150 scroll">
                                                                        @foreach (var vote in question.Votes.Where(x => x.AnswerIds.Contains(answer.AnswerId)).OrderBy(x => x.DerbyName))
                                                                        {
                                                                            <a target="_blank" class="" href="@Url.Content("~/Member/" + vote.MemberId.ToString().Replace("-", "") + "/" + RDN.Utilities.Strings.StringExt.ToSearchEngineFriendly(vote.DerbyName))">@vote.DerbyName</a>
                                                                            <span>- @vote.OtherText</span>
                                                                        }
                                                                    </div>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                foreach (var vote in question.Votes.Where(x => x.AnswerIds.Contains(answer.AnswerId)).OrderBy(x => x.DerbyName))
                                                                {
                                                                    @vote.OtherText
                                                                }
                                                            }
                                                    </div>
                                                </div>

                                                @*<tr class="@(i % 2 == 0 ? "oddP" : "evenP")">
                                                        <td colspan="3">
                                                            <div style="width: @question.GetBarLength(answer.AnswerId, 720)px" style="background-color:silver">
                                                                &nbsp;
                                                            </div>
                                                        </td>

                                                    </tr>*@
                                                            { i += 1; }
                                                }
                                        </div>
                                    </div>
                                    <div class="panel-footer" style="background-color:#fbfbfb">
                                        <div class="row">
                                            <div class="col-xs-12 col-sm-2 text-right padding-top-5">Add Answer</div>
                                            <div class="col-xs-12 col-sm-8">
                                                <input class="form-control input-sm" type="text" id="newAnswerForQuestionInput-@question.QuestionId" />
                                            </div>
                                            <div class="col-xs-12 col-sm-2">
                                                <button class="btn btn-sm btn-default" type="button" onclick="AddNewAnswerToQuestionPoll('@question.QuestionId')"><i class="fa fa-plus-circle"></i> Add</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            }
                        </div>

                    </div>

                    <div class="col-xs-12">
                        <div class="row">
                            <label class="form-label col-xs-6">
                                Didn't Vote
                            </label>
                            <div class="col-xs-6 text-right">
                                <button class="btn btn-warning btn-xs" type="button" onclick="SendEmailPollNotification('@Model.LeagueId','@Model.VotingId')"><i class="fa fa-envelope"></i> Re-Send Email Notifications</button>
                                <button class="btn btn-primary btn-xs" type="button" onclick="Polls.ShowEditPollMembersPopup()"><i class="fa fa-plus-circle"></i> Add More Members</button>
                            </div>
                        </div>
                        <div>
                            <div  class="row panel panel-default no-margin">
                                <div class="panel-body padding-10 padding-bottom-5">
                                    @foreach (var mem in Model.Voters.Where(w => w.DidVote == true).OrderBy(x => x.DerbyName))
                                    {
                                        <span class="label font12 margin-right-5 margin-bottom-5 pull-left padding-5" style="background-color:#eee">
                                            <a target="_blank" href="@Url.Content("~/Member/" + mem.MemberId.ToString().Replace("-", "") + "/" + RDN.Utilities.Strings.StringExt.ToSearchEngineFriendly(mem.DerbyName))">@mem.DerbyName</a>
                                        </span>
                                    }
                                </div>
                                <div id="EditPollSelectedMembersDiv" class="panel-footer pull-left full-width display-none">

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel-footer">
                    <button type="submit" class="btn btn-default btn-success"><i class="fa fa-save"></i> Update Poll</button>
                    <a class="btn btn-default pull-right" href="@Url.Content("~/poll/" + Model.LeagueId)">Cancel</a>
                </div>
                @Html.HiddenFor(x => x.LeagueId)
                @Html.HiddenFor(x => x.VotingId)
                @Html.HiddenFor(x => x.ToMemberIds)
            }
        </div>
    </div>
</div>
<div class="modal fade" id="EditPollMembersPopup" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title"><i class="fa fa-check-square-o"></i> Choose League Members</h4>
            </div>
            <div class="modal-body padding-10">
                <div class="text-right">
                    <label>
                        <input type="checkbox" onchange="javascript:toggleCheckedForRecipients(this)" id="checkAll" />
                        <b>
                            Select All
                        </b>
                    </label>
                </div>
                <div id="checkboxes" class="row panel panel-default no-margin scroll mh500">
                    @foreach (var mem in Model.Voters.Where(w => w.DidVote == false))
                    {
                        <div class="col-xs-12 col-sm-6">
                            <label>@Html.CheckBox(mem.MemberId.ToString(), new { @derbyname = mem.DerbyName, @onchange = "ChangeDictionaryItem(this, '" + mem.MemberId + "','" + RDN.Utilities.Strings.StringExt.ToJavascriptFriendly(mem.DerbyName) + "')" })&nbsp;&nbsp;<span id="@mem.MemberId.ToString()-name">@mem.DerbyName</span></label>
                        </div>
                    }
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" onclick="Polls.EditPollChooseMembersDone()" class="btn btn-primary btn-sm"><i class="fa fa-check"></i> Done</button>
                <button type="button" data-dismiss="modal" class="btn btn-default btn-sm">Cancel</button>
            </div>
        </div>
    </div>
</div>





<script type="text/javascript">
    $(document).ready(function () {
        Polls.Initialize('@Model.VotingId');
    });
    $("#PollsAdd").validate({
        rules: {
            AnswerType: "required"
        }
    });
    $("#pollQuestions").sortable({
        handle: '.sortableHandle',
        update: function (event, ui) {
            var idsInOrder = JSON.stringify($("#pollQuestions").sortable("toArray"));
            Polls.SaveResortedPoll(idsInOrder);
        }
    }).disableSelection();
    $(function () {
        tinymce.init({
            mode: "textareas",
            elements: "wmd-input",
            theme_advanced_buttons1: "bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,|,bullist,numlist,|,outdent,indent,blockquote,|,formatselect,fontsizeselect",
            theme_advanced_buttons2: "link,unlink,anchor,image,cleanup,code,|,preview,|,forecolor,backcolor,|tablecontrols,|,hr,removeformat,visualaid,|,iespell,media,|,ltr,rtl",
            theme_advanced_buttons3: "",
            theme_advanced_buttons4: "",
            theme_advanced_toolbar_location: "top",
            theme_advanced_toolbar_align: "left",
            theme_advanced_statusbar_location: "bottom",
            theme_advanced_resizing: true,
            language: "en",
            relative_urls: false,
        });
    });
</script>
