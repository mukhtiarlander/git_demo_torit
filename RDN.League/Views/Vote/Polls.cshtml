@model RDN.Portable.Classes.Voting.PollBase
@{
    ViewBag.Title = "Polls";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var memId = RDN.Library.Classes.Account.User.GetMemberId();
}

<ol class="breadcrumb">
    <li><a href="@RDN.Utilities.Config.ConfigManager.InternalSite">Home</a></li>
    <li class="active">Polls For @Model.LeagueName</li>
</ol>

<div class="panel panel-default margin-top-20">
    <div class="panel-heading">
        <div class="row">
            <div class="col-xs-6">
                <h3 style="margin-top:5px !important"><i class="fa fa-lg fa-bullhorn"></i> Polls For @Model.LeagueName</h3>
            </div>
            <div class="col-xs-6 text-right">
                @if (Model.IsPollManager)
                {
                    <a class="btn btn-sm btn-success margin-top-5" href="@Url.Content("~/poll/add/" + Model.LeagueId.ToString().Replace("-", ""))" title="Create Poll">
                        <i class="fa fa-plus-circle"></i> Create
                    </a>
                }
            </div>
        </div>
        <div class="text-muted">Polls are a way of asking questions to the league and getting quick responses of the mood of your league.</div>
    </div>
    <div class="panel-body no-padding padding-top-10">
        <table class="table table-striped table-hover table-condensed no-margin-bottom" id="jobBoard">
            <thead>
                <tr>
                    <th>Poll</th>
                    <th>
                        Votes/Total
                    </th>
                    <th>
                        Public
                    </th>
                    <th>Created</th>
                    <th class="text-center">Vote</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Polls.Count; i++)
                {
                    if (Model.Polls[i].Version == 2 && (Model.Polls[i].IsCurrentMemberAllowedToVote || Model.IsPollManager))
                    {
                        <tr>
                           
                            <td class="vertical-middle">
                            @if (Model.IsPollManager || Model.Polls[i].IsOpenToLeague)
                            { 
                                <a href="@Url.Content("~/poll/viewv2/" + Model.LeagueId.ToString().Replace("-", "") + "/" + Model.Polls[i].VotingId)">@Model.Polls[i].Question</a>
                            }
                            else
                            {
                                @Model.Polls[i].Question
                            }
                            </td>
                            <td class="vertical-middle">
                                @Model.Polls[i].Voted / @Model.Polls[i].NonVotes
                            </td>
                            <td class="vertical-middle">
                                @Model.Polls[i].IsPublic
                            </td>
                            <td class="vertical-middle">
                                @RDN.Utilities.Dates.DateTimeExt.RelativeDateTime(Model.Polls[i].Created)
                            </td>
                            <td class="text-center vertical-middle">
                                @if (!Model.Polls[i].IsClosed && Model.Polls[i].IsCurrentMemberAllowedToVote)
                                {
                                    if (Model.Polls[i].DidCurrentMemberVoted == true)
                                    {
                                        <a class="btn btn-success btn-sm" title="You Voted" href="@Url.Content("~/poll/votev2/" + Model.LeagueId.ToString().Replace("-", "") + "/" + Model.Polls[i].VotingId)">
                                            <i class="fa fa-thumbs-o-up"></i>
                                        </a>
                                    }
                                    else
                                    {
                                        <a class="btn btn-default btn-sm" title="Vote" href="@Url.Content("~/poll/votev2/" + Model.LeagueId.ToString().Replace("-", "") + "/" + Model.Polls[i].VotingId)">
                                            <i class="fa fa-thumbs-o-up"></i>
                                        </a>
                                    }
                                }
                                else if (Model.Polls[i].IsCurrentMemberAllowedToVote)
                                {
                                    <span>Closed</span>
                                }
                                else
                                {
                                    <i class="fa fa-thumbs-o-up text-muted" title="Vote Not Allowed"></i>
                                }
                            </td>
                            <td class="vertical-middle">
                                @if (Model.IsPollManager)
                                {
                                    <a class="btn btn-sm btn-info" href="@Url.Content("~/poll/edit/" + Model.LeagueId.ToString().Replace("-", "") + "/" + Model.Polls[i].VotingId)"><i class="fa fa-pencil"></i> Edit</a>
                                    <a class="btn btn-sm btn-warning" href="@Url.Content("~/poll/viewv2/" + Model.LeagueId.ToString().Replace("-", "") + "/" + Model.Polls[i].VotingId)"><i class="fa fa-eye"></i> View</a>
                                }
                                else if (Model.Polls[i].IsOpenToLeague)
                                {
                                    <a class="btn btn-sm btn-warning" href="@Url.Content("~/poll/viewv2/" + Model.LeagueId.ToString().Replace("-", "") + "/" + Model.Polls[i].VotingId)"><i class="fa fa-eye"></i> View</a>
                                }
                            </td>
                            
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $('#members').dataTable({
            "bPaginate": false,
            "bLengthChange": false,
            "bFilter": true,
            "bSort": true,
            "bInfo": false,
            "bAutoWidth": false,
            "aaSorting": []
        });
    });
</script>

