@using RDN.Library.Classes.Game
@using RDN.League.Classes.Enums
@model Tournament
@{
    Layout = null;
}
@{
    ViewBag.Title = "View " + Model.Name + " Tournament";
    Layout = "~/Views/Shared/_Layout.cshtml";
    Guid memId = RDN.Library.Classes.Account.User.GetMemberId();
    bool subPaid = RDN.Library.Cache.MemberCache.CheckIsLeagueSubscriptionPaid(memId);
}
<ol class="breadcrumb">
    <li><a href="@RDN.Utilities.Config.ConfigManager.InternalSite">Home</a></li>
    <li><a href="@Url.Content("~/tournament/view/all/")">Tournaments</a></li>
    <li class="active">Manage</li>
</ol>
<div class="row">
    <div class="col-xs-12 col-md-10 col-md-offset-1 col-lg-8 col-lg-offset-2">
        <div class="panel panel-default">
            <div class="panel-heading">
                <div class="row">
                    <div class="col-xs-12 col-sm-8">
                        <h3 class="margin-bottom-15 margin-top-5">
                            <i class="fa fa-trophy"></i> @Model.Name
                        </h3>
                    </div>
                    <div class="col-xs-12 col-sm-4 text-right">
                        @if (Model.TournamentType > RDN.Library.Classes.Game.Tournaments.TournamentTypeEnum.None)
                        {
                            <a class="btn btn-success btn-sm" title="Tournament Brackets" href="@Url.Content("~/tournament/brackets/" + @Model.PrivateKey.ToString().Replace("-", "") + "/" + @Model.Id.ToString().Replace("-", ""))">
                               <i class="fa fa-sitemap"></i> Brackets
                            </a>
                        }
                        <a class="btn btn-primary btn-sm" href="@Url.Content("~/tournament/owners/" + Model.PrivateKey.ToString().Replace("-", "") + "/" + Model.Id.ToString().Replace("-", ""))" title="Owners">
                            <i class="fa fa-group"></i> Owners
                        </a>
                    </div>
                </div>
                <span class="text-muted">
                    Here you can view the tournament. In order to add games to this tournament, you will need to go to the manage
                    game screen for the game you wish to add. This can be seen under the <a href="@Url.Content("~/game/manage/all")">owned games menu</a>.
                </span>
            </div>
            <div class="panel-body">
                @using (Html.BeginForm("UpdateTournament", "Tournament", FormMethod.Post, new { @id = "createNewItem" }))
                {

                    <div class="row">
                        <div class="col-xs-12">
                            <label class="form-label">
                                Tournament Name
                            </label>
                            <div class="margin-bottom-15">
                                @Html.TextBoxFor(x => x.Name, new { @class = "form-control margin-bottom-5" })
                                @if (Model.IsPublished)
                                {
                                    <a target="_blank" href="@Url.Content("http://rdnation.com/roller-derby-tournament/" + Model.Id.ToString().Replace("-", "") + "/" + RDN.Utilities.Strings.StringExt.ToSearchEngineFriendly(Model.Name))">View Public Tournament</a>
                                }
                                else
                                {
                                    <input type="button" class="btn btn-success btn-sm w100" value="Publish" onclick="Tournament.PublishTournament(this)" /><img id="publishTournament" src="@Url.Content("~/content/images/greenCheck.png")" class="displayNone" />
                                }
                            </div>
                        </div>
                        <div class="col-xs-12 col-md-6">
                            <label class="form-label">
                                Start Date
                            </label>
                            <div class="margin-bottom-15">
                                @Html.TextBoxFor(x => x.StartDateDisplay, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-md-6">
                            <label class="form-label">
                                End Date
                            </label>
                            <div class="margin-bottom-15">
                                @Html.TextBoxFor(x => x.EndDateDisplay, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-md-6">
                            <label class="form-label">
                                Tournament Website
                            </label>
                            <div class="margin-bottom-15">
                                @Html.TextBoxFor(x => x.TournamentWebsite, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-md-6">
                            <label class="form-label">
                                Class Type
                            </label>
                            <div class="margin-bottom-15">
                                @Html.DropDownListFor(x => x.TournamentClass, Model.TournamentClass.ToSelectListDropDown(), "Choose Class...", new { @class = "full-width" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-md-6">
                            <label class="form-label">
                                Seeding Performance Rounds
                            </label>
                            <div class="margin-bottom-15">
                                @Html.DropDownListFor(x => x.TouramentTypeForSeedingEnum, Model.TouramentTypeForSeedingEnum.ToSelectListDropDown(), "Choose Class...", new { @class = "full-width margin-bottom-5" })
                                <span class="i text-muted">To seed based on performance, choose class.  <a href="http://wiki.rdnation.com/Online_Tournament#Seeding_a_Tournament_for_Performance_Rounds">Help</a></span>
                            </div>
                        </div>
                        <div class="col-xs-12 col-md-6">
                            <label class="form-label">
                                Tournament Type
                            </label>
                            <div class="margin-bottom-15">
                                @Html.DropDownListFor(x => x.TournamentType, Model.TournamentType.ToSelectListDropDown(), "Choose Class...", new { @class = "full-width margin-bottom-25" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-md-6">
                            <label class="form-label">
                                Address of the tournament
                            </label>
                            <div class="margin-bottom-15">
                                @Html.TextBoxFor(x => x.Address, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-md-6">
                            <label class="form-label">
                                Address 2
                            </label>
                            <div class="margin-bottom-15">
                                @Html.TextBoxFor(x => x.Address2, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-md-6">
                            <label class="form-label">
                                City
                            </label>
                            <div class="margin-bottom-15">
                                @Html.TextBoxFor(x => x.City, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-md-6">
                            <label class="form-label">
                                State
                            </label>
                            <div class="margin-bottom-15">
                                @Html.TextBoxFor(x => x.State, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-md-6">
                            <label class="form-label">
                                Zip Code
                            </label>
                            <div class="margin-bottom-15">
                                @Html.TextBoxFor(x => x.ZipCode, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-md-6">
                            <label class="form-label">
                                Country
                            </label>
                            <div class="margin-bottom-15">
                                @Html.DropDownListFor(x => x.CountryId, (SelectList)ViewBag.Countries, new { @class = "full-width" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-md-6">
                            <label class="form-label">
                                Paywall For Video
                            </label>
                            <div class="margin-bottom-15">
                                @Html.DropDownListFor(x => x.PaywallId, (SelectList)ViewBag.PayWalls, "Select Paywall...", new { @class = "full-width margin-bottom-5" })
                                <span class="i text-muted">Optional: Paywall used on Video</span>
                            </div>
                        </div>
                        <div class="col-xs-12 col-md-6">
                            <label class="form-label">
                                Embed Video String
                            </label>
                            <div class="margin-bottom-15">
                                @Html.TextBoxFor(x => x.EmbedVideoString, new { @class = "form-control  margin-bottom-5 height35" })
                                <span class="i text-muted">Embed String for Live Video Feed</span>
                            </div>
                        </div>
                        <div class="col-xs-12 col-md-6">
                            <label class="form-label">
                                Shop To Advertise
                            </label>
                            <div class="margin-bottom-15">
                                @Html.DropDownListFor(x => x.SelectedShop, new SelectList(Model.AvailableShops, "MerchantId", "ShopName"), "--Select Shop", new { @class = "full-width margin-bottom-5" })
                                <span class="i text-muted">If You select a Shop, the game screen will show the merchandise from that shop</span>
                            </div>
                        </div>
                        <div class="col-xs-12 margin-bottom-15">
                            <button class="btn btn-success" type="submit" value="Update"><i class="fa fa-save"></i> Update</button>
                        </div>
                    </div>

                    @Html.HiddenFor(x => x.Id)
                    @Html.HiddenFor(x => x.PrivateKey)
                }
                <div class="panel-footer scroll-x" style="background:none; margin-left:-15px; margin-right:-15px;">
                    <table class="table table-striped table-hover table-condensed" id="games">
                        <thead>
                            <tr>
                                <th>
                                    Game Name
                                </th>
                                <th>
                                    Date
                                </th>
                                <th>
                                    Team 1
                                </th>
                                <th>
                                    Team 2
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.Games.Count; i++)
                            {

                            <tr class="@(i % 2 == 0 ? "tr1" : "tr0")">
                                <td>
                                    <a href="@Url.Content("~/Game/" + Model.Games[i].GameId.ToString().Replace("-", "") + "/" + Model.Games[i].GameName)">
                                        @Model.Games[i].GameName
                                    </a>
                                </td>
                                <td>
                                    @Model.Games[i].GameDate.ToString("MM/dd/yyyy")
                                </td>
                                <td>
                                    @if (Model.Games[i].Team1LinkId == new Guid())
                                        {@Model.Games[i].Team1Name}
                                        else
                                        {
                                        <a href="@Url.Content("http://rdnation.com/roller-derby-league/" + RDN.Utilities.Strings.StringExt.ToSearchEngineFriendly(Model.Games[i].Team1Name) + "/" + Model.Games[i].Team1LinkId.ToString().Replace("-", ""))">
                                            @Model.Games[i].Team1Name
                                        </a>
                                        }
                                </td>
                                <td>
                                    @if (Model.Games[i].Team2LinkId == new Guid())
                                        {@Model.Games[i].Team2Name}
                                        else
                                        {
                                        <a href="@Url.Content("http://rdnation.com/roller-derby-league/" + RDN.Utilities.Strings.StringExt.ToSearchEngineFriendly(Model.Games[i].Team2Name) + "/" + Model.Games[i].Team2LinkId.ToString().Replace("-", ""))">
                                            @Model.Games[i].Team2Name
                                        </a>
                                        }
                                </td>
                            </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="panel-footer text-center" style="background:none; margin-left:-15px; margin-right:-15px">
                        <h4>
                            Upload Logo
                        </h4>
                        @using (Html.BeginForm("UploadItemPictures", "Tournament", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            <div class="margin-bottom-15 margin-top-10">
                            @foreach (var image in Model.Photos)
                            {
                                <img src="@image.ImageUrl" alt="@image.Alt" id="image-@image.PhotoId"  class="mh150 mw150"/>
                            }
                            </div>
                            <div class="row">
                                <div class="col-xs-12 margin-bottom-10">
                                   <i class="fa fa-picture-o"></i> Upload default picture
                                </div>
                                <div class="col-xs-12 col-md-6">
                                    <input type="file" name="file" id="file" class="btn btn-default full-width" onchange="ValidatePhoto(this)" />
                                </div>
                                <div class="col-xs-12 col-md-6 text-left">
                                    <button type="submit" class="btn btn-success"><i class="fa fa-upload"></i> Upload Pictures</button>
                                </div>
                            </div>    
                            @Html.HiddenFor(x => x.Id)
                            @Html.HiddenFor(x => x.PrivateKey)
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
  

<script type="text/javascript">

    $('#EndDateDisplay').datepicker({
        onSelect: function (value, date) {
            endDate = new Date(value);
            if (endDate < startDate) {
                $('#StartDateDisplay').val($('#EndDateDisplay').val());
                startDate = endDate;
            }
        }
    });
    $('#StartDateDisplay').datepicker({
        onSelect: function (value, date) {
            startDate = new Date(value);
            if (endDate < startDate) {
                $('#EndDateDisplay').val($('#StartDateDisplay').val());
                endDate = startDate;
            }
        }
    });

    $(document).ready(function () {
        Tournament.SetTournamentId("@Model.Id");
        $('#games').dataTable({
            "aaSorting": [[1, "desc"]],
            "bPaginate": false,
            "bLengthChange": false,
            "bFilter": true,
            "bSort": true,
            "bInfo": false,
            "oLanguage": { "sSearch": "" },
            "bAutoWidth": false,
        });
        $('#games_filter input').addClass('form-control').attr("placeholder", "Search");
    });

    $("#createNewItem").validate({
        rules: {
            DescriptionOfPaywall: "required",
            StartDateDisplay: { required: true, lessThanEqual: "#EndDateDisplay" },
            EndDateDisplay: { required: true, greaterThanEqual: "#StartDateDisplay" },
            PassCodeForGames: {
                required: true
            }
        }
    });

</script>
