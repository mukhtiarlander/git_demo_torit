@using RDN.Raspberry.Models.Helpers
@using RDN.Utilities.Error
@model RDN.Raspberry.Models.OutModel.GenericSingleModel<RDN.Raspberry.Models.Utilities.SimplePager<RDN.Library.Classes.Error.Classes.Error>>
@{    
    Layout = "~/Views/Shared/_Layout.cshtml"; ;
}
<h2>Errors</h2>
@using (Html.BeginForm("Errors", "Admin"))
{
    <input type="hidden" name="DeleteAll" value="true" />
    <input type="submit" value="Delete all" onclick="return confirm('Are you sure that you want to delete all error messages? (This can not be undone)');" />
}
@Html.Raw(MessageHelper.PrintMessages(Model.MessageList))
Showing error(s) @(((Model.Model.CurrentPage - 1) * 20) + 1)
- @(Model.Model.CurrentPage * 20 > Model.Model.NumberOfRecords ? Model.Model.NumberOfRecords : Model.Model.CurrentPage * 20)
of @Model.Model.NumberOfRecords
<br />
@using (Html.BeginForm("Errors", "Admin"))
{
    <input type="hidden" name="NumberOfPages" value="@Model.Model.NumberOfPages.ToString()"/>
    <input type="hidden" name="NumberOfRecords" value="@Model.Model.NumberOfRecords.ToString()"/>
    <span>Page: </span>@Html.DropDownList("CurrentPage", Model.Model.Pages)
    <input type="submit" value="Show" />
}
<br />
<table>
    @foreach (var item in Model.Model.Items)
    {
        <tr>
            <td colspan="2">
                @using (Html.BeginForm("Errors", "Admin"))
                {
                    <text>
                    <input type="hidden" name="CurrentPage" value="@Model.Model.CurrentPage.ToString()"/>
                    <input type="hidden" name="NumberOfPages" value="@Model.Model.NumberOfPages.ToString()"/>
                    <input type="hidden" name="NumberOfRecords" value="@Model.Model.NumberOfRecords.ToString()"/>
                    <input type="hidden" name="ItemToDelete" value="@item.ErrorId.ToString()"/>
                    <input type="submit" value="Delete" />
                    </text>
                }
            </td>
        </tr>
        <tr>
            <td style="font-weight: bold;">Error date:
            </td>
            <td>@item.Created.ToString("MM.dd.yyyy HH:MM:ss")
            </td>
        </tr>
                if (item.ErrorSeverity.HasValue)
                { 
     
        <tr>
            <td style="font-weight: bold;">Severity:
            </td>
            <td>@(item.ErrorSeverity.HasValue ? item.ErrorSeverity.Value.ToString() : string.Empty)
            </td>
        </tr>    
                }
       
        <tr>
            <td style="font-weight: bold;">AssemblyName:
            </td>
            <td>@item.AssemblyName
            </td>
            <td style="font-weight: bold;">AssemblyVersion:
            </td>
            <td>@item.AssemblyVersion
            </td>
        </tr>
      
                if (item.ErrorGroup.HasValue)
                { 
        <tr>
            <td style="font-weight: bold;">Group:
            </td>
            <td>@(item.ErrorGroup.HasValue ? item.ErrorGroup.Value.ToString() : string.Empty)
            </td>
        </tr>    
       
                }
        <tr>
            <td style="font-weight: bold;">ErrorNameSpace:
            </td>
            <td>@item.ErrorNameSpace
            </td>
            <td style="font-weight: bold;">NameSpace:
            </td>
            <td>@item.NameSpace
            </td>
            <td style="font-weight: bold;">Error MethodName:
            </td>
            <td>@item.MethodName
            </td>
        </tr>
      
        <tr>
            <td colspan="6">
                @if (item.Data.Where(x => x.DataType == ErrorDataDetail.ErrorDataType.Parameter).Count() > 0)
                {                           
                    <table style="border-style: solid; border-width: 1px; float: left; margin-right: 10px;">
                        <thead>
                            <th colspan="2">Parameter
                            </th>
                        </thead>
                        <tbody>
                            @foreach (var data in item.Data.Where(x => x.DataType == ErrorDataDetail.ErrorDataType.Parameter))
                            {                        
                                <tr>
                                    <td style="padding-right: 10px;">@data.Key
                                    </td>
                                    <td>@data.Value
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>                
                }
                @if (item.Data.Where(x => x.DataType == ErrorDataDetail.ErrorDataType.Session).Count() > 0)
                {
                    <table style="border-style: solid; border-width: 1px; float: left; margin-right: 10px;">
                        <thead>
                            <th colspan="2">Session
                            </th>
                        </thead>
                        <tbody>
                            @foreach (var data in item.Data.Where(x => x.DataType == ErrorDataDetail.ErrorDataType.Session))
                            {                        
                                <tr>
                                    <td style="padding-right: 10px;">@data.Key
                                    </td>
                                    <td>@data.Value
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                @if (item.Data.Where(x => x.DataType == ErrorDataDetail.ErrorDataType.Cookie).Count() > 0)
                {           
                    <table style="border-style: solid; border-width: 1px; float: left; margin-right: 10px;">
                        <thead>
                            <th colspan="2">Cookie
                            </th>
                        </thead>
                        <tbody>
                            @foreach (var data in item.Data.Where(x => x.DataType == ErrorDataDetail.ErrorDataType.Cookie))
                            {                        
                                <tr>
                                    <td style="padding-right: 10px;">@data.Key
                                    </td>
                                    <td>@data.Value
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                @if (item.Data.Where(x => x.DataType == ErrorDataDetail.ErrorDataType.UserData).Count() > 0)
                {   
                    <table style="border-style: solid; border-width: 1px; float: left; margin-right: 10px;">
                        <thead>
                            <th colspan="2">UserData
                            </th>
                        </thead>
                        <tbody>
                            @foreach (var data in item.Data.Where(x => x.DataType == ErrorDataDetail.ErrorDataType.UserData))
                            {                        
                                <tr>
                                    <td style="padding-right: 10px;">@data.Key
                                    </td>
                                    <td>
                                        @if (data.Key == "User identity")
                                        {
                                            <a href="@RDN.Portable.Config.ServerConfig.WEBSITE_INTERNAL_DEFAULT_LOCATION/utilities/sus?email=@data.Value" target="_blank">@data.Value</a>
                                        }
                                        else
                                        { 
                                            <span>@data.Value</span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>                
                }
                @if (item.Data.Where(x => x.DataType == ErrorDataDetail.ErrorDataType.ServerVariable).Count() > 0)
                {           
                    <table style="border-style: solid; border-width: 1px; float: left; margin-right: 10px;">
                        <thead>
                            <th colspan="2">Server variables
                            </th>
                        </thead>
                        <tbody>
                            @foreach (var data in item.Data.Where(x => x.DataType == ErrorDataDetail.ErrorDataType.ServerVariable))
                            {                        
                                <tr>
                                    <td style="padding-right: 10px;">@data.Key
                                    </td>
                                    <td>
                                        @if (data.Key == "URL_REFFERER" || data.Key == "URL")
                                        {
                                            <a href="@data.Value" target="_blank">@data.Value</a>
                                        }
                                        else
                                        {
                                            <span>@data.Value</span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </td>
        </tr>
        <tr>
            <td colspan="2" style="height: 5px;">&nbsp;
            </td>
        </tr>
        <tr>
            <td colspan="6">
                @foreach (var detail in item.Exceptions.OrderBy(x => x.Depth))
                {
                    <p style="margin-left: @((30 + (detail.Depth * 30)).ToString())px;">
                        <span style="font-weight: bold; font-size: large;">Method: @detail.MethodName</span><br />
                        @detail.Message<br />
                        <br />
                        @detail.StackTrace
                        <span style="height: 35px;">&nbsp;</span>
                    </p>
                }
            </td>
        </tr>
        <tr>
            <td style="font-weight: bold;">Additional Information:
            </td>
            <td colspan="5">
                @if (item.AdditionalInformation != null && item.AdditionalInformation.Contains("message"))
                {
                    foreach (string split in item.AdditionalInformation.Split('|').Reverse())
                    {
                    <div>@split</div>
                    }
                }
                else
                { 
                    @item.AdditionalInformation
                }
            </td>
        </tr>
       
        <tr>
            <td colspan="6">
                <hr />
            </td>
        </tr>
    }
</table>
<br />
<br />
Showing error(s) @(((Model.Model.CurrentPage - 1) * 20) + 1)
- @(Model.Model.CurrentPage * 20 > Model.Model.NumberOfRecords ? Model.Model.NumberOfRecords : Model.Model.CurrentPage * 20)
of @Model.Model.NumberOfRecords
<br />
<br />
@using (Html.BeginForm("Errors", "Admin"))
{
    <text>
    <input type="hidden" name="NumberOfPages" value="@Model.Model.NumberOfPages.ToString()"/>
    <input type="hidden" name="NumberOfRecords" value="@Model.Model.NumberOfRecords.ToString()"/>
    Showing page: @Html.DropDownList("CurrentPage", Model.Model.Pages)
    <input type="submit" value="Show" />
    </text>
}
<br />
<br />
<br />
<br />
@using (Html.BeginForm("Errors", "Admin"))
{
    <text>
    <input type="hidden" name="DeleteAll" value="true" />
    <input type="submit" value="Delete all" onclick="return confirm('Are you sure that you want to delete all error messages? (This can not be undone)');" />
    </text>
}
<br />
<br />
<br />
<br />
