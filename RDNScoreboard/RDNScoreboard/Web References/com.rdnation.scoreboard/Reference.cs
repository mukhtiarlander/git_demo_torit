//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace RDNScoreboard.com.rdnation.scoreboard {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ScoreBoardSoap", Namespace="http://www.rdnation.com/Api/Scoreboard.asmx")]
    public partial class ScoreBoard : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CurrentBetaDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitFeedbackOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ScoreBoard() {
            this.Url = global::RDNScoreboard.Properties.Settings.Default.RDNScoreboard_com_rdnation_scoreboard_ScoreBoard;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CurrentBetaDetailsCompletedEventHandler CurrentBetaDetailsCompleted;
        
        /// <remarks/>
        public event SubmitFeedbackCompletedEventHandler SubmitFeedbackCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.rdnation.com/Api/Scoreboard.asmx/CurrentBetaDetails", RequestNamespace="http://www.rdnation.com/Api/Scoreboard.asmx", ResponseNamespace="http://www.rdnation.com/Api/Scoreboard.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BetaDetails CurrentBetaDetails() {
            object[] results = this.Invoke("CurrentBetaDetails", new object[0]);
            return ((BetaDetails)(results[0]));
        }
        
        /// <remarks/>
        public void CurrentBetaDetailsAsync() {
            this.CurrentBetaDetailsAsync(null);
        }
        
        /// <remarks/>
        public void CurrentBetaDetailsAsync(object userState) {
            if ((this.CurrentBetaDetailsOperationCompleted == null)) {
                this.CurrentBetaDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrentBetaDetailsOperationCompleted);
            }
            this.InvokeAsync("CurrentBetaDetails", new object[0], this.CurrentBetaDetailsOperationCompleted, userState);
        }
        
        private void OnCurrentBetaDetailsOperationCompleted(object arg) {
            if ((this.CurrentBetaDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrentBetaDetailsCompleted(this, new CurrentBetaDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.rdnation.com/Api/Scoreboard.asmx/SubmitFeedback", RequestNamespace="http://www.rdnation.com/Api/Scoreboard.asmx", ResponseNamespace="http://www.rdnation.com/Api/Scoreboard.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SubmitFeedback(string feedback) {
            this.Invoke("SubmitFeedback", new object[] {
                        feedback});
        }
        
        /// <remarks/>
        public void SubmitFeedbackAsync(string feedback) {
            this.SubmitFeedbackAsync(feedback, null);
        }
        
        /// <remarks/>
        public void SubmitFeedbackAsync(string feedback, object userState) {
            if ((this.SubmitFeedbackOperationCompleted == null)) {
                this.SubmitFeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitFeedbackOperationCompleted);
            }
            this.InvokeAsync("SubmitFeedback", new object[] {
                        feedback}, this.SubmitFeedbackOperationCompleted, userState);
        }
        
        private void OnSubmitFeedbackOperationCompleted(object arg) {
            if ((this.SubmitFeedbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitFeedbackCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.rdnation.com/Api/Scoreboard.asmx")]
    public partial class BetaDetails {
        
        private decimal currentVersionField;
        
        private string installerWwwField;
        
        private System.DateTime publishedField;
        
        /// <remarks/>
        public decimal CurrentVersion {
            get {
                return this.currentVersionField;
            }
            set {
                this.currentVersionField = value;
            }
        }
        
        /// <remarks/>
        public string InstallerWww {
            get {
                return this.installerWwwField;
            }
            set {
                this.installerWwwField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Published {
            get {
                return this.publishedField;
            }
            set {
                this.publishedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void CurrentBetaDetailsCompletedEventHandler(object sender, CurrentBetaDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrentBetaDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrentBetaDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BetaDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BetaDetails)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void SubmitFeedbackCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591